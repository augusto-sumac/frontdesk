openapi: 3.0.1
info:
  title: NextPax Supply API
  description: "**NextPax -  Supply API specification** \n\nThis document details\
    \ the service endpoints, request and\nresponse schemas that supply partners can\
    \ use to push listings information to NextPax Platform.\nAll features of listing\
    \ includes creating a new listings, updating existing listings, adding listing\
    \ content, guest and cancelation policies, bedroom settings, fees and taxes, pricing\
    \ and calendar availability as well as channel designation.\n\n**Authentication\
    \ - OAuth2 Authentication**\n\nNextPax Supply API endpoints for publishing listing\
    \ or reservation data\nneed OAuth2 authentication for accessing the endpoints.\
    \ Each supply partner will be\nissued a unique client_credetials that will be\
    \ used by NextPax to generate the token for all endpoints.\n"
  contact:
    email: support.api@nextpax.com
  version: 1.0.0
servers:
- url: https://supply.nextpax.app/api/v1
  description: "[Production Server]"
- url: https://supply.sandbox.nextpax.app/api/v1
  description: '[Sandbox Server]'
security:
- openIdProd: []
- openIdSandbox: []
paths:
  /content/properties:
    post:
      tags:
      - Content
      summary: Create a new property
      description: |
        Property Create API for a supply partner to push a new listing/property data to NextPax channel management platform.
          * If property already exists, no new property will be created, referencing supplier property ID
          * Returns supplier id and NextPax id for that property.
          * Please note that for property images we recommend the use of jpeg/jpg and png image formats since many of the larger OTAs only support these.
      operationId: createNewProperty
      requestBody:
        description: Request Sample and Schema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyCreateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /content/properties/{propertyId}:
    get:
      tags:
      - Content
      summary: Retrieve an existing property
      description: |-
        Get Property API for a partner to retrieve an existing property data from NextPax Channel Management platform.
          * A valid NextPax property Id is required in the path.
          * The response will include all property data (general, subrooms, images, etc).
      operationId: retrieveExistingProperty
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property to retrieve content.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyRetrieveResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    post:
      tags:
      - Content
      summary: Update an existing property
      description: |-
        Property API for a partner to push any updates for an existing property data to NextPax Channel Management platform.
          * When data is pushed, a valid NextPax property Id is required in the path.
          * When data is pushed, will be an incremental update payload and override existing record.
          * Mandatory fields will always be pushed with changes.
          * The request can include all property data (general, subrooms, images, etc) or just general information.
          * Please note that for property images we recommend the use of jpeg/jpg and png image formats since many of the larger OTAs only support these.
      operationId: updateExistingProperty
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property to update content.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      requestBody:
        description: Request Sample and Schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePropertyRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    delete:
      tags:
      - Content
      summary: Delete an existing property
      description: |-
        Delete a property from Nextpax platform. You are only allowed to delete a property if:
          * You are the owner of the property.
          * The property is not enable for any channel.
          * The property must not have children properties (for MU / UT classifications).
      operationId: deleteExistingProperty
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property to be deleted.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /content/properties/index:
    get:
      tags:
      - Content
      summary: Get an index of all existing partner properties.
      description: |-
        Property Index API for a partner to get a list of all their existing properties in NextPax Channel Management platform.
          * This returns only an index (property ids, status).
          * Parameter propertyManager is optional.
          * Pagination is recommended.
      operationId: getPropertiesIndex
      parameters:
      - name: propertyManager
        in: query
        description: to be used by property management systems when it is desired
          to retrieve the index for a specific property manager.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: DM
        example: DM
      - name: limit
        in: query
        description: "indicate how many items per request to retrieve, for pagination."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 6
        example: 100
      - name: offset
        in: query
        description: "The number of items to skip before starting to collect the result\
          \ set, for pagination."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 4
        example: 10
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesIndexResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /content/properties/{propertyId}/general:
    get:
      tags:
      - Content
      summary: Get general information for existing properties.
      description: |
        Property General Information API allows for retrieving general information for existing properties in NextPax channel management platform.
          * NextPax property Id is required
      operationId: getGeneralExistingProperty
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesGeneralResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    post:
      tags:
      - Content
      summary: Update general information for an existing property.
      description: |
        Property General Information API allows for updating general information to a property in NextPax channel management platform.
          * If data already exists this will be overwritten.
          * NextPax property Id is required.
      operationId: updateGeneralExistingProperty
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      requestBody:
        description: Request Sample and Schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyGeneralData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessContentResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /content/properties/{propertyId}/images:
    get:
      tags:
      - Content
      summary: Get images for existing properties.
      description: |
        Property Images API allows for retrieving images for existing properties in NextPax channel management platform.
          * NextPax property Id is required
      operationId: getImagesExistingProperty
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesImagesResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    post:
      tags:
      - Content
      summary: Add/Update images for an existing property.
      description: |
        Property Images API allows for adding and updating images to a property in NextPax channel management platform.
          * If data already exists this will be overwritten.
          * NextPax property Id is required.
          * Please note that we recommend the use of jpeg/jpg and png image formats since many of the larger OTAs only support these.
      operationId: updateImagesExistingProperty
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      requestBody:
        description: Request Sample and Schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyImagesRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessContentResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /content/properties/{propertyId}/amenities:
    get:
      tags:
      - Content
      summary: Retrieve amenities for an existing property.
      description: |
        Property Amenities API allows for adding and updating amenities to pan existing property in NextPax channel management platform.
          * If data already exists this will be overwritten.
          * NextPax property Id is required.
      operationId: getAmenitiesExistingProperty
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesAmenitiesResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    post:
      tags:
      - Content
      summary: Add/Update amenities for an existing property.
      description: |
        Property Amenities API allows for adding and updating amenities to pan existing property in NextPax channel management platform.
          * If data already exists this will be overwritten.
          * NextPax property Id is required.
      operationId: updateAmenitiesExistingProperty
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      requestBody:
        description: Request Sample and Schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyAmenitiesRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessContentResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /content/properties/{propertyId}/fees:
    get:
      tags:
      - Content
      summary: Retrieve fees for an existing property.
      description: |
        Property Amenities API allows for adding and updating amenities to pan existing property in NextPax channel management platform.
          * If data already exists this will be overwritten.
          * NextPax property Id is required.
      operationId: getFeesExistingProperty
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesFeesResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    post:
      tags:
      - Content
      summary: Add/Update fees for an existing property.
      description: |
        Property Fees API allows for adding and updating fees to an existing property in NextPax channel management platform.<br>
        Amount is required and one of the fields must be present in the request: amountFlat or amountPercentage.<br>
        An amount with value 0 is only possible for the chargeType "INC".
        * If data already exists this will be overwritten.
        * NextPax property Id is required.
      operationId: updateFeesExistingProperty
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      requestBody:
        description: Request Sample and Schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyFeesRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessContentResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /content/properties/{propertyId}/taxes:
    get:
      tags:
      - Content
      summary: Retrieve taxes for an existing property.
      description: |
        Property Taxes API allows for retrieving taxes from an existing property in NextPax channel management platform.
          * NextPax property Id is required.
      operationId: getTaxesExistingProperty
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesTaxesResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    post:
      tags:
      - Content
      summary: Add/Update taxes for an existing property.
      description: |
        Property Taxes API allows for adding and updating taxes to an existing property in NextPax channel management platform.
          * If data already exists this will be overwritten.
          * NextPax property Id is required.
      operationId: updateTaxesExistingProperty
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      requestBody:
        description: Request Sample and Schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyTaxesRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessContentResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /content/properties/{propertyId}/descriptions:
    get:
      tags:
      - Content
      summary: Retrieve Descriptions for an existing property
      description: |
        Property Descriptions API allows for retrieving descriptions from an existing property in NextPax channel management platform.
          * NextPax property Id is required.
      operationId: getDescriptionsExistingProperty
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesDescriptionsResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    post:
      tags:
      - Content
      summary: Add/Update descriptions for an existing property.
      description: |
        Property Descriptions API allows for adding and updating descriptions to an existing property in NextPax channel management platform.
          * If data already exists this will be overwritten.
          * NextPax property Id is required.
      operationId: updateDescriptionsExistingProperty
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      requestBody:
        description: Request Sample and Schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyDescriptionsRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessContentResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /content/properties/{propertyId}/subrooms:
    get:
      tags:
      - Content
      summary: Retrieve Subrooms for an existing property.
      description: |
        Property Subrooms API allows for retrieving subrooms from an existing property in NextPax channel management platform.
          * NextPax property Id is required.
      operationId: getSubroomsExistingProperty
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesSubroomsResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    post:
      tags:
      - Content
      summary: Add/Update Subrooms for an existing property.
      description: |
        Property Subrooms API allows for adding and updating Subrooms to an existing property in NextPax channel management platform.
          * If data already exists this will be overwritten.
          * NextPax property Id is required.
      operationId: updateSubroomsExistingProperty
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      requestBody:
        description: Request Sample and Schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertySubroomsRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessContentResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /content/properties/{propertyId}/nearestPlaces:
    get:
      tags:
      - Content
      summary: Retrieve Nearest Places for an existing property.
      description: |
        Property Nearest Places API allows for retrieving points of interests from an existing property in NextPax channel management platform.
          * NextPax property Id is required.
      operationId: getNearestPlacesExistingProperty
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesNearestPlacesResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    post:
      tags:
      - Content
      summary: Add/Update Nearest Places for an existing property.
      description: |
        Property NearestPlaces API allows for adding and updating nearest places (points of interest) to an existing property in NextPax channel management platform.
          * If data already exists this will be overwritten.
          * NextPax property Id is required.
      operationId: updateNearestPlacesExistingProperty
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      requestBody:
        description: Request Sample and Schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyNearestPlacesRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessContentResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /content/properties/{propertyId}/policies:
    get:
      tags:
      - Content
      summary: Retrieve active policies for an existing property as well as assigned
        channels.
      description: |
        Property Policies API allows for retrieving policies assigned to an existing property in NextPax channel management platform as well as the respective applicable channels associated.
          * NextPax property Id is required.
      operationId: getPoliciesExistingProperty
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyPoliciesResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    post:
      tags:
      - Content
      summary: Set/change active policy for an existing property.
      description: |
        Property Policies API allows for setting or updating a desired policy on property level to an existing property in NextPax channel management platform.
          * If this action is not performed then the property is using the default policy sent when the property manager was created. This endpoint allows setting generic policies as well as channel specific policies.
          * If data already exists this will be overwritten. Warning: this will override the default policy currently active for a property.
          * This endpoint does not create new policies but rather allows you to assign them to specific properties. To create or update additional policies you can use the /suppliers/property-manager/{propertyManagerCode}/policies endpoint.
          * For now you cannot have more than 1 policy active per property for the same channel. The post request will not permit 2 policies for Bookingcom for example or 2 generic policies that both contain the same channel id.
          * NextPax property Id is required.
      operationId: createUpdatePoliciesExistingProperty
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      requestBody:
        description: Request Sample and Schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyPoliciesData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessContentResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /content/properties/{propertyId}/reviews:
    get:
      tags:
      - Content
      summary: Retrieve active reviews for an existing property as well.
      description: |
        Property Reviews API allows for retrieving (customer) reviews from an existing property in NextPax channel management platform.
          * NextPax property Id is required.
      operationId: getReviewsExistingProperty
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyReviewsResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    post:
      tags:
      - Content
      summary: Set/update reviews for an existing property.
      description: |
        Property Reviews API allows for setting or updating (customer) reviews related to an existing property in NextPax channel management platform.
          * If data already exists this will be overwritten. Warning: this will override all reviews currently present for a property.
          * NextPax property Id is required.
          * To remove existing reviews a post request can be made with an empty reviews array.
      operationId: createUpdateReviewsExistingProperty
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      requestBody:
        description: Request Sample and Schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyReviewsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessContentResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /ari/rates-los/{propertyId}:
    get:
      tags:
      - ARI
      summary: Returns Length of Stay (LOS) information.
      description: |
        Property rates LOS API allows a supply partner to read rates with LOS format for a property in our NextPax platform.
          * Returns "default" pricing type. To get other rate types use provide additional "pricingType" query parameters
          * A NextPax property id is required.
          * Only one price model per property is currently supported.
          * LOS tables provide pricing information as well as min/max stay restrictions.
          * If a day is not available due to a minStay restriction, then the corresponding price in the LOS table will be 0. Example: "price": [0, 400, 500] indicates that there is a minimum stay of 2 nights since the first night has a price of 0. That day is still available.
          * For maximum stay you the price array will be limited to the maximum number of nights allowed. So for a max stay of 7 nights, the price array will have 7 prices. There is a cap limit of 90 days LOS pricing.
      operationId: GetPropertyRatesLOS
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property Id to create or update LOS Pricing.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      - name: pricingType
        in: query
        description: "The pricingType to return. If not provided, \"default\" pricingType\
          \ will be returned."
        required: false
        style: form
        explode: false
        schema:
          type: string
          example: myPricingType
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatesLosGetResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    post:
      tags:
      - ARI
      summary: Create or Update Length of Stay (LOS) information.
      description: |
        Property rates LOS API allows a supply partner to create or update rates with LOS format for a property in our NextPax platform.
          * Information submitted in the post request will overwrite existing information.
          * A NextPax property id is required.
          * Only one price model per property is currently supported. If LOS rate information is sent then the property will be using only LOS pricing. If you later use periodic endpoint, the price model will switch.
          * LOS tables provide pricing information as well as min/max stay restrictions.
          * If a day is not available due to a minStay restriction, then the corresponding price in the LOS table should be 0. Example: "price": [0, 400, 500] indicates that there is a minimum stay of 2 nights since the first night has a price of 0. That day is still available.
          * For maximum stay you need to limit the price array to the maximum number of nights allowed. So for a max stay of 7 nights, the price array should have 7 prices. There is a cap limit of 90 days LOS pricing.
          * For setting dates that are or not available please use the availability endpoint.
          * If you do not have rates for different numbers of persons then the price for the maximum occupancy is sufficient. If a property has max occupancy of 6 persons and you only have rates for 6 then in the LOS request you need to send the rate only for 6 persons. The same applies if the rate for 1-6 persons is the same.
      operationId: CreateUpdatePropertyRatesLOS
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property Id to create or update LOS Pricing.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      requestBody:
        description: Request Sample and Schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RatesLosCreateUpdate'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessContentResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /ari/rates-periodic/{propertyId}:
    get:
      tags:
      - ARI
      summary: Get periodic rate information.
      description: |
        Property rates (periodic) API allows a supply partner to get rates with a period format for a property in our NextPax platform.
          * Returns "default" pricing type. To get other rate types use provide additional "pricingType" query parameter
          * A NextPax property id is required.
          * Only one price model per property is currently supported. If periodic rate information is sent then the property will be using only periodic pricing. If later on LOS endpoint is used to send data, the price model will change.
      operationId: GetPropertyRatesPeriodic
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property Id to create or update periodic
          Pricing.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      - name: pricingType
        in: query
        description: "The pricingType to return. If not provided, \"default\" pricingType\
          \ will be returned."
        required: false
        style: form
        explode: false
        schema:
          type: string
          example: myPricingType
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatesPeriodicGetResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    post:
      tags:
      - ARI
      summary: Create or Update periodic rate information.
      description: |
        Property rates (periodic) API allows a supply partner to create or update rates with a period format for a property in our NextPax platform.
          * Information submitted in the post request will overwrite existing information.
          * A NextPax property id is required.
          * Only one price model per property is currently supported. If periodic rate information is sent then the property will be using only periodic pricing. If later on LOS endpoint is used to send data, the price model will change.
          * If you do not have rates for different numbers of persons then the price for the maximum occupancy is sufficient. If a property has max occupancy of 6 persons and you only have rates for 6 then in the rate request you need to send the rate only for 6 persons. The same applies if the rate for 1-6 persons is the same.
      operationId: CreateUpdatePropertyRatesPeriodic
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property Id to create or update periodic
          Pricing.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      requestBody:
        description: Request Sample and Schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RatesPeriodicCreateUpdate'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessContentResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /ari/rate-multipliers/{propertyId}:
    get:
      tags:
      - ARI
      summary: Returns rates multiplier information for a property.
      description: "Property rates multipliers allows to set a rate multipliers for\
        \ any channel on per property level. To set \nchannel based rate multiplier\
        \ for all properties, check out the /features/{propertyManagerCode} endpoint.\n\
        \  * To work with this endpoint you need to have the rate-multipliers feature\
        \ enabled on Property Manager level.\n  * Rate Multiplier work on per channel\
        \ basis.\n"
      operationId: GetPropertyRateMultipliers
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property Id to create or update LOS Pricing.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyRateMultipliersGetResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    post:
      tags:
      - ARI
      summary: Create or Update rates multiplier information for a property.
      description: "Property rates multipliers allows to set a rate multipliers for\
        \ any channel on per property level. To set \nchannel based rate multiplier\
        \ for all properties, check out the /features/{propertyManagerCode} endpoint.\n\
        \  * To work with this endpoint you need to have the rate-multipliers feature\
        \ enabled on Property Manager level.\n  * Rate Multiplier work on per channel\
        \ basis.\n"
      operationId: CreateUpdatePropertyRateMultipliers
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property Id to create or update LOS Pricing.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      requestBody:
        description: Request Sample and Schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyRateMultipliersData'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessContentResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /ari/availability/{propertyId}:
    get:
      tags:
      - ARI
      summary: Get availability information.
      description: |
        Property Availability API allows a supply partner to get availability for a property in our NextPax platform.
          * A NextPax property id is required.
      operationId: GetPropertyAvailability
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property Id to create or update periodic
          Pricing.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityGetResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    post:
      tags:
      - ARI
      summary: Create or Update availability information.
      description: |
        Property Availability API allows a supply partner to create or update availability for a property in our NextPax platform.
          * Information submitted in the post request will overwrite existing information.
          * A NextPax property id is required.
          * The API can receive single dates or ranges.
      operationId: CreateUpdatePropertyAvailability
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property Id to create or update periodic
          Pricing.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      requestBody:
        description: Request Sample and Schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityCreateUpdate'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessContentResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /ari/rate-plans/{propertyId}:
    get:
      tags:
      - ARI
      summary: Get property rateplans information.
      description: |
        Property rateplans API allows a supply partner to get existing rateplans information for a property in our NextPax platform.
          * A NextPax property id is required.
          * A property may have one or more rateplans.
      operationId: GetPropertyRateplans
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property Id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyRateplansGetResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    post:
      tags:
      - ARI
      summary: Create or Update property rateplans information.
      description: |
        Property rateplans API allows a supply partner to create or update rateplans for a property in our NextPax platform.
          * Information submitted in the post request will overwrite existing information.
          * A NextPax property id is required.
          * One or more rateplans can be submitted. If no rateplans are submitted the property is always on default pricing.
          * Rateplans created on property level will ONLY apply to this property.
      operationId: CreateUpdatePropertyRateplans
      parameters:
      - name: propertyId
        in: path
        description: The NextPax code of a property Id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      requestBody:
        description: Request Sample and Schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyRateplansCreateUpdate'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessContentResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /suppliers/property-manager:
    post:
      tags:
      - Suppliers
      summary: Create a new property manager.
      description: |
        Property Manager API allows a PMS (Property Management System) to create property managers (also known as agencies, accounts etc) in our NextPax platform.
          * If property manager exists, no new record will be created, referencing supplier property manager code.
          * Returns property manager code.
      operationId: createNewPropertyManager
      requestBody:
        description: Request Sample and Schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyManagerCreateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyManagerGenericSuccessResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /suppliers/property-manager/{propertyManagerCode}:
    get:
      tags:
      - Suppliers
      summary: Retrieve an existing property manager.
      description: |
        Property Manager API allows a PMS (Property Management System) to retrieve an existing property managers (also known as agencies, accounts etc) in our NextPax platform.
          * An existing property manager code is required.
      operationId: retrievePropertyManager
      parameters:
      - name: propertyManagerCode
        in: path
        description: The NextPax code of a property manager to retrieve details.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: DM
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyManagerRetrieveResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    post:
      tags:
      - Suppliers
      summary: Update an existing property manager.
      description: |
        Property Manager API allows a PMS (Property Management System) to update property managers (also known as agencies, accounts etc) in our NextPax platform.
          * Information submitted in the post request will overwrite existing information.
          * Returns property manager code.
      operationId: updatePropertyManager
      parameters:
      - name: propertyManagerCode
        in: path
        description: The NextPax code of a property manager to update details.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: DM
      requestBody:
        description: Request Sample and Schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyManagerCreateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyManagerGenericSuccessResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /suppliers/property-manager/{propertyManagerCode}/policies:
    get:
      tags:
      - Suppliers
      summary: Retrieve policies for an existing property manager.
      description: |
        Property Manager Policies API allows a PMS (Property Management System) or PM (Property Manager) to retrieve cancellation and booking policies for an existing property managers (also known as agencies, accounts etc) in our NextPax platform.
          * An existing property manager code is required.
      operationId: retrievePropertyManagerPolicies
      parameters:
      - name: propertyManagerCode
        in: path
        description: The NextPax code of a property manager to retrieve details.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: DM
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyManagerPoliciesResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    post:
      tags:
      - Suppliers
      summary: Create / Update additional cancellation and booking policies for an
        existing property manager.
      description: |
        Property Manager Policies API allows a PMS (Property Management System) or PM (Property Manager) to create additional policies or update them in our NextPax platform.
          * Information submitted in the post request will overwrite existing information. One or more policies can be created and managed.
          * Returns property manager code.
      operationId: createUpdatePropertyManagerPolicies
      parameters:
      - name: propertyManagerCode
        in: path
        description: The NextPax code of a property manager to update details.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: DM
      requestBody:
        description: Request Sample and Schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyManagerPoliciesRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyManagerPoliciesSuccessResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /suppliers/property-manager/{propertyManagerCode}/rate-plans:
    get:
      tags:
      - Suppliers
      summary: Get property manager rateplans information.
      description: |
        Property Manager rateplans API allows a supply partner to get existing rateplans information for a property manager level in our NextPax platform.
          * A NextPax property manager id or code is required.
          * A property manager may have one or more rateplans.
      operationId: GetPropertyManagerRateplans
      parameters:
      - name: propertyManagerCode
        in: path
        description: The NextPax code of a property manager to retrieve rateplans.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: DM
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyManagerRateplansGetResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    post:
      tags:
      - Suppliers
      summary: Create or Update property manager rateplans information.
      description: |
        Property Manager rateplans API allows a supply partner to create or update rateplans for a property manager in our NextPax platform.
          * Information submitted in the post request will overwrite existing information.
          * A NextPax property manager id or code is required.
          * One or more rateplans can be submitted. If no rateplans are submitted the property manager is always on default pricing.
          * Rateplans created on property manager level will apply to all properties unless inclusions or exclusions have been defined.
      operationId: CreateUpdatePropertyManagerRateplans
      parameters:
      - name: propertyManagerCode
        in: path
        description: The NextPax code of a property manager to create/update rateplans.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: DM
      requestBody:
        description: Request Sample and Schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyManagerRateplansCreateUpdate'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyManagerGenericSuccessResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /suppliers/property-manager/index:
    get:
      tags:
      - Suppliers
      summary: Get an index of all existing Property Managers for a Property Management
        System.
      description: |-
        Property Manager Index API for a PMS partner to get a list of all their property managers in NextPax Channel Management platform.
          * This returns only an index (property manager name, code, nr active properties, nr inactive properties).
          * No parameter is required.
      operationId: getPropertyManagersIndex
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyManagersIndexResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /channel-management/property-manager/{propertyManagerCode}:
    get:
      tags:
      - Channel Management
      summary: Retrieve Property Manager channel management status.
      description: |
        Property Manager Channel Management API allows for retrieving the channel status for an existing property manager in NextPax channel management platform.
          * NextPax property manager code is required.
      operationId: getPropertyManagerChannelManagement
      parameters:
      - name: propertyManagerCode
        in: path
        description: The NextPax code of a property manager.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: DM
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyManagerChannelManagementResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    post:
      tags:
      - Channel Management
      summary: Enable / Disable distribution channels on PM Level
      description: |
        Property Manager Channel Management API allows for enabling or disabling of distribution channels on top level. Before individual properties can be enabled on a channel, the PM needs to be enabled first.
          * If data already exists for a channel this will be overwritten.
          * NextPax property manager code is required.
          * Any channels that were previously enabled, but not listed in the current request, will be disabled.
      operationId: propertyManagerChannelManagement
      parameters:
      - name: propertyManagerCode
        in: path
        description: The NextPax code of a property manager.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: DM
      requestBody:
        description: Request Sample and Schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyManagerChannelManagementRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyManagerGenericSuccessResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /channel-management/property-manager/{propertyManagerCode}/reviews:
    get:
      tags:
      - Channel Management
      summary: Retrieve Property Manager channel reviews.
      description: |
        Property Manager Channel Management API allows for retrieving the channel reviews for an existing property manager in NextPax channel management platform.
          * NextPax property manager code is required.
      operationId: getPropertyManagerChannelReviews
      parameters:
      - name: propertyManagerCode
        in: path
        description: The NextPax code of a property manager.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: DM
      - name: channelId
        in: query
        description: The NextPax code of channelId.
        required: false
        style: simple
        explode: false
        schema:
          type: string
          example: AIR298
      - name: fromTime
        in: query
        description: return reviews after this time.
        required: false
        style: simple
        explode: false
        schema:
          type: string
          format: datetime
          example: '2022-05-15T22:59:59+02:00'
      - name: limit
        in: query
        description: "indicate how many items per request to retrieve, for pagination."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 6
        example: 100
      - name: offset
        in: query
        description: "The number of items to skip before starting to collect the result\
          \ set, for pagination."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 4
        example: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyManagerChannelReviewsResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /channel-management/property-manager-settings/{propertyManagerCode}:
    get:
      tags:
      - Channel Management
      summary: Retrieve channel settings for the property manager
      description: |
        Property Manager Channel Management Settings API allows for a partner to retrieve settings and additional information needed for a channel. Please note that some of these settings are required to be able to enable a channel for a property manager.
          * The endpoint lists current settings for the property manager.
          * NextPax property manager code is required.
      operationId: getPropertyManagerChannelSettings
      parameters:
      - name: propertyManagerCode
        in: path
        description: The NextPax property manager code.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: DM
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyManagerChannelSettingsResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    post:
      tags:
      - Channel Management
      summary: Send channel settings for the property manager
      description: |
        Property Manager Channel Management Settings API allows for a partner to provide settings and additional information needed for a channel. Please note that some of these settings are required to be able to enable a channel for a property manager.
          * If data already exists for a channel this will be overwritten.
          * NextPax property manager code is required.
      operationId: propertyManagerChannelSettings
      parameters:
      - name: propertyManagerCode
        in: path
        description: The NextPax property manager code.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: DM
      requestBody:
        description: Request Sample and Schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyManagerChannelSettingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyManagerGenericSuccessResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /channel-management/property-manager-settings/:
    get:
      tags:
      - Channel Management
      summary: Retrieve allowed channel settings.
      description: |
        Property Manager Channel Management Settings API allows for retrieving the channel settings applicable or required for a specific channel. In this endpoint you can see what settings are required before enabling a channel for a Property Manager.
          * The content requirements refer to the minimum content a property is required to have to be eligible for a channel. These requirements apply to all properties of the property manager.
          * NextPax channelCode parameter is optional.
      operationId: getAllPropertyManagerChannelSettings
      parameters:
      - name: channelCode
        in: query
        description: The NextPax channel code to retrieve settings and requirements
          for a specific channel
        required: false
        style: form
        explode: false
        schema:
          type: string
          example: BOO147
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllPropertyManagerChannelSettingsResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /channel-management/property/{propertyId}:
    get:
      tags:
      - Channel Management
      summary: Retrieve Property channel management status.
      description: |
        Property Channel Management API allows for retrieving the channel status for an existing property in NextPax channel management platform.
          * NextPax property id is required.
      operationId: getPropertyChannelManagement
      parameters:
      - name: propertyId
        in: path
        description: The NextPax id of a property.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyChannelManagementResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    post:
      tags:
      - Channel Management
      summary: Enable / Disable distribution channels on property Level
      description: |
        Property Channel Management API allows for enabling or disabling of distribution channels on property level. Please remember to enable the channel on PM level before using this endpoint.
          * If data already exists for a channel this will be overwritten.
          * NextPax property id is required.
          * Any channels that were previously enabled, but not listed in the current request, will be disabled.
      operationId: propertyChannelManagement
      parameters:
      - name: propertyId
        in: path
        description: The NextPax id of a property .
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      requestBody:
        description: Request Sample and Schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyChannelManagementRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyManagerGenericSuccessResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /channel-management/property/{propertyId}/reviews:
    get:
      tags:
      - Channel Management
      summary: Retrieve Property channel management reviews.
      description: |
        Property Channel Management API allows for retrieving the channel reviews for an existing property in NextPax channel management platform.
          * NextPax property id is required.
      operationId: getPropertyChannelReviews
      parameters:
      - name: propertyId
        in: path
        description: The NextPax id of a property.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      - name: channelId
        in: query
        description: The NextPax code of channelId.
        required: false
        style: simple
        explode: false
        schema:
          type: string
          example: AIR298
      - name: reviewId
        in: query
        description: channel review Id
        required: false
        style: simple
        explode: false
        schema:
          type: string
          example: channelReviewId1
      - name: fromTime
        in: query
        description: query reviews from related time.
        required: false
        style: simple
        explode: false
        schema:
          type: string
          format: datetime
          example: '2022-05-15T22:59:59+02:00'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyChannelReviewsResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
  /constants/mapping-codes:
    get:
      tags:
      - Constants
      summary: Retrieve mapping information and other codes.
      description: |
        Constants mapping codes API allows for retrieving the various codes used in the NextPax channel management platform. These codes are used to indicate different property data points such as amenities, image and description types, etc. Please cache these codes on your end and make sure to check the endpoint for new codes every once in a while (once a month at least).
          * Category parameter is optional and can be used to specify what type or category of codes are requested.
      operationId: getMappingData
      parameters:
      - name: category
        in: query
        description: Used to retrieve specific codes or lists.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            example: charge-modes
            enum:
            - property-types
            - amenities
            - charge-types
            - charge-modes
            - additional-costs
            - tax-types
            - image-types
            - description-types
            - distances
            - subrooms
            - subroom-items
            - payment-methods
            - meal-plans
      responses:
        "200":
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MappingCodesResponse'
  /constants/channel-codes:
    get:
      tags:
      - Constants
      summary: Retrieve channel information and codes.
      description: |
        Constants channel codes API allows for retrieving the list of channel codes used in the NextPax channel management platform. These codes are used to identify the various distribution channels that are available. Please cache these codes on your end and make sure to check the endpoint for new codes every once in a while (once a month at least).
          * No other parameter required.
      operationId: getChannelCodesData
      responses:
        "200":
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCodesResponse'
  /constants/channel-content-definitions:
    get:
      tags:
      - Constants
      summary: Retrieve channel content definitions.
      description: "Constants channel content definitions API allows for retrieving\
        \ the list of content requirements for different \ndistribution channels in\
        \ the NextPax channel management platform.\nThe list is limited to channels\
        \ that have very specific content requirements only relevant to their own\
        \ channel.\nThat can include specific requirements for images, descriptions,\
        \ amenities, etc.\n  * No other parameter required.\n"
      operationId: getChannelContentDefinitions
      responses:
        "200":
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelContentDefinitionsResponse'
  /constants/channel-policy-codes:
    get:
      tags:
      - Constants
      summary: Retrieve specific channel policy definitions and codes.
      description: |
        Constants channel policy codes API allows for retrieving the list of policy codes used by different distribution channels in the NextPax channel management platform. The list is limited to channels that have very specific policies only relevant to their own channel. Please cache these codes on your end and make sure to check the endpoint for new codes every once in a while (once a month at least).
          * No other parameter required.
      operationId: getChannelPolicyDefinitions
      responses:
        "200":
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelPolicyDefinitionsResponse'
  /constants/currency-codes:
    get:
      tags:
      - Constants
      summary: Retrieve currency information and codes.
      description: |
        Constants currency codes API allows for retrieving the list of currency codes used by different endpoints in the NextPax Supply API. We use the official ISO 4217 standard specifies three-letter ("Alpha-3") codes for currencies worldwide. Please cache these codes on your end and note that we do not foresee any additions as the list should be complete.
          * No other parameter required.
      operationId: getCurrencyCodesData
      responses:
        "200":
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyCodesResponse'
  /constants/language-codes:
    get:
      tags:
      - Constants
      summary: Retrieve language information and codes.
      description: |
        Constants language codes API allows for retrieving the list of language codes used by different endpoints in the NextPax Supply API. We use the ISO 639-1 standard, two-letter codes, one per language. Please cache these codes on your end and note that we do not foresee any additions as the list should be complete.
          * No other parameter required.
      operationId: getLanguageCodesData
      responses:
        "200":
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageCodesResponse'
  /constants/locations:
    get:
      tags:
      - Constants
      summary: "Retrieve location information such as countries, regions and states."
      description: |
        Constants location codes API allows for retrieving the list of country codes, states or province codes as well as region codes used by different endpoints in the NextPax Supply API. We use the ISO 3166-1 alpha-2 two-letter country codes. For states/provinces as well as regions we use NextPax codes. Please cache these codes on your end and make sure to check the endpoint for new codes every once in a while (once a month at least).
          * Category parameter is optional and can be used to specify what type or category of codes are requested.
      operationId: getLocationsData
      parameters:
      - name: limit
        in: query
        description: "indicate how many items per request to retrieve, for pagination."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 3
        example: 100
      - name: offset
        in: query
        description: "The number of items to skip before starting to collect the result\
          \ set, for pagination."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 5
        example: 10
      - name: category
        in: query
        description: Used to retrieve specific codes or lists.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            example: regions
            enum:
            - countries
            - regions
            - states
      - name: countryCode
        in: query
        description: Filter the locations information for a specific country.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: NL
        example: NL
      responses:
        "200":
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationsResponse'
  /constants/channel-build-flows:
    get:
      tags:
      - Constants
      summary: Retrieve channel build status
      description: |
        This endpoint returns channel-build constants for used on other api's.
      operationId: getChannelBuildFlowsData
      parameters:
      - name: channelId
        in: query
        description: Filter by channel Id
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelBuildFlowsResponse'
  /features/{propertyManagerCode}:
    get:
      tags:
      - Features
      summary: Get information about features allowed and enabled for a PM.
      description: |
        Property manager features API allows a service to retrieve currently enabled features or available for a property manager in our NextPax platform.
          * A NextPax property manager code / abbreviation is required.
      operationId: GetPropertyManagerFeatures
      parameters:
      - name: propertyManagerCode
        in: path
        description: The NextPax property manager code or abbreviation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: SACDS000001
      - name: feature
        in: query
        description: Optional parameter to return information specific to a feature.
        required: false
        style: form
        explode: false
        schema:
          type: string
          example: currency_fx
          enum:
          - currency_fx
          - rate_multipliers
          - fee_multipliers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyManagerFeaturesGetResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
    post:
      tags:
      - Features
      summary: Update property manager features information.
      description: |
        Property manager features API allows a service to update currently enabled features or available for a property manager in our NextPax platform.
          * Information submitted in the post request will overwrite existing information.
          * Request can contain information for all features OR only the features desired.
          * To disable a feature completely simply send the feature specific object and status disabled.
          * A NextPax property id is required.
      operationId: UpdatePropertyManagerFeatures
      parameters:
      - name: propertyManagerCode
        in: path
        description: The NextPax property manager code or abbreviation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: SACDS000001
      requestBody:
        description: Request Sample and Schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyManagerFeaturesUpdate'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyManagerGenericSuccessResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
components:
  schemas:
    PropertyCreateRequest:
      title: PropertyCreateRequest
      required:
      - general
      - propertyManager
      - supplierPropertyId
      type: object
      properties:
        supplierPropertyId:
          type: string
          description: This is the property reference of the supply partner.
          example: su-28856792ff2d
        propertyManager:
          type: string
          description: This is the property manager code existing in NextPax.
          example: SAAPI000002
        parentId:
          type: string
          description: This is a NextPax property ID. This ID needs to be provided
            when linking a child unit to a parent unit (multi-unit to unit-type or
            unit-type to single-unit). Multi-unit cannot have a parent defined.
          example: 4efe8757-1f28-4d7f-b94b-6bd0dc8812e7
        general:
          $ref: '#/components/schemas/PropertyGeneralInformation'
        fees:
          type: array
          example:
          - feeCode: RES
            chargeType: MAN
            chargeMode: STA
            currency: EUR
            fromDate: '2032-10-01'
            untilDate: '2032-10-06'
            amountFlat: 300
            isTaxable: true
            applicableTaxPerc: 25.33
            includedChannels:
            - KAY380
          items:
            $ref: '#/components/schemas/PropertyFeesInformation'
        taxes:
          type: array
          example:
          - taxCode: VAT
            fromDate: '2032-10-01'
            untilDate: '2032-10-06'
            amountPercentage: 25.33
            rentIncluded: true
            excludedChannels:
            - KAY380
          items:
            $ref: '#/components/schemas/PropertyTaxesInformation'
        images:
          type: array
          example:
          - typeCode: exterior
            url: http://www.imagehost.com/image1.png
            displayPriority: 0
            caption: image 1 description
            lastUpdated: '2012-10-06'
          - typeCode: house
            url: http://www.imagehost.com/image2.png
            displayPriority: 1
            lastUpdated: '2012-10-06'
          items:
            $ref: '#/components/schemas/PropertyImageInformation'
        nearestPlaces:
          type: array
          example:
          - typeCode: DAR
            distance:
              feet: 300
          - typeCode: BUS
            distance:
              meters: 110
          items:
            $ref: '#/components/schemas/PropertyNearestPlacesInformation'
        amenities:
          type: array
          example:
          - typeCode: A19
            attributes:
            - "Y"
            - E
          items:
            $ref: '#/components/schemas/PropertyAmenitiesInformation'
        descriptions:
          type: array
          example:
          - typeCode: house
            language: EN
            text: Some quite long description of this property.
          - typeCode: interior
            language: EN
            text: Some quite long description of this property.
          items:
            $ref: '#/components/schemas/PropertyDescriptionInformation'
        subrooms:
          type: array
          example:
          - typeCode: HAL
            sequenceNumber: 1
            sizeSqMeters: 30
            items:
            - itemCode: ITM027
              itemCount: 2
              itemCapacity: 3
            - itemCode: ITM028
              itemCount: 1
              itemCapacity: 4
          - typeCode: BAT
            sequenceNumber: 2
            sizeSqFeet: 5
            items:
            - itemCode: ITM012
              itemCount: 1
              itemCapacity: 1
            - itemCode: ITM013
              itemCount: 1
              itemCapacity: 1
          items:
            $ref: '#/components/schemas/PropertySubroomsInformation'
    PropertyRetrieveResponse:
      title: PropertyCreateResponse
      required:
      - general
      - pricingModel
      - propertyManager
      - supplierPropertyId
      type: object
      properties:
        supplierPropertyId:
          type: string
          description: This is the property reference of the supply partner.
          example: su-28856792ff2d
        propertyManager:
          type: string
          description: This is the property manager code existing in NextPax.
          example: SAAPI000002
        parentId:
          type: string
          description: This is a NextPax property ID. This ID needs to be provided
            when linking a child unit to a parent unit (multi-unit to unit-type or
            unit-type to single-unit). Multi-unit cannot have a parent defined.
          example: 4efe8757-1f28-4d7f-b94b-6bd0dc8812e7
        pricingModel:
          type: string
          description: "This is the pricing model of the property. Property could\
            \ have LOS or Periodic rates. It's possible for newly created properties\
            \ to have no pricing model. Available values are: los_rates, periodic_rates,\
            \ no_rates"
          example: los_rates
          enum:
          - los_rates
          - periodic_rates
          - no_rates
        general:
          $ref: '#/components/schemas/PropertyGeneralInformation'
        fees:
          type: array
          example:
          - feeCode: RES
            chargeType: MAN
            chargeMode: STA
            currency: EUR
            fromDate: '2032-10-01'
            untilDate: '2032-10-06'
            amountFlat: 300
            isTaxable: true
            applicableTaxPerc: 25.33
            includedChannels:
            - KAY380
          items:
            $ref: '#/components/schemas/PropertyFeesInformation'
        taxes:
          type: array
          example:
          - taxCode: VAT
            fromDate: '2032-10-01'
            untilDate: '2032-10-06'
            amountPercentage: 25.33
            rentIncluded: true
            excludedChannels:
            - KAY380
          items:
            $ref: '#/components/schemas/PropertyTaxesInformation'
        images:
          type: array
          example:
          - typeCode: exterior
            url: http://www.imagehost.com/image1.png
            displayPriority: 0
            caption: image 1 description
            lastUpdated: '2012-10-06'
          - typeCode: house
            url: http://www.imagehost.com/image2.png
            displayPriority: 1
            lastUpdated: '2012-10-06'
          items:
            $ref: '#/components/schemas/PropertyImageInformation'
        nearestPlaces:
          type: array
          example:
          - typeCode: DAR
            distance:
              feet: 300
          - typeCode: BUS
            distance:
              meters: 110
          items:
            $ref: '#/components/schemas/PropertyNearestPlacesInformation'
        amenities:
          type: array
          example:
          - typeCode: A19
            attributes:
            - "Y"
            - E
          - typeCode: A05
            attributes: "true"
          items:
            $ref: '#/components/schemas/PropertyAmenitiesInformation'
        descriptions:
          type: array
          example:
          - typeCode: house
            language: EN
            text: Some quite long description of this property.
          - typeCode: interior
            language: EN
            text: Some quite long description of this property.
          items:
            $ref: '#/components/schemas/PropertyDescriptionInformation'
        subrooms:
          type: array
          example:
          - typeCode: HAL
            sequenceNumber: 1
            sizeSqMeters: 30
            items:
            - itemCode: ITM027
              itemCount: 2
              itemCapacity: 3
            - itemCode: ITM028
              itemCount: 1
              itemCapacity: 4
          - typeCode: BAT
            sequenceNumber: 2
            sizeSqFeet: 5
            items:
            - itemCode: ITM012
              itemCount: 1
              itemCapacity: 1
            - itemCode: ITM013
              itemCount: 1
              itemCapacity: 1
          items:
            $ref: '#/components/schemas/PropertySubroomsInformation'
      example:
        pricingModel: los_rates
        general:
          minOccupancy: 2
          address:
            apt: Apartment
            city: Amsterdam
            countryCode: NL
            street: P.J. Oudweg
            postalCode: 1314CH
            state: WS
            region: Florida
          checkInOutTimes:
            checkInFrom: 14:00
            checkInUntil: 22:00
            checkOutFrom: 06:00
            checkOutUntil: 11:00
          classification: unit-type
          licenseCode: LIC981
          licenseDate: '2021-10-20'
          baseCurrency: EUR
          typeCode: APP
          nationalIdentificationCode: MRTMTT91D08F205J
          numberOfUnits: 5
          geoLocation:
            latitude: 2.31
            longitude: 5.64
          maxPets: 6
          name: The Name
          maxAdults: 6
          maxOccupancy: 6
        amenities:
        - typeCode: A19
          attributes:
          - "Y"
          - E
        - typeCode: A05
          attributes: "true"
        fees:
        - feeCode: RES
          chargeType: MAN
          chargeMode: STA
          currency: EUR
          fromDate: '2032-10-01'
          untilDate: '2032-10-06'
          amountFlat: 300
          isTaxable: true
          applicableTaxPerc: 25.33
          includedChannels:
          - KAY380
        images:
        - typeCode: exterior
          url: http://www.imagehost.com/image1.png
          displayPriority: 0
          caption: image 1 description
          lastUpdated: '2012-10-06'
        - typeCode: house
          url: http://www.imagehost.com/image2.png
          displayPriority: 1
          lastUpdated: '2012-10-06'
        propertyManager: SAAPI000002
        nearestPlaces:
        - typeCode: DAR
          distance:
            feet: 300
        - typeCode: BUS
          distance:
            meters: 110
        taxes:
        - taxCode: VAT
          fromDate: '2032-10-01'
          untilDate: '2032-10-06'
          amountPercentage: 25.33
          rentIncluded: true
          excludedChannels:
          - KAY380
        supplierPropertyId: su-28856792ff2d
        descriptions:
        - typeCode: house
          language: EN
          text: Some quite long description of this property.
        - typeCode: interior
          language: EN
          text: Some quite long description of this property.
        subrooms:
        - typeCode: HAL
          sequenceNumber: 1
          sizeSqMeters: 30
          items:
          - itemCode: ITM027
            itemCount: 2
            itemCapacity: 3
          - itemCode: ITM028
            itemCount: 1
            itemCapacity: 4
        - typeCode: BAT
          sequenceNumber: 2
          sizeSqFeet: 5
          items:
          - itemCode: ITM012
            itemCount: 1
            itemCapacity: 1
          - itemCode: ITM013
            itemCount: 1
            itemCapacity: 1
        parentId: 4efe8757-1f28-4d7f-b94b-6bd0dc8812e7
    UpdatePropertyRequest:
      title: PropertyUpdateRequest
      required:
      - general
      type: object
      properties:
        parentId:
          type: string
          description: This is a NextPax property ID. This ID needs to be provided
            when linking a child unit to a parent unit (multi-unit to unit-type or
            unit-type to single-unit). Multi-unit cannot have a parent defined.
          example: 4efe8757-1f28-4d7f-b94b-6bd0dc8812e7
        general:
          $ref: '#/components/schemas/PropertyGeneralInformation'
        fees:
          type: array
          example:
          - feeCode: RES
            chargeType: MAN
            chargeMode: STA
            currency: EUR
            fromDate: '2032-10-01'
            untilDate: '2032-10-06'
            amountFlat: 300
            isTaxable: true
            applicableTaxPerc: 25.33
            includedChannels:
            - KAY380
          items:
            $ref: '#/components/schemas/PropertyFeesInformation'
        taxes:
          type: array
          example:
          - taxCode: VAT
            fromDate: '2032-10-01'
            untilDate: '2032-10-06'
            amountPercentage: 25.33
            rentIncluded: true
            excludedChannels:
            - KAY380
          items:
            $ref: '#/components/schemas/PropertyTaxesInformation'
        images:
          type: array
          example:
          - typeCode: exterior
            url: http://www.imagehost.com/image1.png
            displayPriority: 0
            caption: image 1 description
            lastUpdated: '2012-10-06'
          - typeCode: house
            url: http://www.imagehost.com/image2.png
            displayPriority: 1
            lastUpdated: '2012-10-06'
          items:
            $ref: '#/components/schemas/PropertyImageInformation'
        nearestPlaces:
          type: array
          example:
          - typeCode: DAR
            distance:
              feet: 300
          - typeCode: BUS
            distance:
              meters: 110
          items:
            $ref: '#/components/schemas/PropertyNearestPlacesInformation'
        amenities:
          type: array
          example:
          - typeCode: A19
            attributes:
            - "Y"
            - E
          - typeCode: A05
            attributes: "true"
          items:
            $ref: '#/components/schemas/PropertyAmenitiesInformation'
        descriptions:
          type: array
          example:
          - typeCode: house
            language: EN
            text: Some quite long description of this property.
          - typeCode: interior
            language: EN
            text: Some quite long description of this property.
          items:
            $ref: '#/components/schemas/PropertyDescriptionInformation'
        subrooms:
          type: array
          example:
          - typeCode: HAL
            sequenceNumber: 1
            sizeSqMeters: 30
            items:
            - itemCode: ITM027
              itemCount: 2
              itemCapacity: 3
            - itemCode: ITM028
              itemCount: 1
              itemCapacity: 4
          - typeCode: BAT
            sequenceNumber: 2
            sizeSqFeet: 5
            items:
            - itemCode: ITM012
              itemCount: 1
              itemCapacity: 1
            - itemCode: ITM013
              itemCount: 1
              itemCapacity: 1
          items:
            $ref: '#/components/schemas/PropertySubroomsInformation'
    PropertiesIndexResponse:
      required:
      - data
      - requestId
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PropertiesIndex'
        requestId:
          type: string
          description: unique request id used for identification.
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        data:
        - pricingModel: los_rates
          propertyManager: DM
          supplierPropertyId: ABC 012
          propertyId: "123456"
          parentId: "1234"
          status: active
        - pricingModel: los_rates
          propertyManager: DM
          supplierPropertyId: ABC 012
          propertyId: "123456"
          parentId: "1234"
          status: active
        requestId: d6c84f022bc94ba08558af7873c3f5a1
    PropertiesIndex:
      required:
      - propertyId
      - propertyManager
      - status
      - supplierPropertyId
      type: object
      properties:
        propertyId:
          type: string
          description: This is the NextPax property Id.
          example: "123456"
        supplierPropertyId:
          type: string
          description: This is the external partner property Id.
          example: ABC 012
        status:
          type: string
          description: Property status can active or inactive.
          example: active
          enum:
          - active
          - inactive
        parentId:
          type: string
          description: In case this property belongs to a unit-type or multi-unit
            setup. This is a NextPax property Id.
          example: "1234"
        propertyManager:
          type: string
          description: This is the NextPax property manager code.
          example: DM
        pricingModel:
          type: string
          description: "This is the pricing model of the property. Property could\
            \ have LOS or Periodic rates. It's possible for newly created properties\
            \ to have no pricing model. Available values are: los_rates, periodic_rates,\
            \ no_rates"
          example: los_rates
          enum:
          - los_rates
          - periodic_rates
          - no_rates
      example:
        pricingModel: los_rates
        propertyManager: DM
        supplierPropertyId: ABC 012
        propertyId: "123456"
        parentId: "1234"
        status: active
    PropertiesGeneralResponse:
      title: PropertiesGeneralResponse
      required:
      - data
      - requestId
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PropertyGeneralData'
        requestId:
          type: string
          description: unique request id used for identification.
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        data:
          pricingModel: los_rates
          general:
            minOccupancy: 2
            address:
              apt: Apartment
              city: Amsterdam
              countryCode: NL
              street: P.J. Oudweg
              postalCode: 1314CH
              state: WS
              region: Florida
            checkInOutTimes:
              checkInFrom: 14:00
              checkInUntil: 22:00
              checkOutFrom: 06:00
              checkOutUntil: 11:00
            classification: unit-type
            licenseCode: LIC981
            licenseDate: '2021-10-20'
            baseCurrency: EUR
            typeCode: APP
            nationalIdentificationCode: MRTMTT91D08F205J
            numberOfUnits: 5
            geoLocation:
              latitude: 2.31
              longitude: 5.64
            maxPets: 6
            name: The Name
            maxAdults: 6
            maxOccupancy: 6
        requestId: d6c84f022bc94ba08558af7873c3f5a1
    PropertyGeneralData:
      title: GeneralData
      type: object
      properties:
        pricingModel:
          type: string
          description: "This is the pricing model of the property. Property could\
            \ have LOS or Periodic rates. It's possible for newly created properties\
            \ to have no pricing model. Available values are: los_rates, periodic_rates,\
            \ no_rates"
          example: los_rates
          enum:
          - los_rates
          - periodic_rates
          - no_rates
        general:
          $ref: '#/components/schemas/PropertyGeneralInformation'
      example:
        pricingModel: los_rates
        general:
          minOccupancy: 2
          address:
            apt: Apartment
            city: Amsterdam
            countryCode: NL
            street: P.J. Oudweg
            postalCode: 1314CH
            state: WS
            region: Florida
          checkInOutTimes:
            checkInFrom: 14:00
            checkInUntil: 22:00
            checkOutFrom: 06:00
            checkOutUntil: 11:00
          classification: unit-type
          licenseCode: LIC981
          licenseDate: '2021-10-20'
          baseCurrency: EUR
          typeCode: APP
          nationalIdentificationCode: MRTMTT91D08F205J
          numberOfUnits: 5
          geoLocation:
            latitude: 2.31
            longitude: 5.64
          maxPets: 6
          name: The Name
          maxAdults: 6
          maxOccupancy: 6
    PropertiesImagesResponse:
      title: PropertiesImagesResponse
      required:
      - data
      - requestId
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PropertyImagesData'
        requestId:
          type: string
          description: unique request id used for identification.
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        data:
          images:
          - typeCode: exterior
            url: http://www.imagehost.com/image1.png
            displayPriority: 0
            caption: image 1 description
            lastUpdated: '2012-10-06'
          - typeCode: house
            url: http://www.imagehost.com/image2.png
            displayPriority: 1
            lastUpdated: '2012-10-06'
          propertyId: ce8aeb13-d783-4f37-8351-28856792ff2d
        requestId: d6c84f022bc94ba08558af7873c3f5a1
    PropertyImagesData:
      title: ImagesData
      type: object
      properties:
        propertyId:
          type: string
          description: This is an existing NextPax property id.
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
        images:
          type: array
          example:
          - typeCode: exterior
            url: http://www.imagehost.com/image1.png
            displayPriority: 0
            caption: image 1 description
            lastUpdated: '2012-10-06'
          - typeCode: house
            url: http://www.imagehost.com/image2.png
            displayPriority: 1
            lastUpdated: '2012-10-06'
          items:
            $ref: '#/components/schemas/PropertyImageInformation'
      example:
        images:
        - typeCode: exterior
          url: http://www.imagehost.com/image1.png
          displayPriority: 0
          caption: image 1 description
          lastUpdated: '2012-10-06'
        - typeCode: house
          url: http://www.imagehost.com/image2.png
          displayPriority: 1
          lastUpdated: '2012-10-06'
        propertyId: ce8aeb13-d783-4f37-8351-28856792ff2d
    PropertyImagesRequestBody:
      title: ImagesRequestBody
      type: object
      properties:
        images:
          type: array
          example:
          - typeCode: exterior
            url: http://www.imagehost.com/image1.png
            displayPriority: 0
            caption: image 1 description
            lastUpdated: '2012-10-06'
          - typeCode: house
            url: http://www.imagehost.com/image2.png
            displayPriority: 1
            lastUpdated: '2012-10-06'
          items:
            $ref: '#/components/schemas/PropertyImageInformation'
    PropertiesAmenitiesResponse:
      title: PropertiesAmenitiesResponse
      required:
      - data
      - requestId
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PropertyAmenitiesData'
        requestId:
          type: string
          description: unique request id used for identification.
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        data:
          amenities:
          - typeCode: A19
            attributes:
            - "Y"
            - E
          - typeCode: A05
            attributes: "true"
          propertyId: ce8aeb13-d783-4f37-8351-28856792ff2d
        requestId: d6c84f022bc94ba08558af7873c3f5a1
    PropertyAmenitiesData:
      title: AmenitiesData
      type: object
      properties:
        propertyId:
          type: string
          description: This is an existing NextPax property id.
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
        amenities:
          type: array
          example:
          - typeCode: A19
            attributes:
            - "Y"
            - E
          - typeCode: A05
            attributes: "true"
          items:
            $ref: '#/components/schemas/PropertyAmenitiesInformation'
      example:
        amenities:
        - typeCode: A19
          attributes:
          - "Y"
          - E
        - typeCode: A05
          attributes: "true"
        propertyId: ce8aeb13-d783-4f37-8351-28856792ff2d
    PropertyAmenitiesRequestBody:
      title: AmenitiesRequestBody
      type: object
      properties:
        amenities:
          type: array
          example:
          - typeCode: A19
            attributes:
            - "Y"
            - E
          - typeCode: A05
            attributes: "true"
          items:
            $ref: '#/components/schemas/PropertyAmenitiesInformation'
    PropertiesFeesResponse:
      title: PropertiesFeesResponse
      required:
      - data
      - requestId
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PropertyFeesData'
        requestId:
          type: string
          description: unique request id used for identification.
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        data:
          fees:
          - feeCode: RES
            chargeType: MAN
            chargeMode: STA
            currency: EUR
            fromDate: '2032-10-01'
            untilDate: '2032-10-06'
            amountFlat: 300
            isTaxable: true
            applicableTaxPerc: 25.33
            includedChannels:
            - KAY380
          propertyId: ce8aeb13-d783-4f37-8351-28856792ff2d
        requestId: d6c84f022bc94ba08558af7873c3f5a1
    PropertyFeesData:
      title: FeesData
      type: object
      properties:
        propertyId:
          type: string
          description: This is an existing NextPax property id.
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
        fees:
          type: array
          example:
          - feeCode: RES
            chargeType: MAN
            chargeMode: STA
            currency: EUR
            fromDate: '2032-10-01'
            untilDate: '2032-10-06'
            amountFlat: 300
            isTaxable: true
            applicableTaxPerc: 25.33
            includedChannels:
            - KAY380
          items:
            $ref: '#/components/schemas/PropertyFeesInformation'
      example:
        fees:
        - feeCode: RES
          chargeType: MAN
          chargeMode: STA
          currency: EUR
          fromDate: '2032-10-01'
          untilDate: '2032-10-06'
          amountFlat: 300
          isTaxable: true
          applicableTaxPerc: 25.33
          includedChannels:
          - KAY380
        propertyId: ce8aeb13-d783-4f37-8351-28856792ff2d
    PropertyFeesRequestBody:
      title: FeesRequestBody
      type: object
      properties:
        fees:
          type: array
          example:
          - feeCode: RES
            chargeType: MAN
            chargeMode: STA
            currency: EUR
            fromDate: '2032-10-01'
            untilDate: '2032-10-06'
            amountFlat: 300
            isTaxable: true
            applicableTaxPerc: 25.33
            includedChannels:
            - KAY380
          items:
            $ref: '#/components/schemas/PropertyFeesInformation'
    PropertiesTaxesResponse:
      title: PropertiesTaxesResponse
      required:
      - data
      - requestId
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PropertyTaxesData'
        requestId:
          type: string
          description: unique request id used for identification.
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        data:
          taxes:
          - taxCode: VAT
            fromDate: '2032-10-01'
            untilDate: '2032-10-06'
            amountPercentage: 25.33
            rentIncluded: true
            excludedChannels:
            - KAY380
          propertyId: ce8aeb13-d783-4f37-8351-28856792ff2d
        requestId: d6c84f022bc94ba08558af7873c3f5a1
    PropertyTaxesData:
      title: TaxesData
      type: object
      properties:
        propertyId:
          type: string
          description: This is an existing NextPax property id.
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
        taxes:
          type: array
          example:
          - taxCode: VAT
            fromDate: '2032-10-01'
            untilDate: '2032-10-06'
            amountPercentage: 25.33
            rentIncluded: true
            excludedChannels:
            - KAY380
          items:
            $ref: '#/components/schemas/PropertyTaxesInformation'
      example:
        taxes:
        - taxCode: VAT
          fromDate: '2032-10-01'
          untilDate: '2032-10-06'
          amountPercentage: 25.33
          rentIncluded: true
          excludedChannels:
          - KAY380
        propertyId: ce8aeb13-d783-4f37-8351-28856792ff2d
    PropertyTaxesRequestBody:
      title: TaxesRequestBody
      type: object
      properties:
        taxes:
          type: array
          example:
          - taxCode: VAT
            fromDate: '2032-10-01'
            untilDate: '2032-10-06'
            amountPercentage: 25.33
            rentIncluded: true
          items:
            $ref: '#/components/schemas/PropertyTaxesInformation'
    PropertiesDescriptionsResponse:
      title: PropertiesDescriptionsResponse
      required:
      - data
      - requestId
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PropertyDescriptionsData'
        requestId:
          type: string
          description: unique request id used for identification.
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        data:
          propertyId: ce8aeb13-d783-4f37-8351-28856792ff2d
          descriptions:
          - typeCode: house
            language: EN
            text: Some quite long description of this property.
          - typeCode: interior
            language: EN
            text: Some quite long description of this property.
        requestId: d6c84f022bc94ba08558af7873c3f5a1
    PropertyDescriptionsData:
      title: DescriptionsData
      type: object
      properties:
        propertyId:
          type: string
          description: This is an existing NextPax property id.
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
        descriptions:
          type: array
          example:
          - typeCode: house
            language: EN
            text: Some quite long description of this property.
          - typeCode: interior
            language: EN
            text: Some quite long description of this property.
          items:
            $ref: '#/components/schemas/PropertyDescriptionInformation'
      example:
        propertyId: ce8aeb13-d783-4f37-8351-28856792ff2d
        descriptions:
        - typeCode: house
          language: EN
          text: Some quite long description of this property.
        - typeCode: interior
          language: EN
          text: Some quite long description of this property.
    PropertyDescriptionsRequestBody:
      title: DescriptionsRequestBody
      type: object
      properties:
        descriptions:
          type: array
          example:
          - typeCode: house
            language: EN
            text: Some quite long description of this property.
          - typeCode: interior
            language: EN
            text: Some quite long description of this property.
          items:
            $ref: '#/components/schemas/PropertyDescriptionInformation'
    PropertiesSubroomsResponse:
      title: PropertiesSubroomsResponse
      required:
      - requestId
      - subrooms
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PropertySubroomsData'
        requestId:
          type: string
          description: unique request id used for identification.
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        data:
          propertyId: ce8aeb13-d783-4f37-8351-28856792ff2d
          subrooms:
          - typeCode: HAL
            sequenceNumber: 1
            sizeSqMeters: 30
            items:
            - itemCode: ITM027
              itemCount: 2
              itemCapacity: 3
            - itemCode: ITM028
              itemCount: 1
              itemCapacity: 4
          - typeCode: BAT
            sequenceNumber: 2
            sizeSqFeet: 5
            items:
            - itemCode: ITM012
              itemCount: 1
              itemCapacity: 1
            - itemCode: ITM013
              itemCount: 1
              itemCapacity: 1
        requestId: d6c84f022bc94ba08558af7873c3f5a1
    PropertySubroomsData:
      title: SubroomsData
      type: object
      properties:
        propertyId:
          type: string
          description: This is an existing NextPax property id.
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
        subrooms:
          type: array
          example:
          - typeCode: HAL
            sequenceNumber: 1
            sizeSqMeters: 30
            items:
            - itemCode: ITM027
              itemCount: 2
              itemCapacity: 3
            - itemCode: ITM028
              itemCount: 1
              itemCapacity: 4
          - typeCode: BAT
            sequenceNumber: 2
            sizeSqFeet: 5
            items:
            - itemCode: ITM012
              itemCount: 1
              itemCapacity: 1
            - itemCode: ITM013
              itemCount: 1
              itemCapacity: 1
          items:
            $ref: '#/components/schemas/PropertySubroomsInformation'
      example:
        propertyId: ce8aeb13-d783-4f37-8351-28856792ff2d
        subrooms:
        - typeCode: HAL
          sequenceNumber: 1
          sizeSqMeters: 30
          items:
          - itemCode: ITM027
            itemCount: 2
            itemCapacity: 3
          - itemCode: ITM028
            itemCount: 1
            itemCapacity: 4
        - typeCode: BAT
          sequenceNumber: 2
          sizeSqFeet: 5
          items:
          - itemCode: ITM012
            itemCount: 1
            itemCapacity: 1
          - itemCode: ITM013
            itemCount: 1
            itemCapacity: 1
    PropertySubroomsRequestBody:
      title: SubroomsRequestBody
      type: object
      properties:
        subrooms:
          type: array
          example:
          - typeCode: HAL
            sequenceNumber: 1
            sizeSqMeters: 30
            items:
            - itemCode: ITM027
              itemCount: 2
              itemCapacity: 3
            - itemCode: ITM028
              itemCount: 1
              itemCapacity: 4
          - typeCode: BAT
            sequenceNumber: 2
            sizeSqFeet: 5
            items:
            - itemCode: ITM012
              itemCount: 1
              itemCapacity: 1
            - itemCode: ITM013
              itemCount: 1
              itemCapacity: 1
          items:
            $ref: '#/components/schemas/PropertySubroomsInformation'
    PropertiesNearestPlacesResponse:
      title: PropertiesNearestPlacesResponse
      required:
      - nearestPlaces
      - requestId
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PropertyNearestPlacesData'
        requestId:
          type: string
          description: unique request id used for identification.
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        data:
          nearestPlaces:
          - typeCode: DAR
            distance:
              feet: 300
          - typeCode: BUS
            distance:
              meters: 110
        requestId: d6c84f022bc94ba08558af7873c3f5a1
    PropertyNearestPlacesData:
      title: NearestPlacesData
      type: object
      properties:
        nearestPlaces:
          type: array
          example:
          - typeCode: DAR
            distance:
              feet: 300
          - typeCode: BUS
            distance:
              meters: 110
          items:
            $ref: '#/components/schemas/PropertyNearestPlacesInformation'
      example:
        nearestPlaces:
        - typeCode: DAR
          distance:
            feet: 300
        - typeCode: BUS
          distance:
            meters: 110
    PropertyNearestPlacesRequestBody:
      title: NearestPlacesRequestBody
      type: object
      properties:
        nearestPlaces:
          type: array
          example:
          - typeCode: DAR
            distance:
              feet: 300
          - typeCode: BUS
            distance:
              meters: 110
          items:
            $ref: '#/components/schemas/PropertyNearestPlacesInformation'
    PropertyReviewsResponse:
      title: PropertyReviewsResponse
      required:
      - requestId
      - reviews
      type: object
      properties:
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/PropertyReviewData'
        requestId:
          type: string
          description: unique request id used for identification.
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        reviews:
        - ratingHostScore: 3
          departure_date: '2023-10-10'
          created_at: '2022-05-15T22:59:59+02:00'
          ratingCleaningScore: 5
          language: en
          source: property_website
          ratingLocationScore: 5
          ratingScore: 4
          contentHeadline: Amazing stay in Paris.
          contentNegative: Our breakfast was very cold and not tasty.
          ratingScale: 5
          contentDescription: Our room was very spacious. We had received a free welcome
            drink. The staff was amazing.
          contentPositive: Our room was very spacious.
          reviewerCountryCode: NL
          supplierReviewId: review_12356
          arrival_date: '2023-10-01'
          ratingAccommodationScore: 5
        - ratingHostScore: 3
          departure_date: '2023-10-10'
          created_at: '2022-05-15T22:59:59+02:00'
          ratingCleaningScore: 5
          language: en
          source: property_website
          ratingLocationScore: 5
          ratingScore: 4
          contentHeadline: Amazing stay in Paris.
          contentNegative: Our breakfast was very cold and not tasty.
          ratingScale: 5
          contentDescription: Our room was very spacious. We had received a free welcome
            drink. The staff was amazing.
          contentPositive: Our room was very spacious.
          reviewerCountryCode: NL
          supplierReviewId: review_654321
          arrival_date: '2023-10-01'
          ratingAccommodationScore: 5
        requestId: d6c84f022bc94ba08558af7873c3f5a1
    PropertyReviewsRequest:
      title: PropertyReviewsRequest
      required:
      - reviews
      type: object
      properties:
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/PropertyReviewData'
    PropertyReviewData:
      title: PropertyReviewData
      required:
      - language
      - supplierReviewId
      type: object
      properties:
        supplierReviewId:
          type: string
          description: The external review id from the supplier. Must be unique for
            the property.
          example: review_123ab
        language:
          type: string
          description: A 2 letter ISO 639-2 language code indicating the language
            of the review.
          example: en
        createdAt:
          type: string
          description: Timestamp in RFC3339 format for when the review was created.
          format: datetime
          example: '2022-05-15T22:59:59+02:00'
        arrivalDate:
          type: string
          description: The date of the reservation for which the review was made for.
            Format is YYYY-MM-DD.
          format: date
          example: '2023-10-01'
        departure_date:
          type: string
          description: The date of the reservation for which the review was made for.
            Format is YYYY-MM-DD.
          format: date
          example: '2023-10-10'
        source:
          type: string
          description: This can indicate where the customer review comes from.
          example: property_website
          enum:
          - property_website
          - ota
        contentPositive:
          type: string
          description: The actual text which indicates a positive comment if applicable.
          example: Our room was very spacious.
        contentNegative:
          type: string
          description: The actual text which indicates a negative comment if applicable.
          example: Our breakfast was very cold and not tasty.
        contentHeadline:
          type: string
          description: The title of the review if applicable.
          example: Amazing stay in Paris.
        contentDescription:
          type: string
          description: The actual text or body of the review.
          example: Our room was very spacious. We had received a free welcome drink.
            The staff was amazing.
        ratingScale:
          type: integer
          description: Indicates the score scale used. Required if any of the scores
            is provided.
          example: 5
        ratingScore:
          type: integer
          description: The actual score of the review on the scale indicated in ratingScale.
          example: 4
        ratingCleaningScore:
          type: integer
          description: The score given for a subtopic on the scale indicated in ratingScale.
          example: 5
        ratingHostScore:
          type: integer
          description: The score given for a subtopic on the scale indicated in ratingScale.
          example: 3
        ratingLocationScore:
          type: integer
          description: The score given for a subtopic on the scale indicated in ratingScale.
          example: 5
        ratingAccommodationScore:
          type: integer
          description: The score given for a subtopic on the scale indicated in ratingScale.
          example: 5
        reviewerCountryCode:
          type: string
          description: A 2 letter code which indicates the country code of the guest.
            Please see constants locations endpoint for country codes.
          example: NL
    PropertyPoliciesResponse:
      title: PropertyPoliciesResponse
      required:
      - policies
      - requestId
      type: object
      properties:
        policies:
          $ref: '#/components/schemas/PropertyPoliciesData'
        requestId:
          type: string
          description: unique request id used for identification.
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        requestId: d6c84f022bc94ba08558af7873c3f5a1
        policies:
          parkingPolicies:
            indoorParking: available_free
            parkingType: none
            parkingReservation: not_required
            valetParking: not_available
            parkingCost: free
          guestExpectations:
          - instructions: "[\"Please return the keys to the reception\",\"Please throw\
              \ the trash in the designated area\",\"Please turn off the lights when\
              \ you leave\",\"Please lock the door when you leave\",\"Please gather\
              \ the towels in the bathroom\",\"Please contact us if you have any questions\"\
              ]"
            expectation: return_keys
            status: enabled
          - instructions: "[\"Please return the keys to the reception\",\"Please throw\
              \ the trash in the designated area\",\"Please turn off the lights when\
              \ you leave\",\"Please lock the door when you leave\",\"Please gather\
              \ the towels in the bathroom\",\"Please contact us if you have any questions\"\
              ]"
            expectation: return_keys
            status: enabled
          genericCancellationPolicies:
          - cancellationPolicyId: 1
            applicableChannels:
            - KAY380
            - EUR363
          childrenPolicies:
            highChairsPrice: 3100
            highChairsAvailable: 4
            babyCotsAvailable: 5
            childrenCost: 200
            childrenAge: 16
            childrenCostType: cost_per_child
            childrenCostAge: 5
            childrenLimit: 6
            additionalInfoChildren: Any additional info
            infantsAge: 3
            babyCotsPrice: 3100
            childrenAllowed: true
            childrenLimitPerAdult: true
          guestInformation:
            addressRequirement: false
            depositCollectionMethod:
            - cash
            contactNumberRequirement: true
            depositCollectionTime: 2
            damageDepositAmount: 300
            depositReturnMethod:
            - cash
            keyCollectionMethod: lock_box
            depositReturnTime: within_7_days
            keyHandoverDays:
            - monday
            - sunday
            guestBookingTypes: instant_bookings
            keyHandoverTime: after_receiving_travel_document
            damageDepositRequirement: before_arrival
            keyAlternateLocation: We can meet on the train station
          specificCancellationPolicies:
          - channelId: BOO142
            channelPolicyId: BETTER_STRICT_WITH_GRACE_PERIOD
          - channelId: HOM143
            channelPolicyId: NO_REFUND
          houseRules:
            quietHoursStartTime: 22:00
            eventsAllowed: true
            guestDocumentationRequired: none
            eventsAdditionalInfo: Any additional info
            minAgeRequirement: 5
            maxAgeRequirement: 5
            curfewStartTime: 22:00
            additionalInfoHouseRules: Any additional info
            quietHoursEndTime: 08:00
            curfewEndTime: 06:00
          smokingPolicies:
            smokingAllowed: "no"
            nonSmokingOption: true
          internetPolicies:
            internetAvailable: isdn
            wifiNetwork: MyWifiNetwork
            wifiAvailable: available
            internetCost: free
            wifiPassword: MyWifiPassword
          petsPolicies:
            additionalInfoPets: Any additional info
            petsAllowed: allowed
            maxPets: 6
    PropertyPoliciesData:
      title: PoliciesData
      type: object
      properties:
        genericCancellationPolicies:
          type: array
          example:
          - cancellationPolicyId: 1
            applicableChannels:
            - KAY380
            - EUR363
          items:
            $ref: '#/components/schemas/PropertyGenericCancellationPolicy'
        specificCancellationPolicies:
          type: array
          example:
          - channelId: BOO142
            channelPolicyId: BETTER_STRICT_WITH_GRACE_PERIOD
          - channelId: HOM143
            channelPolicyId: NO_REFUND
          items:
            $ref: '#/components/schemas/PropertySpecificCancellationPolicy'
        guestInformation:
          $ref: '#/components/schemas/PropertyManagerGuestInfoPolicies'
        houseRules:
          $ref: '#/components/schemas/PropertyManagerHouseRulesPolicies'
        internetPolicies:
          $ref: '#/components/schemas/PropertyManagerInternetPolicies'
        petsPolicies:
          $ref: '#/components/schemas/PropertyManagerPetsPolicies'
        childrenPolicies:
          $ref: '#/components/schemas/PropertyManagerChildrenPolicies'
        parkingPolicies:
          $ref: '#/components/schemas/PropertyManagerParkingPolicies'
        smokingPolicies:
          $ref: '#/components/schemas/PropertyManagerSmokingPolicies'
        guestExpectations:
          type: array
          description: This is a list of guest expectations that the property manager
            has for the guest.
          items:
            $ref: '#/components/schemas/GuestExpectationPolicy'
      example:
        parkingPolicies:
          indoorParking: available_free
          parkingType: none
          parkingReservation: not_required
          valetParking: not_available
          parkingCost: free
        guestExpectations:
        - instructions: "[\"Please return the keys to the reception\",\"Please throw\
            \ the trash in the designated area\",\"Please turn off the lights when\
            \ you leave\",\"Please lock the door when you leave\",\"Please gather\
            \ the towels in the bathroom\",\"Please contact us if you have any questions\"\
            ]"
          expectation: return_keys
          status: enabled
        - instructions: "[\"Please return the keys to the reception\",\"Please throw\
            \ the trash in the designated area\",\"Please turn off the lights when\
            \ you leave\",\"Please lock the door when you leave\",\"Please gather\
            \ the towels in the bathroom\",\"Please contact us if you have any questions\"\
            ]"
          expectation: return_keys
          status: enabled
        genericCancellationPolicies:
        - cancellationPolicyId: 1
          applicableChannels:
          - KAY380
          - EUR363
        childrenPolicies:
          highChairsPrice: 3100
          highChairsAvailable: 4
          babyCotsAvailable: 5
          childrenCost: 200
          childrenAge: 16
          childrenCostType: cost_per_child
          childrenCostAge: 5
          childrenLimit: 6
          additionalInfoChildren: Any additional info
          infantsAge: 3
          babyCotsPrice: 3100
          childrenAllowed: true
          childrenLimitPerAdult: true
        guestInformation:
          addressRequirement: false
          depositCollectionMethod:
          - cash
          contactNumberRequirement: true
          depositCollectionTime: 2
          damageDepositAmount: 300
          depositReturnMethod:
          - cash
          keyCollectionMethod: lock_box
          depositReturnTime: within_7_days
          keyHandoverDays:
          - monday
          - sunday
          guestBookingTypes: instant_bookings
          keyHandoverTime: after_receiving_travel_document
          damageDepositRequirement: before_arrival
          keyAlternateLocation: We can meet on the train station
        specificCancellationPolicies:
        - channelId: BOO142
          channelPolicyId: BETTER_STRICT_WITH_GRACE_PERIOD
        - channelId: HOM143
          channelPolicyId: NO_REFUND
        houseRules:
          quietHoursStartTime: 22:00
          eventsAllowed: true
          guestDocumentationRequired: none
          eventsAdditionalInfo: Any additional info
          minAgeRequirement: 5
          maxAgeRequirement: 5
          curfewStartTime: 22:00
          additionalInfoHouseRules: Any additional info
          quietHoursEndTime: 08:00
          curfewEndTime: 06:00
        smokingPolicies:
          smokingAllowed: "no"
          nonSmokingOption: true
        internetPolicies:
          internetAvailable: isdn
          wifiNetwork: MyWifiNetwork
          wifiAvailable: available
          internetCost: free
          wifiPassword: MyWifiPassword
        petsPolicies:
          additionalInfoPets: Any additional info
          petsAllowed: allowed
          maxPets: 6
    PropertyGenericCancellationPolicy:
      required:
      - applicableChannels
      - cancellationPolicyId
      type: object
      properties:
        cancellationPolicyId:
          type: integer
          description: "This is a policy id returned by /suppliers/property-manager/{propertyManagerCode}/policies"
        isDefault:
          type: boolean
          description: This indicates if this is the default policy for the property.
            Can be true for one policy only
          example: true
        applicableChannels:
          type: array
          description: "Here you can define which channels are applicable for this\
            \ policy. These channels cannot be Bookingcom, Airbnb, Agoda, Expedia,\
            \ Homeaway, or Mariott as they have specific policies. See channel-codes\
            \ endpoint for values."
          items:
            type: string
    Address:
      title: Address
      required:
      - city
      - countryCode
      - postalCode
      - street
      type: object
      properties:
        apt:
          type: string
          description: Apartment of house/property number.
          example: Apartment
        city:
          type: string
          description: City the property is listed.
          example: Amsterdam
        countryCode:
          type: string
          description: Country code of the listing two digit ISO code. See locations
            endpoint for actual values.
          example: NL
        state:
          type: string
          description: State where the property is listed 2 letter code format for
            US/Canada states. See locations endpoint for actual codes.
          example: WS
        region:
          type: string
          description: Region the property is listed. See locations endpoint for actual
            values.
          example: Florida
        street:
          type: string
          description: "Street address that includes the street number, street name\
            \ and any suffix."
          example: P.J. Oudweg
        postalCode:
          type: string
          description: Zipcode or Postal code of the property.
          example: 1314CH
      example:
        apt: Apartment
        city: Amsterdam
        countryCode: NL
        street: P.J. Oudweg
        postalCode: 1314CH
        state: WS
        region: Florida
    GeoLocation:
      title: GeoLocation
      required:
      - latitude
      - longitude
      type: object
      properties:
        longitude:
          type: number
          description: Longitude coordinates of the property.
          format: double
          example: 5.64
        latitude:
          type: number
          description: Latitude coordinates of the property.
          format: double
          example: 2.31
      example:
        latitude: 2.31
        longitude: 5.64
    CheckInOutTimes:
      title: CheckInOutTimes
      type: object
      properties:
        checkInFrom:
          type: string
          description: If there is a checkin starting from a specific time it could
            be specified here. Example "14:00" would indicate a curfew starting at
            14:00 hours (or 2 pm).
        checkInUntil:
          type: string
          description: If there is a checkin ending at a specific time it could be
            specified here. Example "22:00" would indicate a curfew starting at 22:00
            hours (or 10 pm).
        checkOutFrom:
          type: string
          description: If there is a checkout starting from a specific time it could
            be specified here. Example "08:00" would indicate a curfew starting at
            08:00 hours (or 8 am).
        checkOutUntil:
          type: string
          description: If there is a checkout ending at a specific time it could be
            specified here. Example "11:00" would indicate a curfew starting at 11:00
            hours (or 11 am).
      description: Check in and check out times for the property.
      example:
        checkInFrom: 14:00
        checkInUntil: 22:00
        checkOutFrom: 06:00
        checkOutUntil: 11:00
    PropertyGeneralInformation:
      title: General
      required:
      - address
      - classification
      - geoLocation
      - maxOccupancy
      - name
      - typeCode
      type: object
      properties:
        name:
          type: string
          description: This is the property name.
          example: The Name
        typeCode:
          type: string
          description: This is the property type existing in NextPax. See mapping-codes
            endpoint for values.
          example: APP
        baseCurrency:
          type: string
          description: This is the default property currency code. See currency endpoint
            for values.
          example: EUR
        minOccupancy:
          minimum: 1
          type: integer
          description: The minimum number of pax that can book this property. Value
            needs to be 1 or more. If value is not provided or field is missing then
            default is 1.
          example: 2
        maxOccupancy:
          type: integer
          description: The maximum number of pax that can book this property.   (it
            includes children of age 2+).
          example: 6
        maxAdults:
          type: integer
          description: The maximum number of adults that can book this property.
          example: 6
        maxPets:
          type: integer
          description: Maximum number of pets allowed per reservation.
          example: 6
        address:
          $ref: '#/components/schemas/Address'
        geoLocation:
          $ref: '#/components/schemas/GeoLocation'
        checkInOutTimes:
          $ref: '#/components/schemas/CheckInOutTimes'
        classification:
          type: string
          description: "Property classification which indicates if property is standalone\
            \ or part of multiple unit setup. Possible values are single-unit, unit-type,\
            \ multi-unit. Once set, the property classification cannot be changed."
          example: unit-type
          enum:
          - single-unit
          - unit-type
          - multi-unit
        licenseCode:
          type: string
          description: "Legal license code required in some regions, cities or property\
            \ type."
          example: LIC981
        nationalIdentificationCode:
          type: string
          description: "Some countries (like Italy) started using multiple license\
            \ numbers, one from the local authorities (on city/region level) and one\
            \ country wide number.This field is use for that type of numbers"
          example: MRTMTT91D08F205J
        licenseDate:
          type: string
          description: License issue date in format YYYY-MM-DD.
          example: '2021-10-20'
        numberOfUnits:
          type: integer
          description: Field used to define the number of units that this type has.
            This field is relevant only for properties with classification unit-type
            since these can have an inventory higher than 1.
          example: 5
      example:
        minOccupancy: 2
        address:
          apt: Apartment
          city: Amsterdam
          countryCode: NL
          street: P.J. Oudweg
          postalCode: 1314CH
          state: WS
          region: Florida
        checkInOutTimes:
          checkInFrom: 14:00
          checkInUntil: 22:00
          checkOutFrom: 06:00
          checkOutUntil: 11:00
        classification: unit-type
        licenseCode: LIC981
        licenseDate: '2021-10-20'
        baseCurrency: EUR
        typeCode: APP
        nationalIdentificationCode: MRTMTT91D08F205J
        numberOfUnits: 5
        geoLocation:
          latitude: 2.31
          longitude: 5.64
        maxPets: 6
        name: The Name
        maxAdults: 6
        maxOccupancy: 6
    PropertyFeesInformation:
      title: Fees
      required:
      - chargeMode
      - chargeType
      - feeCode
      - isTaxable
      type: object
      properties:
        feeCode:
          type: string
          description: This is the NextPax fee code. See mapping-codes endpoint for
            values.
        chargeType:
          type: string
          description: This is the NextPax charge type code. See mapping-codes endpoint
            for values.
        chargeMode:
          type: string
          description: This is the NextPax charge mode code. See mapping-codes endpoint
            for values.
        currency:
          type: string
          description: "This is the NextPax currency code. See currency endpoint for\
            \ values. In case of FLAT amount type, this field is required, in case\
            \ of PERCENTAGE amount type, this field is ignored."
        fromDate:
          type: string
          description: This is an optional date from when the fee is applicable. If
            left empty the fee applies permanently. Requires untilDate.
        untilDate:
          type: string
          description: This is an optional date until when the fee is applicable.
            If left empty the fee applies permanently. Requires fromDate.
        amountFlat:
          type: integer
          description: "The amount of the fee, in cents (FLAT amount type). Must be\
            \ greater than 0."
        amountPercentage:
          multipleOf: 0.01
          type: number
          description: "The amount of the fee, in percentage value range between [0,\
            \ 100] (PERCENTAGE amount type). Currency is ignored."
        isTaxable:
          type: boolean
          description: Flag to indicate whether tax is calculated over this fee.
        applicableTaxPerc:
          type: number
          description: "Tax amount (percentage %) that should be applied to the fee\
            \ if isTaxable is True. Value range between [0, 100]"
        includedChannels:
          type: array
          description: "An optional array of channel codes for which the FEE is applicable.\
            \ If not provided, the FEE applies to ALL distribution channels. See channel-codes\
            \ endpoint for values."
          items:
            type: string
        excludedChannels:
          type: array
          description: "An optional array of channel codes for which the FEE is not\
            \ applicable. This means that for all the other channels, the fee is applicable.This\
            \ field conflicts with includedChannels. See channel-codes endpoint for\
            \ values."
          items:
            type: string
    PropertyTaxesInformation:
      title: Taxes
      required:
      - rentIncluded
      - taxCode
      type: object
      properties:
        taxCode:
          type: string
          description: This is the NextPax tax code. See mapping-codes endpoint for
            values.
        amountPercentage:
          multipleOf: 0.01
          type: number
          description: "The amount of the tax as percentage of the rent price. Value\
            \ range between [0, 100]. Only one and at least one of amountFlat or amountPercentage\
            \ can have a value."
        amountFlat:
          type: integer
          description: The amount of the tax in cents of the rent price. Only one
            and at least one of amountFlat or amountPercentage can have a value. Must
            be greater than 0.
        amountFlatCurrency:
          type: string
          description: This is the NextPax currency code. See currency endpoint for
            values. Need to be specified in case we have amountFlat not null.
          default: EUR
        rentIncluded:
          type: boolean
          description: If set to true then the amount is already included in the rent
            price. Amount is then used for informational purposes. NextPax will expect
            the rental price to have that amount already from the partner.
        fromDate:
          type: string
          description: This is an optional date from when the TAX is applicable. If
            left empty the TAX applies permanently. Requires untilDate.
        untilDate:
          type: string
          description: This is an optional date until when the TAX is applicable.
            If left empty the TAX applies permanently. Requires fromDate.
        includedChannels:
          type: array
          description: "An optional array of channel codes for which the tax is applicable.\
            \ See channel-codes endpoint for values. If includedChannels and excludedChannels\
            \ are both not provided, the tax applies to ALL distribution channels."
          items:
            type: string
        excludedChannels:
          type: array
          description: "An optional array of channel codes for which the tax is not\
            \ applicable. This means that for all the other channels, the fee is applicable.\
            \ This field conflicts with includedChannels. See channel-codes endpoint\
            \ for values. If includedChannels and excludedChannels are both not provided,\
            \ the tax applies to ALL distribution channels."
          items:
            type: string
    PropertyImageInformation:
      title: Images
      required:
      - lastUpdated
      - typeCode
      - url
      type: object
      properties:
        typeCode:
          type: string
          description: This is the NextPax image type code. See mapping-codes endpoint
            for values.
        url:
          type: string
          description: The partner url to the image.
        caption:
          type: string
          description: The image short description (optional).
        displayPriority:
          type: integer
          description: "the ordering number of images (0 main photo, 1 second photo,\
            \ 2 etc)."
        lastUpdated:
          type: string
          description: A date when the image was last updated.
    PropertyNearestPlacesInformation:
      title: Nearest Places
      required:
      - distance
      - typeCode
      type: object
      properties:
        typeCode:
          type: string
          description: This is the NextPax nearest places type code. See mapping-codes
            endpoint for values.
        distance:
          $ref: '#/components/schemas/NearestPlacesDistance'
    NearestPlacesDistance:
      title: Distance
      type: object
      properties:
        meters:
          type: integer
          description: Distance in meters. Either meters or feet is required.
        feet:
          type: integer
          description: Distance in feet. Either feet or meters is required.
    PropertyDescriptionInformation:
      title: Descriptions
      required:
      - language
      - text
      - typeCode
      type: object
      properties:
        typeCode:
          type: string
          description: This is the NextPax description type code. See mapping-codes
            endpoint for values.
        language:
          type: string
          description: This is the 2 letter language code. See languages endpoint
            for values.
        text:
          type: string
          description: This is the actual description text.
    PropertyAmenitiesInformation:
      title: Amenities
      required:
      - attributes
      - typeCode
      type: object
      properties:
        typeCode:
          type: string
          description: This is the NextPax amenity type code. See mapping-codes endpoint
            for values.
          example: A23
        attributes:
          type: array
          description: Each amenity type can have 1 more attributes. See mapping-codes
            endpoint for values for each amenity.
          example:
          - att1
          - att2
          items:
            type: string
    PropertySubroomsInformation:
      title: Subrooms
      required:
      - typeCode
      type: object
      properties:
        typeCode:
          type: string
          description: This is the NextPax subroom type code. See mapping-codes endpoint
            for values.
        sequenceNumber:
          type: integer
          description: "To be used when multiple rooms of the same type are present\
            \ to give a desired order. Bedroom 1, Bedroom 2, etc."
        sizeSqMeters:
          type: integer
          description: Surface area in square meters.
        sizeSqFeet:
          type: integer
          description: Surface area in square feet.
        items:
          type: array
          items:
            $ref: '#/components/schemas/SubroomItems'
    SubroomItems:
      title: SubroomItem
      required:
      - itemCode
      type: object
      properties:
        itemCode:
          type: string
          description: This is the NextPax subroom item code. See mapping-codes endpoint
            for values.
        itemCount:
          type: integer
          description: "Number of items for this type. Cannot be lower then 1. If\
            \ not provided, default is 1."
        itemCapacity:
          type: integer
          description: Indicates the number of persons for this item. Relevant for
            bed types occupancy. Example for double bed a capacity would be 2. Default
            0.
    MappingCodesResponse:
      required:
      - requestId
      properties:
        data:
          $ref: '#/components/schemas/MappingCodesData'
        requestId:
          type: string
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        data:
        - propertyTypes:
          - names:
              en: Apartotel
            code: APO
        - propertyNearestPlaces:
          - names:
              en: City
            code: CTY
        - propertyFees:
          - names:
              en: Air conditioning
            code: AIR
        - propertyChargeModes:
          - names:
              en: Price per day
            code: DAY
        - propertyAmenities:
          - names:
              en: Outdoor swimming pool
            code: P05
            options:
            - attribute: F
              labels:
                en: Free
            codeType: options
        - propertySubrooms:
          - names:
              en: Kitchen
            code: KIT
        - propertyChargeTypes:
          - names:
              en: Optional
            code: OPT
        - propertyDescriptionTypes:
          - names:
              en: house
            code: House
        - propertyTaxes:
          - name:
              en: Value-added tax
            taxCode: VAT
        - subroomItems:
          - names:
              en: Balcony
            code: ITM001
        - propertyImages:
          - names:
              en: Bathroom
            code: bathroom
        - propertyTypes:
          - names:
              en: Apartotel
            code: APO
        - propertyNearestPlaces:
          - name:
              en: City
            code: CTY
        - paymentMethods:
          - names:
              en: American Express
            code: AME001
        - mealPlans:
          - names:
              en: Breakfast Included
            code: breakfast
        requestId: d6c84f022bc94ba08558af7873c3f5a1
    MappingCodesData:
      properties:
        propertyTypes:
          type: array
          items:
            $ref: '#/components/schemas/MappingCodes'
        propertyAmenities:
          type: array
          items:
            $ref: '#/components/schemas/MappingCodes'
        propertyNearestPlaces:
          type: array
          items:
            $ref: '#/components/schemas/MappingCodes'
        propertyFees:
          type: array
          items:
            $ref: '#/components/schemas/MappingCodes'
        propertyTaxes:
          type: array
          items:
            $ref: '#/components/schemas/MappingCodes'
        propertyImages:
          type: array
          items:
            $ref: '#/components/schemas/MappingCodes'
        propertySubrooms:
          type: array
          items:
            $ref: '#/components/schemas/MappingCodes'
        subroomItems:
          type: array
          items:
            $ref: '#/components/schemas/MappingCodes'
        propertyChargeModes:
          type: array
          items:
            $ref: '#/components/schemas/MappingCodes'
        propertyChargeTypes:
          type: array
          items:
            $ref: '#/components/schemas/MappingCodes'
        propertyDescriptionTypes:
          type: array
          items:
            $ref: '#/components/schemas/MappingCodes'
        paymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/MappingCodes'
        mealPlans:
          type: array
          items:
            $ref: '#/components/schemas/MappingCodes'
      example:
        data:
        - propertyTypes:
          - names:
              en: Apartotel
            code: APO
        - propertyNearestPlaces:
          - names:
              en: City
            code: CTY
        - propertyFees:
          - names:
              en: Air conditioning
            code: AIR
        - propertyChargeModes:
          - names:
              en: Price per day
            code: DAY
        - propertyAmenities:
          - names:
              en: Outdoor swimming pool
            code: P05
            options:
            - attribute: F
              labels:
                en: Free
            codeType: options
        - propertySubrooms:
          - names:
              en: Kitchen
            code: KIT
        - propertyChargeTypes:
          - names:
              en: Optional
            code: OPT
        - propertyDescriptionTypes:
          - names:
              en: house
            code: House
        - propertyTaxes:
          - name:
              en: Value-added tax
            taxCode: VAT
        - subroomItems:
          - names:
              en: Balcony
            code: ITM001
        - propertyImages:
          - names:
              en: Bathroom
            code: bathroom
        - propertyTypes:
          - names:
              en: Apartotel
            code: APO
        - propertyNearestPlaces:
          - name:
              en: City
            code: CTY
        - paymentMethods:
          - names:
              en: American Express
            code: AME001
    MappingCodes:
      required:
      - code
      - names
      type: object
      properties:
        names:
          type: object
          additionalProperties:
            type: string
            example: Any additional property
          example:
            en: Outdoor swimming pool
        code:
          type: string
          example: P05
        codeType:
          type: string
          example: options
          enum:
          - boolean
          - options
          - number
          - classifications
        options:
          type: array
          items:
            $ref: '#/components/schemas/Option'
        classifications:
          type: array
          items:
            type: string
      example:
        code: P05
        names:
          en: Outdoor swimming pool
        options:
        - attribute: F
          labels:
            en: Free
        codeType: options
    Option:
      type: object
      properties:
        attribute:
          type: string
          example: C
        labels:
          type: object
          additionalProperties:
            type: string
            example: Any additional property
          example:
            en: ceramic
    ChannelCodesResponse:
      required:
      - requestId
      properties:
        channels:
          type: array
          items:
            $ref: '#/components/schemas/ChannelCodesData'
        requestId:
          type: string
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        channels:
        - channelDescription: Short channel description.
          channelWebsiteUrl: http://www.booking.com
          channelName: Booking.com
          channelLogo: https://website.com/logo.png
          channelCode: BOO147
        - channelDescription: Short channel description.
          channelWebsiteUrl: http://www.booking.com
          channelName: Booking.com
          channelLogo: https://website.com/logo.png
          channelCode: BOO147
        requestId: d6c84f022bc94ba08558af7873c3f5a1
    ChannelContentDefinitionsResponse:
      required:
      - channelContentDefinitions
      - requestId
      properties:
        channelContentDefinitions:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ChannelContentDefinition'
          description: Content definitions map with Channel ID as key and array of
            content definitions as value.
        requestId:
          type: string
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        requestId: d6c84f022bc94ba08558af7873c3f5a1
        channelContentDefinitions:
          key:
          - requirementValue: "5"
            requirementName: Has Bathrooms
            isOptionalValue: false
            isWarning: true
            applicableClassifications:
            - single-unit
            requirementDescription: Has Bathrooms
            requirementCode: hasBathrooms
            isBlockingStatus: false
            channelId: test
          - requirementValue: "5"
            requirementName: Has Bathrooms
            isOptionalValue: false
            isWarning: true
            applicableClassifications:
            - single-unit
            requirementDescription: Has Bathrooms
            requirementCode: hasBathrooms
            isBlockingStatus: false
            channelId: test
    ChannelContentDefinition:
      required:
      - applicableClassifications
      - channelId
      - isBlockingStatus
      - isOptionalValue
      - isWarning
      - requirementCode
      - requirementDescription
      - requirementName
      - requirementValue
      type: object
      properties:
        channelId:
          type: string
          description: Indicates the channel id of the content definition.
          example: test
        requirementCode:
          type: string
          description: Indicates the code of the requirement.
          example: hasBathrooms
        requirementName:
          type: string
          description: Indicates the name of the requirement.
          example: Has Bathrooms
        requirementDescription:
          type: string
          description: Indicates the description of the requirement.
          example: Has Bathrooms
        requirementValue:
          type: string
          description: "Indicates the value of the requirement. Could be a string\
            \ or a number, or a list of values separated by comma."
          example: "5"
        isOptionalValue:
          type: boolean
          description: "Indicates if the requirement value is optional. If true, then\
            \ validation will be passed in case any of the values are met. If false,\
            \ then all required values must be met."
          example: false
        isWarning:
          type: boolean
          description: "Indicates if the requirement is a warning. That means that\
            \ if requirement is not met, the property can still be listed on the channel,\
            \ but it is strongly recommended to meet the requirement."
          example: true
        isBlockingStatus:
          type: boolean
          description: "Indicates if the requirement is a blocking status. That means\
            \ that if requirement is not met, the property can not be listed on the\
            \ channel."
          example: false
        applicableClassifications:
          type: array
          description: "Indicates the applicable classifications for the requirement.\
            \ Possible values are single-unit, unit-type, multi-unit."
          example:
          - single-unit
          items:
            type: string
      example:
        requirementValue: "5"
        requirementName: Has Bathrooms
        isOptionalValue: false
        isWarning: true
        applicableClassifications:
        - single-unit
        requirementDescription: Has Bathrooms
        requirementCode: hasBathrooms
        isBlockingStatus: false
        channelId: test
    ChannelCodesData:
      required:
      - channelCode
      properties:
        channelName:
          type: string
          description: Indicates the name of the distribution channel.
          example: Booking.com
        channelCode:
          type: string
          description: Indicates the code of the distribution channel. These codes
            are used in other endpoints.
          example: BOO147
        channelWebsiteUrl:
          type: string
          description: Indicates the public website of the channel
          example: http://www.booking.com
        channelLogo:
          type: string
          description: Indicates the url of the channel logo. This logo is stored
            on NextPax platform.
          example: https://website.com/logo.png
        channelDescription:
          type: string
          description: Indicates a short description of the channel.
          example: Short channel description.
      example:
        channelDescription: Short channel description.
        channelWebsiteUrl: http://www.booking.com
        channelName: Booking.com
        channelLogo: https://website.com/logo.png
        channelCode: BOO147
    ChannelPolicyDefinitionsResponse:
      required:
      - channelPolicies
      - requestId
      type: object
      properties:
        channelPolicies:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ChannelPoliciesData'
          description: Polices' definition per channelIDs
        requestId:
          type: string
          description: Identifier for the request
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        channelPolicies:
          BOO142:
          - channelPolicyId: "1"
            policyDescription: The guest will be charged the total price if they cancel.
            policyType: nonrefundable
          - channelPolicyId: "113"
            policyDescription: The guest can cancel free of charge until 42 days before
              arrival. The guest will be charged the first night if they cancel in
              the 42 days before arrival.
            policyType: flexible_42
          EXP270:
          - channelPolicyId: 10PERCENTCOSTOFSTAY
            policyType: flexible_nonrefundable
          - channelPolicyId: 1STNIGHTROOMANDTAX
            policyType: flexible_nonrefundable
          AIR298:
          - channelPolicyId: BETTER_STRICT_WITH_GRACE_PERIOD
            policyDescription: "This cancellation policy is displayed as Firm on Airbnb.\
              \ Full refund up until 30 days prior to arrival. 50% refund of accommodation\
              \ fee up to 1 week prior to arrival, then non-refundable."
          - channelPolicyId: SUPER_STRICT_30
            policyDescription: "50% refund of accommodation fee up until 30 days prior\
              \ to arrival, then non-refundable."
            excludedLocations:
            - country: IT
          - channelPolicyId: SUPER_STRICT_30_NEW
            policyDescription: "Full refund up until 30 days prior to arrival, then\
              \ non-refundable. Only available for Italy listings."
            includedLocations:
            - country: IT
        requestId: d6c84f022bc94ba08558af7873c3f5a1
    ChannelPoliciesData:
      properties:
        channelPolicyId:
          type: string
          description: This is a specific channel policy id.
          example: BETTER_STRICT_WITH_GRACE_PERIOD
        policyDescription:
          type: string
          description: This is the policy terms description.
          example: Some policy description goes here
        policyType:
          type: string
          description: "This indicates the type of policy (strict, flexible, etc)."
          example: strict
        includedLocations:
          type: array
          example:
          - country: IT
          items:
            $ref: '#/components/schemas/Location'
        excludedLocations:
          type: array
          example:
          - country: IT
          items:
            $ref: '#/components/schemas/Location'
    CurrencyCodesResponse:
      required:
      - requestId
      properties:
        currencies:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyCodesData'
        requestId:
          type: string
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        requestId: d6c84f022bc94ba08558af7873c3f5a1
        currencies:
        - currencyName: Euro
          currencyCode: EUR
        - currencyName: Euro
          currencyCode: EUR
    CurrencyCodesData:
      required:
      - currencyCode
      properties:
        currencyName:
          type: string
          description: Indicates the name of the currency.
          example: Euro
        currencyCode:
          type: string
          description: Indicates the ISO 4217 three-letter code of the currency. These
            codes are used in other endpoints.
          example: EUR
      example:
        currencyName: Euro
        currencyCode: EUR
    LanguageCodesResponse:
      required:
      - requestId
      properties:
        languages:
          type: array
          items:
            $ref: '#/components/schemas/LanguageCodesData'
        requestId:
          type: string
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        languages:
        - languageCode: EN
          languageName: English
        - languageCode: EN
          languageName: English
        requestId: d6c84f022bc94ba08558af7873c3f5a1
    LanguageCodesData:
      required:
      - languageCode
      properties:
        languageName:
          type: string
          description: Indicates the name of the language.
          example: English
        languageCode:
          type: string
          description: Indicates the ISO 639-1 two-letter code of the language. These
            codes are used in other endpoints.
          example: EN
      example:
        languageCode: EN
        languageName: English
    LocationsResponse:
      required:
      - locationsData
      - requestId
      properties:
        locationsData:
          $ref: '#/components/schemas/LocationsData'
        requestId:
          type: string
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        locationsData:
          regions:
          - regionCode: Florida
            countryCode: NL
            regionName: Florida
            stateCode: WS
          - regionCode: Florida
            countryCode: NL
            regionName: Florida
            stateCode: WS
          countries:
          - countryCode: NL
            countryName: Netherlands
          - countryCode: NL
            countryName: Netherlands
          states:
          - stateName: Washington
            countryCode: NL
            stateCode: WS
          - stateName: Washington
            countryCode: NL
            stateCode: WS
        requestId: d6c84f022bc94ba08558af7873c3f5a1
    LocationsData:
      properties:
        countries:
          type: array
          items:
            $ref: '#/components/schemas/LocationsCountries'
        regions:
          type: array
          items:
            $ref: '#/components/schemas/LocationsRegions'
        states:
          type: array
          items:
            $ref: '#/components/schemas/LocationsStates'
      example:
        regions:
        - regionCode: Florida
          countryCode: NL
          regionName: Florida
          stateCode: WS
        - regionCode: Florida
          countryCode: NL
          regionName: Florida
          stateCode: WS
        countries:
        - countryCode: NL
          countryName: Netherlands
        - countryCode: NL
          countryName: Netherlands
        states:
        - stateName: Washington
          countryCode: NL
          stateCode: WS
        - stateName: Washington
          countryCode: NL
          stateCode: WS
    LocationsCountries:
      required:
      - countryCode
      properties:
        countryName:
          type: string
          description: Indicates the name of the Country.
          example: Netherlands
        countryCode:
          type: string
          description: Indicates the ISO 3166-2 two-letter code of the country. These
            codes are used in other endpoints.
          example: NL
      example:
        countryCode: NL
        countryName: Netherlands
    LocationsRegions:
      required:
      - countryCode
      - regionCode
      - stateCode
      properties:
        countryCode:
          type: string
          description: Indicates the ISO 3166-2 two-letter code of the country.
          example: NL
        stateCode:
          type: string
          description: Indicates the state or province where the region is located.
          example: WS
        regionCode:
          type: string
          description: Indicates a code of the region. These codes are used in other
            endpoints.
          example: Florida
        regionName:
          type: string
          description: Indicates the name of the Region in the country listed. These
            regions are used in other endpoints.
          example: Florida
      example:
        regionCode: Florida
        countryCode: NL
        regionName: Florida
        stateCode: WS
    LocationsStates:
      required:
      - countryCode
      - stateCode
      properties:
        countryCode:
          type: string
          description: Indicates the ISO 3166-2 two-letter code of the country where
            the state or province is located.
          example: NL
        stateCode:
          type: string
          description: Indicates the two-letter code of the state. These codes are
            used in other endpoints.
          example: WS
        stateName:
          type: string
          description: Indicates the name of the State.
          example: Washington
      example:
        stateName: Washington
        countryCode: NL
        stateCode: WS
    PropertyManagerCreateRequest:
      title: PropertyManagerCreateRequest
      required:
      - companyName
      - contacts
      - general
      - invoiceDetails
      type: object
      properties:
        companyName:
          type: string
          description: This is the property reference of the supply partner.
          example: The Name
        general:
          $ref: '#/components/schemas/PropertyManagerGeneralInformation'
        contacts:
          type: array
          example:
          - firstName: FirstName
            lastName: LastName
            middleName: MiddleName
            telephone: <prefix>12345678
            email: mail@website.com
            mobilePhone: <prefix>12345678
            address: "P.J. Oudweg 4, 1314 CH Almere, Netherlands"
            postalCode: 1314CH
            city: Gemeente Amsterdam
            state: NL_NH
            region: NL_NH_6
            country: NL
            title: Sr
            role: main
          items:
            $ref: '#/components/schemas/PropertyManagerContact'
        ratesAndAvailabilitySettings:
          $ref: '#/components/schemas/PropertyManagerRateSettings'
        invoiceDetails:
          $ref: '#/components/schemas/PropertyManagerInvoiceDetails'
    PropertyManagerRetrieveResponse:
      title: PropertyManagerResponse
      required:
      - companyName
      - contacts
      - general
      - invoiceDetails
      type: object
      properties:
        companyName:
          type: string
          description: This is the property reference of the supply partner.
          example: The Name
        general:
          $ref: '#/components/schemas/PropertyManagerGeneralInformation'
        contacts:
          type: array
          example:
          - firstName: FirstName
            lastName: LastName
            middleName: MiddleName
            telephone: <prefix>12345678
            email: mail@website.com
            mobilePhone: <prefix>12345678
            address: "P.J. Oudweg 4, 1314 CH Almere, Netherlands"
            postalCode: 1314CH
            city: Gemeente Amsterdam
            state: NL_NH
            region: NL_NH_6
            country: NL
            title: Sr
            role: main
          items:
            $ref: '#/components/schemas/PropertyManagerContact'
        ratesAndAvailabilitySettings:
          $ref: '#/components/schemas/PropertyManagerRateSettings'
        invoiceDetails:
          $ref: '#/components/schemas/PropertyManagerInvoiceDetails'
      example:
        general:
          website: https://example-website.com
          address: "P.J. Oudweg 4, 1314 CH Almere, Netherlands"
          acceptedPaymentMethods:
          - AME001
          checkInOutTimes:
            checkInFrom: 14:00
            checkInUntil: 22:00
            checkOutFrom: 06:00
            checkOutUntil: 11:00
          city: Gemeente Amsterdam
          companyState: NL_NH
          hostInformation: "Run by a family, these accommodations offer the best of\
            \ the best"
          logoUrl: https://example-url.com
          termsAndConditions: https://website.com/terms-and-conditions
          acceptedCurrencies:
          - EUR
          mainCurrency: EUR
          faviconUrl: https://example-url.com
          companyRegion: NL_NH_6
          companyEmail: mail@website.com
          companyPhone: "310682123321"
          countryCode: NL
          hostInformationTranslations:
            en:
              translation: "Run by a family, these accommodations offer the best of\
                \ the best"
              default: true
            nl:
              translation: "Gerund door een familie, bieden deze accommodaties het\
                \ beste van het beste"
              default: false
          socialMediaLinks:
          - name: facebook
            url: https://www.facebook.com/amazingpage
          spokenLanguages:
          - en
          companyPostalCode: 1314CH
        ratesAndAvailabilitySettings:
          defaultMinStay: 2
          monthLength: 28
          maxBookingOffset: 6
          defaultMaxStay: 6
          minBookingOffset: 2
        companyName: The Name
        invoiceDetails:
          entityPostalCode: 1314CH
          lastName: LastName
          mobile: <prefix>12345678
          taxNumber: "123456789"
          telephone: <prefix>12345678
          entityRegion: NL_NH_6
          entityAddress2: "P.J. Oudweg 4, 1314 CH Almere, Netherlands"
          entityAddress1: "P.J. Oudweg 4, 1314 CH Almere, Netherlands"
          firstName: FirstName
          bicSwiftCode: ABNANL2AXXX
          entityCountry: NL
          entityState: NL_NH
          registrationNumber: "123456"
          entityName: The Entity Name
          ibanAccountNumber: NL99ABNA0123456789
          entityCity: Gemeente Amsterdam
          email: mail@website.com
        contacts:
        - firstName: FirstName
          lastName: LastName
          middleName: MiddleName
          telephone: <prefix>12345678
          email: mail@website.com
          mobilePhone: <prefix>12345678
          address: "P.J. Oudweg 4, 1314 CH Almere, Netherlands"
          postalCode: 1314CH
          city: Gemeente Amsterdam
          state: NL_NH
          region: NL_NH_6
          country: NL
          title: Sr
          role: main
    PropertyManagerGeneralInformation:
      title: PropertyManagerGeneral
      required:
      - acceptedCurrencies
      - acceptedPaymentMethods
      - address
      - checkInOutTimes
      - city
      - companyEmail
      - companyPostalCode
      - countryCode
      - mainCurrency
      - spokenLanguages
      type: object
      properties:
        address:
          type: string
          description: This is the property manager Headquarter address.
          example: "P.J. Oudweg 4, 1314 CH Almere, Netherlands"
        city:
          type: string
          description: This is the city where the property manager Headquarter is
            located.
          example: Gemeente Amsterdam
        countryCode:
          type: string
          description: 2 letter country code where property manager Headquarter is
            located.
          example: NL
        website:
          type: string
          description: Company / property manager website.
          example: https://example-website.com
        hostInformation:
          type: string
          description: A short description used as introduction or host information
            on various OTAs
          example: "Run by a family, these accommodations offer the best of the best"
        hostInformationTranslations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PropertyManagerGeneralInformation_hostInformationTranslations'
          description: Host information translations in key-value format
          example:
            en:
              translation: "Run by a family, these accommodations offer the best of\
                \ the best"
              default: true
            nl:
              translation: "Gerund door een familie, bieden deze accommodaties het\
                \ beste van het beste"
              default: false
        mainCurrency:
          type: string
          description: The 3 letter currency code that the property manager operates
            with.
          example: EUR
        companyState:
          type: string
          description: Company state.
          example: NL_NH
        companyRegion:
          type: string
          description: Company region.
          example: NL_NH_6
        companyPostalCode:
          type: string
          description: Company postal code.
          example: 1314CH
        companyPhone:
          type: string
          description: Mobile phone number of the company.
          example: "310682123321"
        companyEmail:
          type: string
          description: The main contact email of the company / property manager.
          example: mail@website.com
        checkInOutTimes:
          $ref: '#/components/schemas/CheckInOutTimes'
        socialMediaLinks:
          title: SocialMediaLinks
          type: array
          description: social media link in key-value format
          example:
          - name: facebook
            url: https://www.facebook.com/amazingpage
          items:
            $ref: '#/components/schemas/SocialMediaLink'
        termsAndConditions:
          type: string
          description: A url for the company / property manager terms and conditions.
          example: https://website.com/terms-and-conditions
        logoUrl:
          type: string
          description: A photo url for the company / property manager logo.
          example: https://example-url.com
        faviconUrl:
          type: string
          description: A photo url for the company / property manager fav icon.
          example: https://example-url.com
        spokenLanguages:
          type: array
          description: 2 letter language codes spoken by the staff at the properties
            for checking or services.
          example:
          - en
          items:
            type: string
        acceptedPaymentMethods:
          type: array
          description: These are accepted payment methods for guest reservations.
            See mapping-codes endpoint
          example:
          - AME001
          items:
            type: string
        acceptedCurrencies:
          type: array
          description: These are accepted currencies (3 letter codes) for guest reservations.
          example:
          - EUR
          items:
            type: string
      example:
        website: https://example-website.com
        address: "P.J. Oudweg 4, 1314 CH Almere, Netherlands"
        acceptedPaymentMethods:
        - AME001
        checkInOutTimes:
          checkInFrom: 14:00
          checkInUntil: 22:00
          checkOutFrom: 06:00
          checkOutUntil: 11:00
        city: Gemeente Amsterdam
        companyState: NL_NH
        hostInformation: "Run by a family, these accommodations offer the best of\
          \ the best"
        logoUrl: https://example-url.com
        termsAndConditions: https://website.com/terms-and-conditions
        acceptedCurrencies:
        - EUR
        mainCurrency: EUR
        faviconUrl: https://example-url.com
        companyRegion: NL_NH_6
        companyEmail: mail@website.com
        companyPhone: "310682123321"
        countryCode: NL
        hostInformationTranslations:
          en:
            translation: "Run by a family, these accommodations offer the best of\
              \ the best"
            default: true
          nl:
            translation: "Gerund door een familie, bieden deze accommodaties het beste\
              \ van het beste"
            default: false
        socialMediaLinks:
        - name: facebook
          url: https://www.facebook.com/amazingpage
        spokenLanguages:
        - en
        companyPostalCode: 1314CH
    PropertyManagerContact:
      title: PropertyManagerContact
      required:
      - address
      - city
      - country
      - email
      - firstName
      - lastName
      - postalCode
      - region
      - role
      - state
      - telephone
      type: object
      properties:
        firstName:
          type: string
          description: The first name of the contact.
        lastName:
          type: string
          description: Last name of the contact.
        middleName:
          type: string
          description: (Optional) Middle name of the contact.
        telephone:
          type: string
          description: Contact telephone.
        email:
          type: string
          description: Contact email address.
        mobilePhone:
          type: string
          description: Mobile phone number of the contact.
        address:
          type: string
          description: This is the address the contact is located.
          example: "P.J. Oudweg 4, 1314 CH Almere, Netherlands"
        postalCode:
          type: string
          description: This is the postal code where contact is located.
        city:
          type: string
          description: This is the city where the contact is located.
        state:
          type: string
          description: This is the state or province where the contact is located.
        region:
          type: string
          description: This is the region where the contact is located.
        country:
          type: string
          description: The 2 letter country code that the contact is located
        title:
          type: string
          description: The title of the contact.
        role:
          type: string
          description: "The role of the contact. Accepted values are main, technical,\
            \ reservations, customer_service, management, administration, finance.\
            \ Note you can have only have 1 main contact and that contact is mandatory\
            \ for creating the property manager."
          example: main
          enum:
          - main
          - technical
          - reservations
          - customer_service
          - management
          - administration
          - finance
    PropertyManagerRateSettings:
      title: PropertyManagerRateSettings
      type: object
      properties:
        monthLength:
          type: integer
          description: How many nights are included in a monthly rate.
          example: 28
        minBookingOffset:
          type: integer
          description: in hours. How many hours before checkin can guest make a reservation
            from now. 0 means no restriction or limit.
          example: 2
        maxBookingOffset:
          type: integer
          description: in hours. How far in the future can guests make a reservation.
            0 means no restriction or limit.
          example: 6
        defaultMinStay:
          type: integer
          description: Default minimum stay (nights).
          example: 2
        defaultMaxStay:
          type: integer
          description: Default maximum stay (nights).
          example: 6
      example:
        defaultMinStay: 2
        monthLength: 28
        maxBookingOffset: 6
        defaultMaxStay: 6
        minBookingOffset: 2
    PropertyManagerInvoiceDetails:
      title: PropertyManagerInvoiceDetails
      required:
      - email
      - entityAddress1
      - entityCity
      - entityCountry
      - entityName
      - entityPostalCode
      - entityRegion
      - entityState
      - firstName
      - lastName
      - telephone
      type: object
      properties:
        taxNumber:
          type: string
          description: VAT or TAX registration number
          example: "123456789"
        registrationNumber:
          type: string
          description: Registration number (Companies House or Chamber of Commerce)
          example: "123456"
        ibanAccountNumber:
          type: string
          description: This defines a bank account number used for making or receiving
            payments. In European countries this may be an IBAN or simply account
            number in other countries
          example: NL99ABNA0123456789
        bicSwiftCode:
          type: string
          description: The BIC is an international code used to identify a bank or
            bank branch. This code is also called a Swift code
          example: ABNANL2AXXX
        entityName:
          type: string
          description: Company name for invoicing
          example: The Entity Name
        entityAddress1:
          type: string
          description: Company address for invoicing
          example: "P.J. Oudweg 4, 1314 CH Almere, Netherlands"
        entityAddress2:
          type: string
          description: (Optional) Company address line 2 for invoicing
          example: "P.J. Oudweg 4, 1314 CH Almere, Netherlands"
        entityPostalCode:
          type: string
          description: Company postal code for invoicing
          example: 1314CH
        entityCity:
          type: string
          description: Company City for invoicing
          example: Gemeente Amsterdam
        entityState:
          type: string
          description: Company state for invoicing
          example: NL_NH
        entityRegion:
          type: string
          description: Company region for invoicing
          example: NL_NH_6
        entityCountry:
          type: string
          description: Company country for invoicing
          example: NL
        firstName:
          type: string
          description: First name for invoicing
          example: FirstName
        lastName:
          type: string
          description: Last name for invoicing
          example: LastName
        telephone:
          type: string
          description: telephone number for invoices contact
          example: <prefix>12345678
        mobile:
          type: string
          description: Mobile phone number for invoices contact
          example: <prefix>12345678
        email:
          type: string
          description: Email for invoices contact
          example: mail@website.com
      example:
        entityPostalCode: 1314CH
        lastName: LastName
        mobile: <prefix>12345678
        taxNumber: "123456789"
        telephone: <prefix>12345678
        entityRegion: NL_NH_6
        entityAddress2: "P.J. Oudweg 4, 1314 CH Almere, Netherlands"
        entityAddress1: "P.J. Oudweg 4, 1314 CH Almere, Netherlands"
        firstName: FirstName
        bicSwiftCode: ABNANL2AXXX
        entityCountry: NL
        entityState: NL_NH
        registrationNumber: "123456"
        entityName: The Entity Name
        ibanAccountNumber: NL99ABNA0123456789
        entityCity: Gemeente Amsterdam
        email: mail@website.com
    PropertyManagerRequestCancellationPolicy:
      required:
      - cancellationRules
      - policyName
      properties:
        cancellationPolicyId:
          type: integer
          description: "You can provide policyID to use it later with properties through\
            \ our API. If policy with the same ID exists, it will be overwritten."
          example: 1
        policyName:
          type: string
          description: A partner provided name for the cancellation policy.
          example: Non refundable
        policyStatus:
          type: string
          description: An indicator whether the policy is active or inactive. Default
            = inactive Please use isDefault to indicate the main applicable policy.
            Any other policies present will then be additional. All present policies
            are active.
          example: active
          enum:
          - inactive
          - active
        isDefault:
          type: boolean
          description: An indicator whether the policy is the default policy for the
            property manager. Default = false
          example: false
        channelId:
          type: string
          description: optional channel id for cancellation rules.
          example: HOL303
        cancellationRules:
          $ref: '#/components/schemas/PolicyCancellationRuleData'
        prepaymentRules:
          $ref: '#/components/schemas/PolicyPrepaymentRuleData'
    PolicyCancellationRuleData:
      properties:
        afterBookingAmountType:
          type: string
          description: "If there is a cancellation amount taken AFTER the booking\
            \ is made here we defined the type per_night, fixed_amount, percentage."
          example: percentage
          enum:
          - null
          - per_night
          - fixed_amount
          - percentage
        afterBookingAmount:
          type: integer
          description: If there is a cancellation amount taken AFTER the booking is
            made here we defined the actual amount in relation to the amount type.
          example: 15
        afterBookingHours:
          type: integer
          description: "If there is a cancellation amount taken AFTER the booking\
            \ is made here we defined the time (in hours) it applies after the booking\
            \ is made. For example, 0 indicates a non-refundable booking as the amount\
            \ is due right after a reservation is made."
          example: 0
        noShowAmountType:
          type: string
          description: "If there is a no-show penalty then here we define the amount\
            \ type per_night, percentage."
          example: percentage
          enum:
          - null
          - per_night
          - percentage
        noShowAmount:
          type: integer
          description: If there is a no-show penalty then here we define the actual
            amount in relation to the type.
          example: 2
        beforeArrivalAmountType:
          type: string
          description: "If there is a cancellation amount taken BEFORE the guest arrives\
            \ then here we define the amount type per_night, fixed_amount, percentage."
          example: per_night
          enum:
          - null
          - per_night
          - fixed_amount
          - percentage
        beforeArrivalAmount:
          type: integer
          description: If there is a cancellation amount taken BEFORE the guest arrives
            then here we define the amount in relation to the amount type.
          example: 20
        beforeArrivalHours:
          type: integer
          description: If there is a cancellation amount taken BEFORE the guest arrives
            then here we define the time (in hours) before the guest arrival.
          example: 0
        beforeArrivalAmountType2:
          type: string
          description: "If there is a cancellation amount taken BEFORE the guest arrives\
            \ then here we define the amount type per_night, fixed_amount, percentage."
          example: per_night
          enum:
          - null
          - per_night
          - fixed_amount
          - percentage
        beforeArrivalAmount2:
          type: integer
          description: If there is a cancellation amount taken BEFORE the guest arrives
            then here we define the amount in relation to the amount type.
          example: 20
        beforeArrivalHours2:
          type: integer
          description: If there is a cancellation amount taken BEFORE the guest arrives
            then here we define the time (in hours) before the guest arrival.
          example: 0
        beforeArrivalAmountType3:
          type: string
          description: "If there is a cancellation amount taken BEFORE the guest arrives\
            \ then here we define the amount type per_night, fixed_amount, percentage."
          example: per_night
          enum:
          - null
          - per_night
          - fixed_amount
          - percentage
        beforeArrivalAmount3:
          type: integer
          description: If there is a cancellation amount taken BEFORE the guest arrives
            then here we define the amount in relation to the amount type.
          example: 20
        beforeArrivalHours3:
          type: integer
          description: If there is a cancellation amount taken BEFORE the guest arrives
            then here we define the time (in hours) before the guest arrival.
          example: 0
      example:
        beforeArrivalAmount: 20
        beforeArrivalHours2: 0
        beforeArrivalAmountType: per_night
        beforeArrivalAmountType2: per_night
        beforeArrivalHours3: 0
        beforeArrivalAmountType3: per_night
        afterBookingAmountType: percentage
        afterBookingHours: 0
        noShowAmount: 2
        afterBookingAmount: 15
        beforeArrivalAmount3: 20
        beforeArrivalAmount2: 20
        beforeArrivalHours: 0
        noShowAmountType: percentage
    PolicyPrepaymentRuleData:
      properties:
        afterBookingAmountType:
          type: string
          description: "If there is a prepayment (deposit) amount taken AFTER the\
            \ booking is made here we defined the type per_night, fixed_amount, percentage."
          example: percentage
          enum:
          - null
          - per_night
          - fixed_amount
          - percentage
        afterBookingAmount:
          type: integer
          description: If there is a prepayment (deposit) amount taken AFTER the booking
            is made here we defined the actual amount in relation to the amount type.
          example: 15
        afterBookingHours:
          type: integer
          description: "If there is a prepayment (deposit) taken AFTER the booking\
            \ is made then here we define the time (in hours) when the prepayment\
            \ becomes applicable. For example, 0 indicates the prepayment is due right\
            \ away after a reservation is made."
          example: 0
        beforeArrivalAmountType:
          type: string
          description: "If there is a prepayment (deposit) amount taken BEFORE the\
            \ guest arrives then here we defined the type per_night, fixed_amount,\
            \ percentage."
          example: per_night
          enum:
          - null
          - per_night
          - fixed_amount
          - percentage
        beforeArrivalAmount:
          type: integer
          description: If there is a prepayment (deposit) amount taken BEFORE the
            guest arrives then here we defined the actual amount in relation to the
            amount type.
          example: 20
        beforeArrivalHours:
          type: integer
          description: "If there is a prepayment (deposit) taken BEFORE the guest\
            \ arrives then here we define the time (in hours) when the prepayment\
            \ becomes applicable. For example, 0 indicates the prepayment is due on\
            \ arrival. 48 would indicate that the prepayment is due 2 days before\
            \ arrival."
          example: 0
      example:
        afterBookingAmountType: percentage
        afterBookingHours: 0
        afterBookingAmount: 15
        beforeArrivalHours: 0
        beforeArrivalAmount: 20
        beforeArrivalAmountType: per_night
    PropertySpecificCancellationPolicy:
      required:
      - channelId
      - channelPolicyId
      properties:
        channelId:
          type: string
          description: "This is the channel specific ID. Allowed values are channel\
            \ codes for Vrbo/Homeaway, Booking.com, Agoda, Airbnb, Expedia, Marriott.\
            \ See channel-codes endpoint for the channel id values."
        channelPolicyId:
          type: string
          description: This is a channel specific policy ID. See channel-policies-codes
            endpoint for values.
    PropertyManagerChannelSpecificCancellationPolicy:
      required:
      - channelId
      - channelPolicyId
      - isDefault
      - locations
      - policyStatus
      properties:
        locations:
          type: array
          items:
            $ref: '#/components/schemas/Location'
        channelId:
          type: string
          description: "This is the channel specific ID. Allowed values are channel\
            \ codes for Vrbo/Homeaway, Booking.com, Agoda, Airbnb, Expedia, Marriott,\
            \ HomeToGo. See channel-codes endpoint for the channel id values. We also\
            \ support custom policies for Expedia and HomeAway. In this cases the\
            \ channelPolicyId is CUSTOM and the custom rules below are applicable."
        channelPolicyId:
          type: string
          description: "This is a channel specific policy ID. See channel-policies-codes\
            \ endpoint for values. We also support custom policies for Expedia, HomeAway,\
            \ HomeToGo, Holidu. In this cases the channelPolicyId is custom and the\
            \ custom rules below are applicable."
        policyStatus:
          type: string
          description: An indicator whether the policy is active or inactive. Please
            use isDefault to indicate the main applicable policies. Any other policies
            present will then be additional. All present policies are active. Default
            = active
          example: active
          enum:
          - inactive
          - active
        isDefault:
          type: boolean
          description: An indicator whether the policy is a default policy for the
            specific channel. Default = false
          example: false
        customRules:
          $ref: '#/components/schemas/PropertyManagerChannelSpecificCancellationPolicy_customRules'
    PropertyManagerPoliciesRequest:
      required:
      - cancellationPolicies
      - channelSpecificCancellationPolicies
      - childrenPolicies
      - guestInformation
      - houseRules
      - internetPolicies
      - parkingPolicies
      - petsPolicies
      type: object
      properties:
        cancellationPolicies:
          type: array
          items:
            $ref: '#/components/schemas/PropertyManagerRequestCancellationPolicy'
        channelSpecificCancellationPolicies:
          type: array
          example:
          - channelId: EXP270
            channelPolicyId: 40PercentCostOfStay
            locations:
            - country: IT
            - country: NL
              state: Flevoland
          - channelId: HOM143
            channelPolicyId: RELAXED
            customRules:
              customFixedAmount: 200
              customFixedAmountCurrencyCode: EUR
              beforeArrivalAmount: 20
              beforeArrivalHours2: 0
              beforeArrivalAmountType: per_night
              beforeArrivalAmountType2: per_night
              beforeArrivalHours3: 0
              beforeArrivalAmountType3: per_night
              afterBookingAmountType: percentage
              afterBookingHours: 0
              afterBookingAmount: 15
              beforeArrivalAmount3: 20
              beforeArrivalAmount2: 20
              beforeArrivalHours: 0
          items:
            $ref: '#/components/schemas/PropertyManagerChannelSpecificCancellationPolicy'
        guestInformation:
          $ref: '#/components/schemas/PropertyManagerGuestInfoPolicies'
        houseRules:
          $ref: '#/components/schemas/PropertyManagerHouseRulesPolicies'
        internetPolicies:
          $ref: '#/components/schemas/PropertyManagerInternetPolicies'
        petsPolicies:
          $ref: '#/components/schemas/PropertyManagerPetsPolicies'
        childrenPolicies:
          $ref: '#/components/schemas/PropertyManagerChildrenPolicies'
        parkingPolicies:
          $ref: '#/components/schemas/PropertyManagerParkingPolicies'
        smokingPolicies:
          $ref: '#/components/schemas/PropertyManagerSmokingPolicies'
        guestExpectations:
          type: array
          description: This is a list of guest expectations that the property manager
            has for the guest.
          items:
            $ref: '#/components/schemas/GuestExpectationPolicy'
    PropertyManagerPoliciesResponse:
      title: PropertyManagerPoliciesResponse
      required:
      - data
      - requestId
      properties:
        data:
          $ref: '#/components/schemas/PropertyManagerPoliciesData'
        requestId:
          type: string
          description: unique request id used for identification.
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        data:
          parkingPolicies:
            indoorParking: available_free
            parkingType: none
            parkingReservation: not_required
            valetParking: not_available
            parkingCost: free
          channelSpecificCancellationPolicies:
          - channelId: EXP270
            channelPolicyId: 40PercentCostOfStay
          - channelId: HOM143
            channelPolicyId: RELAXED
            customRules:
              customFixedAmount: 200
              customFixedAmountCurrencyCode: EUR
              beforeArrivalAmount: 20
              beforeArrivalHours2: 0
              beforeArrivalAmountType: per_night
              beforeArrivalAmountType2: per_night
              beforeArrivalHours3: 0
              beforeArrivalAmountType3: per_night
              afterBookingAmountType: percentage
              afterBookingHours: 0
              afterBookingAmount: 15
              beforeArrivalAmount3: 20
              beforeArrivalAmount2: 20
              beforeArrivalHours: 0
          guestExpectations:
          - instructions: "[\"Please return the keys to the reception\",\"Please throw\
              \ the trash in the designated area\",\"Please turn off the lights when\
              \ you leave\",\"Please lock the door when you leave\",\"Please gather\
              \ the towels in the bathroom\",\"Please contact us if you have any questions\"\
              ]"
            expectation: return_keys
            status: enabled
          - instructions: "[\"Please return the keys to the reception\",\"Please throw\
              \ the trash in the designated area\",\"Please turn off the lights when\
              \ you leave\",\"Please lock the door when you leave\",\"Please gather\
              \ the towels in the bathroom\",\"Please contact us if you have any questions\"\
              ]"
            expectation: return_keys
            status: enabled
          childrenPolicies:
            highChairsPrice: 3100
            highChairsAvailable: 4
            babyCotsAvailable: 5
            childrenCost: 200
            childrenAge: 16
            childrenCostType: cost_per_child
            childrenCostAge: 5
            childrenLimit: 6
            additionalInfoChildren: Any additional info
            infantsAge: 3
            babyCotsPrice: 3100
            childrenAllowed: true
            childrenLimitPerAdult: true
          guestInformation:
            addressRequirement: false
            depositCollectionMethod:
            - cash
            contactNumberRequirement: true
            depositCollectionTime: 2
            damageDepositAmount: 300
            depositReturnMethod:
            - cash
            keyCollectionMethod: lock_box
            depositReturnTime: within_7_days
            keyHandoverDays:
            - monday
            - sunday
            guestBookingTypes: instant_bookings
            keyHandoverTime: after_receiving_travel_document
            damageDepositRequirement: before_arrival
            keyAlternateLocation: We can meet on the train station
          cancellationPolicies:
          - cancellationRules:
              beforeArrivalAmount: 20
              beforeArrivalHours2: 0
              beforeArrivalAmountType: per_night
              beforeArrivalAmountType2: per_night
              beforeArrivalHours3: 0
              beforeArrivalAmountType3: per_night
              afterBookingAmountType: percentage
              afterBookingHours: 0
              noShowAmount: 2
              afterBookingAmount: 15
              beforeArrivalAmount3: 20
              beforeArrivalAmount2: 20
              beforeArrivalHours: 0
              noShowAmountType: percentage
            isDefault: false
            policyName: Non refundable
            cancellationPolicyId: 6
            prepaymentRules:
              afterBookingAmountType: percentage
              afterBookingHours: 0
              afterBookingAmount: 15
              beforeArrivalHours: 0
              beforeArrivalAmount: 20
              beforeArrivalAmountType: per_night
            policyStatus: active
            channelId: HOL303
          - cancellationRules:
              beforeArrivalAmount: 20
              beforeArrivalHours2: 0
              beforeArrivalAmountType: per_night
              beforeArrivalAmountType2: per_night
              beforeArrivalHours3: 0
              beforeArrivalAmountType3: per_night
              afterBookingAmountType: percentage
              afterBookingHours: 0
              noShowAmount: 2
              afterBookingAmount: 15
              beforeArrivalAmount3: 20
              beforeArrivalAmount2: 20
              beforeArrivalHours: 0
              noShowAmountType: percentage
            isDefault: false
            policyName: Non refundable
            cancellationPolicyId: 6
            prepaymentRules:
              afterBookingAmountType: percentage
              afterBookingHours: 0
              afterBookingAmount: 15
              beforeArrivalHours: 0
              beforeArrivalAmount: 20
              beforeArrivalAmountType: per_night
            policyStatus: active
            channelId: HOL303
          houseRules:
            quietHoursStartTime: 22:00
            eventsAllowed: true
            guestDocumentationRequired: none
            eventsAdditionalInfo: Any additional info
            minAgeRequirement: 5
            maxAgeRequirement: 5
            curfewStartTime: 22:00
            additionalInfoHouseRules: Any additional info
            quietHoursEndTime: 08:00
            curfewEndTime: 06:00
          smokingPolicies:
            smokingAllowed: "no"
            nonSmokingOption: true
          internetPolicies:
            internetAvailable: isdn
            wifiNetwork: MyWifiNetwork
            wifiAvailable: available
            internetCost: free
            wifiPassword: MyWifiPassword
          petsPolicies:
            additionalInfoPets: Any additional info
            petsAllowed: allowed
            maxPets: 6
        requestId: d6c84f022bc94ba08558af7873c3f5a1
    PropertyManagerPoliciesData:
      required:
      - cancellationPolicies
      - channelSpecificCancellationPolicies
      - childrenPolicies
      - guestInformation
      - houseRules
      - internetPolicies
      - parkingPolicies
      - petsPolicies
      type: object
      properties:
        cancellationPolicies:
          type: array
          items:
            $ref: '#/components/schemas/PropertyManagerResponseCancellationPolicy'
        channelSpecificCancellationPolicies:
          type: array
          example:
          - channelId: EXP270
            channelPolicyId: 40PercentCostOfStay
          - channelId: HOM143
            channelPolicyId: RELAXED
            customRules:
              customFixedAmount: 200
              customFixedAmountCurrencyCode: EUR
              beforeArrivalAmount: 20
              beforeArrivalHours2: 0
              beforeArrivalAmountType: per_night
              beforeArrivalAmountType2: per_night
              beforeArrivalHours3: 0
              beforeArrivalAmountType3: per_night
              afterBookingAmountType: percentage
              afterBookingHours: 0
              afterBookingAmount: 15
              beforeArrivalAmount3: 20
              beforeArrivalAmount2: 20
              beforeArrivalHours: 0
          items:
            $ref: '#/components/schemas/PropertyManagerChannelSpecificCancellationPolicy'
        guestInformation:
          $ref: '#/components/schemas/PropertyManagerGuestInfoPolicies'
        houseRules:
          $ref: '#/components/schemas/PropertyManagerHouseRulesPolicies'
        internetPolicies:
          $ref: '#/components/schemas/PropertyManagerInternetPolicies'
        petsPolicies:
          $ref: '#/components/schemas/PropertyManagerPetsPolicies'
        childrenPolicies:
          $ref: '#/components/schemas/PropertyManagerChildrenPolicies'
        parkingPolicies:
          $ref: '#/components/schemas/PropertyManagerParkingPolicies'
        smokingPolicies:
          $ref: '#/components/schemas/PropertyManagerSmokingPolicies'
        guestExpectations:
          type: array
          description: This is a list of guest expectations that the property manager
            has for the guest.
          items:
            $ref: '#/components/schemas/GuestExpectationPolicy'
      example:
        parkingPolicies:
          indoorParking: available_free
          parkingType: none
          parkingReservation: not_required
          valetParking: not_available
          parkingCost: free
        channelSpecificCancellationPolicies:
        - channelId: EXP270
          channelPolicyId: 40PercentCostOfStay
        - channelId: HOM143
          channelPolicyId: RELAXED
          customRules:
            customFixedAmount: 200
            customFixedAmountCurrencyCode: EUR
            beforeArrivalAmount: 20
            beforeArrivalHours2: 0
            beforeArrivalAmountType: per_night
            beforeArrivalAmountType2: per_night
            beforeArrivalHours3: 0
            beforeArrivalAmountType3: per_night
            afterBookingAmountType: percentage
            afterBookingHours: 0
            afterBookingAmount: 15
            beforeArrivalAmount3: 20
            beforeArrivalAmount2: 20
            beforeArrivalHours: 0
        guestExpectations:
        - instructions: "[\"Please return the keys to the reception\",\"Please throw\
            \ the trash in the designated area\",\"Please turn off the lights when\
            \ you leave\",\"Please lock the door when you leave\",\"Please gather\
            \ the towels in the bathroom\",\"Please contact us if you have any questions\"\
            ]"
          expectation: return_keys
          status: enabled
        - instructions: "[\"Please return the keys to the reception\",\"Please throw\
            \ the trash in the designated area\",\"Please turn off the lights when\
            \ you leave\",\"Please lock the door when you leave\",\"Please gather\
            \ the towels in the bathroom\",\"Please contact us if you have any questions\"\
            ]"
          expectation: return_keys
          status: enabled
        childrenPolicies:
          highChairsPrice: 3100
          highChairsAvailable: 4
          babyCotsAvailable: 5
          childrenCost: 200
          childrenAge: 16
          childrenCostType: cost_per_child
          childrenCostAge: 5
          childrenLimit: 6
          additionalInfoChildren: Any additional info
          infantsAge: 3
          babyCotsPrice: 3100
          childrenAllowed: true
          childrenLimitPerAdult: true
        guestInformation:
          addressRequirement: false
          depositCollectionMethod:
          - cash
          contactNumberRequirement: true
          depositCollectionTime: 2
          damageDepositAmount: 300
          depositReturnMethod:
          - cash
          keyCollectionMethod: lock_box
          depositReturnTime: within_7_days
          keyHandoverDays:
          - monday
          - sunday
          guestBookingTypes: instant_bookings
          keyHandoverTime: after_receiving_travel_document
          damageDepositRequirement: before_arrival
          keyAlternateLocation: We can meet on the train station
        cancellationPolicies:
        - cancellationRules:
            beforeArrivalAmount: 20
            beforeArrivalHours2: 0
            beforeArrivalAmountType: per_night
            beforeArrivalAmountType2: per_night
            beforeArrivalHours3: 0
            beforeArrivalAmountType3: per_night
            afterBookingAmountType: percentage
            afterBookingHours: 0
            noShowAmount: 2
            afterBookingAmount: 15
            beforeArrivalAmount3: 20
            beforeArrivalAmount2: 20
            beforeArrivalHours: 0
            noShowAmountType: percentage
          isDefault: false
          policyName: Non refundable
          cancellationPolicyId: 6
          prepaymentRules:
            afterBookingAmountType: percentage
            afterBookingHours: 0
            afterBookingAmount: 15
            beforeArrivalHours: 0
            beforeArrivalAmount: 20
            beforeArrivalAmountType: per_night
          policyStatus: active
          channelId: HOL303
        - cancellationRules:
            beforeArrivalAmount: 20
            beforeArrivalHours2: 0
            beforeArrivalAmountType: per_night
            beforeArrivalAmountType2: per_night
            beforeArrivalHours3: 0
            beforeArrivalAmountType3: per_night
            afterBookingAmountType: percentage
            afterBookingHours: 0
            noShowAmount: 2
            afterBookingAmount: 15
            beforeArrivalAmount3: 20
            beforeArrivalAmount2: 20
            beforeArrivalHours: 0
            noShowAmountType: percentage
          isDefault: false
          policyName: Non refundable
          cancellationPolicyId: 6
          prepaymentRules:
            afterBookingAmountType: percentage
            afterBookingHours: 0
            afterBookingAmount: 15
            beforeArrivalHours: 0
            beforeArrivalAmount: 20
            beforeArrivalAmountType: per_night
          policyStatus: active
          channelId: HOL303
        houseRules:
          quietHoursStartTime: 22:00
          eventsAllowed: true
          guestDocumentationRequired: none
          eventsAdditionalInfo: Any additional info
          minAgeRequirement: 5
          maxAgeRequirement: 5
          curfewStartTime: 22:00
          additionalInfoHouseRules: Any additional info
          quietHoursEndTime: 08:00
          curfewEndTime: 06:00
        smokingPolicies:
          smokingAllowed: "no"
          nonSmokingOption: true
        internetPolicies:
          internetAvailable: isdn
          wifiNetwork: MyWifiNetwork
          wifiAvailable: available
          internetCost: free
          wifiPassword: MyWifiPassword
        petsPolicies:
          additionalInfoPets: Any additional info
          petsAllowed: allowed
          maxPets: 6
    PropertyManagerResponseCancellationPolicy:
      required:
      - cancellationPolicyId
      - cancellationRules
      - policyName
      - policyStatus
      properties:
        policyName:
          type: string
          description: A partner provided name for the cancellation policy.
          example: Non refundable
        cancellationPolicyId:
          type: integer
          description: A cancellation policy id that can be used to set a policy on
            property level.
          example: 6
        policyStatus:
          type: string
          description: An indicator whether the policy is active or inactive. Default
            = inactive. This field will be deprecated in the next API version. Please
            use isDefault to indicate the main applicable policy. Any other policies
            present will then be additional. All present policies are active.
          example: active
          enum:
          - inactive
          - active
        isDefault:
          type: boolean
          description: An indicator whether the policy is the default policy for the
            property manager. Default = false
          example: false
        channelId:
          type: string
          description: channel id for cancellation rules.
          example: HOL303
        cancellationRules:
          $ref: '#/components/schemas/PolicyCancellationRuleData'
        prepaymentRules:
          $ref: '#/components/schemas/PolicyPrepaymentRuleData'
      example:
        cancellationRules:
          beforeArrivalAmount: 20
          beforeArrivalHours2: 0
          beforeArrivalAmountType: per_night
          beforeArrivalAmountType2: per_night
          beforeArrivalHours3: 0
          beforeArrivalAmountType3: per_night
          afterBookingAmountType: percentage
          afterBookingHours: 0
          noShowAmount: 2
          afterBookingAmount: 15
          beforeArrivalAmount3: 20
          beforeArrivalAmount2: 20
          beforeArrivalHours: 0
          noShowAmountType: percentage
        isDefault: false
        policyName: Non refundable
        cancellationPolicyId: 6
        prepaymentRules:
          afterBookingAmountType: percentage
          afterBookingHours: 0
          afterBookingAmount: 15
          beforeArrivalHours: 0
          beforeArrivalAmount: 20
          beforeArrivalAmountType: per_night
        policyStatus: active
        channelId: HOL303
    PropertyManagerGuestInfoPolicies:
      properties:
        addressRequirement:
          type: boolean
          description: Flag to indicate if an address is required from the guest for
            a booking. Used for both proerty manager and property.
          example: false
        guestBookingTypes:
          type: string
          description: "This setting can be used to indicate the type of bookings\
            \ guests are allowed to make. Values allowed are instant_bookings, request_bookings\
            \ or instant_and_request. If value is not provided we will default to\
            \ instant bookings only where guests can only make confirmed instant bookings."
          default: instant_bookings
          enum:
          - instant_bookings
          - request_bookings
          - instant_and_request
        contactNumberRequirement:
          type: boolean
          description: Flag to indicate if a contact phone number is required from
            the guest for a booking.
          example: true
        damageDepositRequirement:
          type: string
          description: "Defines if a damage deposit (incidentals) is required for\
            \ a booking. Allowed values are no_deposit, at_booking_time, before_arrival,\
            \ at_arrival"
          example: before_arrival
          enum:
          - no_deposit
          - at_booking_time
          - before_arrival
          - at_arrival
        damageDepositAmount:
          type: integer
          description: Defines the damage deposit amount in cents.
          example: 300
        depositCollectionTime:
          type: integer
          description: Defines how many days before arrival a damage deposit is collected.
            Only valid for damageDepositRequirement with value before_arrival.
          example: 2
        depositCollectionMethod:
          type: array
          description: "Defines how the damage deposit is collected. Allowed values\
            \ are bank_transfer, credit_card, cash, online_paypal."
          example:
          - cash
          items:
            type: string
            enum:
            - bank_transfer
            - credit_card
            - cash
            - online_paypal
        depositReturnTime:
          type: string
          description: "Defines when the damage deposit is returned to the guest.\
            \ Allowed values are at_checkout, within_7_days, within_14_days."
          example: within_7_days
          enum:
          - at_checkout
          - within_7_days
          - within_14_days
        depositReturnMethod:
          type: array
          description: "Defines how the damage deposit is returned to the guest. Allowed\
            \ values are bank_transfer, credit_card, cash, online_paypal."
          example:
          - cash
          items:
            type: string
            enum:
            - bank_transfer
            - credit_card
            - cash
            - online_paypal
        keyCollectionMethod:
          type: string
          description: Defines how keys are collected or entry at the property is
            provided. Please see the enum values.
          example: lock_box
          enum:
          - at_reception
          - someone_will_meet
          - door_code
          - lock_box
          - will_send_instructions
          - contact_us
          - secret_location
          - smart_lock
          - other
        keyAlternateLocation:
          type: string
          description: Defines an alternate location where they keys can be picked
            up. Only valid when keyCollectionMethod is other.
          example: We can meet on the train station
        keyHandoverDays:
          type: array
          description: You can indicate on which days the key may be handed over.
            For all days leave empty or input all days of the week. This field conflicts
            with keyHandoverTime
          example:
          - monday
          - sunday
          items:
            type: string
        keyHandoverTime:
          type: string
          description: "Defines a specific time when the key can be handed over. Use\
            \ only when this is different than the arrival day. It conflicts with\
            \ keyHandoverDays. Possible values are after_receiving_travel_document,\
            \ 1_10_days_before_checkin, 14_28_days_before_checkin."
          example: after_receiving_travel_document
          enum:
          - after_receiving_travel_document
          - 1_10_days_before_checkin
          - 14_28_days_before_checkin
      example:
        addressRequirement: false
        depositCollectionMethod:
        - cash
        contactNumberRequirement: true
        depositCollectionTime: 2
        damageDepositAmount: 300
        depositReturnMethod:
        - cash
        keyCollectionMethod: lock_box
        depositReturnTime: within_7_days
        keyHandoverDays:
        - monday
        - sunday
        guestBookingTypes: instant_bookings
        keyHandoverTime: after_receiving_travel_document
        damageDepositRequirement: before_arrival
        keyAlternateLocation: We can meet on the train station
    PropertyManagerHouseRulesPolicies:
      properties:
        minAgeRequirement:
          type: integer
          description: Defines if there is a minimum age requirement to stay at a
            property. Used for both proerty manager and property.
          example: 5
        maxAgeRequirement:
          type: integer
          description: Defines if there is a maximum age requirement to stay at a
            property.
          example: 5
        curfewStartTime:
          type: string
          description: If there is a curfew time starting from a specific time it
            could be specified here. Example "22:00" would indicate a curfew starting
            at 22:00 hours (or 10pm).
          example: 22:00
        curfewEndTime:
          type: string
          description: If there is a curfew time ending at a specific time it could
            be specified here. Example "06:00" would indicate a curfew ending at 06:00
            hours (or 6am).
          example: 06:00
        quietHoursStartTime:
          type: string
          description: If there are quiet hours time starting at a specific time it
            could be specified here. Example "22:00" would indicate quiet hours starting
            at 22:00 hours (or 10pm).
          example: 22:00
        quietHoursEndTime:
          type: string
          description: If there are quiet hours time ending at a specific time it
            could be specified here. Example "08:00" would indicate quiet hours ending
            at 08:00 hours (or 8am).
          example: 08:00
        additionalInfoHouseRules:
          type: string
          description: Any other house rules can be added here.
          example: Any additional info
        eventsAllowed:
          type: boolean
          description: Indicates whether events or parties are allowed.
          example: true
        eventsAdditionalInfo:
          type: string
          description: Any other information related to events can be added here.
          example: Any additional info
        guestDocumentationRequired:
          type: string
          description: "Indicates whether ID or passport is required for guests checking\
            \ in. Values accepted are none, all_guests, non_domestic_only"
          example: none
          enum:
          - none
          - all_guests
          - non_domestic_only
      example:
        quietHoursStartTime: 22:00
        eventsAllowed: true
        guestDocumentationRequired: none
        eventsAdditionalInfo: Any additional info
        minAgeRequirement: 5
        maxAgeRequirement: 5
        curfewStartTime: 22:00
        additionalInfoHouseRules: Any additional info
        quietHoursEndTime: 08:00
        curfewEndTime: 06:00
    PropertyManagerInternetPolicies:
      properties:
        internetAvailable:
          type: string
          description: "Indicate if internet is available and under what service.\
            \ Allowed values are not_available, adsl, cable, isdn, satellite, at_reception.\
            \ Used for both proerty manager and property."
          example: isdn
          enum:
          - not_available
          - adsl
          - cable
          - isdn
          - satellite
          - at_reception
        wifiAvailable:
          type: string
          description: "Indicate if wifi is available and under what service. Allowed\
            \ values are not_available, available, at_reception."
          example: available
          enum:
          - not_available
          - available
          - at_reception
        internetCost:
          type: string
          description: "Indicate if internet is free or for a charge. Allowed values\
            \ are free, at_cost."
          example: free
          enum:
          - free
          - at_cost
        wifiNetwork:
          type: string
          description: The name of the wifi network.
          example: MyWifiNetwork
        wifiPassword:
          type: string
          description: The password for the wifi network.
          example: MyWifiPassword
      example:
        internetAvailable: isdn
        wifiNetwork: MyWifiNetwork
        wifiAvailable: available
        internetCost: free
        wifiPassword: MyWifiPassword
    PropertyManagerPetsPolicies:
      properties:
        petsAllowed:
          type: string
          description: Flag to indicate if pets are welcome. Used for both proerty
            manager and property.
          example: allowed
          enum:
          - allowed
          - not_allowed
          - follow_property_max_pets
          - on_request
        maxPets:
          type: integer
          description: Number of maximum pets allowed per reservation.
          example: 6
        additionalInfoPets:
          type: string
          description: Additional pets information may be provided here.
          example: Any additional info
      example:
        additionalInfoPets: Any additional info
        petsAllowed: allowed
        maxPets: 6
    PropertyManagerChildrenPolicies:
      properties:
        childrenAllowed:
          type: boolean
          description: Flag to indicate if children are welcome.
          example: true
        childrenCostType:
          type: string
          description: "Defines whether there is an extra cost for children. Values\
            \ allowed are no_cost, cost_per_child, cost_after_specific_age. Used for\
            \ both proerty manager and property."
          example: cost_per_child
          enum:
          - no_cost
          - cost_per_child
          - cost_after_specific_age
        childrenCostAge:
          type: integer
          description: Age from which a cost is required. Only applicable if childrenCostType
            is cost_after_specific_age
          example: 5
        childrenCost:
          type: integer
          description: Amount in cents per child in the property currency. Only applicable
            if childrenCostType is cost_after_specific_age or cost_per_child
          example: 200
        childrenLimitPerAdult:
          type: boolean
          description: Flag to indicate if there is a limit to the number of children
            allowed per adult
          example: true
        childrenLimit:
          type: integer
          description: If flag childrenLimitPerAdult is true then this should have
            a value higher than 0
          example: 6
        babyCotsAvailable:
          type: integer
          description: Indicates the number of baby cots or beds available. 0 for
            none.
          example: 5
        highChairsAvailable:
          type: integer
          description: Indicates the number of high chairs available. 0 for none.
          example: 4
        babyCotsPrice:
          type: integer
          description: Indicates an optional price in cents for baby cots / beds.
            0 for no price (free).
          example: 3100
        highChairsPrice:
          type: integer
          description: Indicates an optional price in cents for high chairs. 0 for
            no price (free).
          example: 3100
        additionalInfoChildren:
          type: string
          description: Additional pets information may be provided here.
          example: Any additional info
        infantsAge:
          type: integer
          description: The age until a guest is considered an infant. Default is 2
          example: 3
        childrenAge:
          type: integer
          description: The age until a guest is considered a child. Default 18
          example: 16
      example:
        highChairsPrice: 3100
        highChairsAvailable: 4
        babyCotsAvailable: 5
        childrenCost: 200
        childrenAge: 16
        childrenCostType: cost_per_child
        childrenCostAge: 5
        childrenLimit: 6
        additionalInfoChildren: Any additional info
        infantsAge: 3
        babyCotsPrice: 3100
        childrenAllowed: true
        childrenLimitPerAdult: true
    PropertyManagerParkingPolicies:
      properties:
        parkingType:
          type: string
          description: "Defines the type of parking available. Possible values are\
            \ none, carport, garage, private_spot, outside_spot, public_nearby. Used\
            \ for both proerty manager and property."
          example: none
          enum:
          - none
          - carport
          - garage
          - private_spot
          - outside_spot
          - public_nearby
          - on_site
        parkingCost:
          type: string
          description: "Defines if the parking is free or at a cost. Values allowed\
            \ are free, charge_applies"
          example: free
          enum:
          - free
          - charge_applies
        parkingReservation:
          type: string
          description: "Defines if reservation is required for parking. Values allowed\
            \ are required, not_required, not_possible"
          example: not_required
          enum:
          - required
          - not_required
          - not_possible
        indoorParking:
          type: string
          description: "Defines if indoor parking is available. Values allowed are\
            \ not_available, available_free, available_at_cost"
          example: available_free
          enum:
          - not_available
          - available_free
          - available_at_cost
        valetParking:
          type: string
          description: "Defines if valet parking is available. Values allowed are\
            \ not_available, available_free, available_at_cost"
          example: not_available
          enum:
          - not_available
          - available_free
          - available_at_cost
      example:
        indoorParking: available_free
        parkingType: none
        parkingReservation: not_required
        valetParking: not_available
        parkingCost: free
    PropertyManagerSmokingPolicies:
      properties:
        smokingAllowed:
          type: string
          description: "Flag to indicate if smoking is allowed. Allowed values are\
            \ no, yes, only_designated_areas."
          example: "no"
          enum:
          - "no"
          - "yes"
          - only_designated_areas
        nonSmokingOption:
          type: boolean
          description: Defines if there are some non-smoking options available.
          example: true
      example:
        smokingAllowed: "no"
        nonSmokingOption: true
    GuestExpectationPolicy:
      required:
      - expectation
      - status
      properties:
        expectation:
          type: string
          description: This is the expectation that the property manager has for the
            guest.
          enum:
          - return_keys
          - throw_trash
          - turn_things_off
          - lock_up
          - gather_towels
          - additional_requests
        status:
          type: string
          description: This is the status of the expectation. If the status is disabled
          enum:
          - enabled
          - disabled
        instructions:
          type: string
          description: This is the instructions for the guest for the expectation.
            This can be used to provide additional information to the guest. If the
            status is "enabled" then this field is required.
          example: "[\"Please return the keys to the reception\",\"Please throw the\
            \ trash in the designated area\",\"Please turn off the lights when you\
            \ leave\",\"Please lock the door when you leave\",\"Please gather the\
            \ towels in the bathroom\",\"Please contact us if you have any questions\"\
            ]"
      example:
        instructions: "[\"Please return the keys to the reception\",\"Please throw\
          \ the trash in the designated area\",\"Please turn off the lights when you\
          \ leave\",\"Please lock the door when you leave\",\"Please gather the towels\
          \ in the bathroom\",\"Please contact us if you have any questions\"]"
        expectation: return_keys
        status: enabled
    PropertyManagersIndexResponse:
      required:
      - requestId
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PropertyManagersIndex'
        requestId:
          type: string
          description: unique request id used for identification
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        data:
        - activeProperties: 500
          inactiveProperties: 10
          companyName: Lovely Rentals LLC
          propertyManagerCode: LR00001
        - activeProperties: 500
          inactiveProperties: 10
          companyName: Lovely Rentals LLC
          propertyManagerCode: LR00001
        requestId: d6c84f022bc94ba08558af7873c3f5a1
    PropertyManagersIndex:
      required:
      - activeProperties
      - companyName
      - inactiveProperties
      - propertyManagerCode
      type: object
      properties:
        companyName:
          type: string
          description: This is the Property Manager Company name
          example: Lovely Rentals LLC
        propertyManagerCode:
          type: string
          description: This is the NextPax property manager code. This code is used
            in other endpoints.
          example: LR00001
        activeProperties:
          type: integer
          description: Number of active properties
          example: 500
        inactiveProperties:
          type: integer
          description: Number of inactive properties
          example: 10
      example:
        activeProperties: 500
        inactiveProperties: 10
        companyName: Lovely Rentals LLC
        propertyManagerCode: LR00001
    RatesLosGetResponse:
      title: PropertyRatesLOSGetResponse
      required:
      - currency
      - los
      type: object
      properties:
        currency:
          type: string
          description: Defines the applicable currency for the rates.
          example: EUR
        pricingType:
          type: string
          description: Field shows the pricing type (or rate type).
          example: myPricingType
        los:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PropertyRatesLOSData'
      example:
        currency: EUR
        pricingType: myPricingType
        los:
          "2022-05-15":
          - persons: 2
            prices:
            - 100
            - 200
          - persons: 3
            prices:
            - 150
            - 350
          - persons: 4
            prices:
            - 0
            - 400
            - 500
          "2022-05-16":
          - persons: 2
            prices:
            - 100
          - persons: 3
            prices:
            - 200
          - persons: 4
            prices:
            - 0
            - 400
    RatesLosCreateUpdate:
      title: PropertyRatesLOSCreateUpdateRequest
      required:
      - currency
      - los
      type: object
      properties:
        currency:
          type: string
          description: Defines the applicable currency for the rates.
          example: EUR
        pricingType:
          type: string
          description: Field that can be used to define the rate type or pricing type.
            If this field is not provided or is null the pricing type is always type
            "default". By using this field you are able to provide different pricing
            sets (to be used with rateplans).
          example: my_rate_type
        los:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PropertyRatesLOSData'
      example:
        currency: EUR
        pricingType: myPricingType
        los:
          "2022-05-15":
          - persons: 2
            prices:
            - 100
            - 200
          - persons: 3
            prices:
            - 150
            - 350
          - persons: 4
            prices:
            - 0
            - 400
            - 500
          "2022-05-16":
          - persons: 2
            prices:
            - 100
          - persons: 3
            prices:
            - 200
          - persons: 4
            prices:
            - 0
            - 400
    PropertyRatesLOSData:
      title: PropertyRatesLOS
      type: array
      example:
      - persons: 2
        prices:
        - 100
        - 200
      - persons: 3
        prices:
        - 150
        - 350
      - persons: 4
        prices:
        - 0
        - 400
        - 500
      items:
        $ref: '#/components/schemas/PropertyRatesLOSDate'
      x-schema-name: PropertyRatesLOSData
    PropertyRatesLOSDate:
      required:
      - persons
      type: object
      properties:
        persons:
          type: integer
          description: Number of guests allowed for this rate.
          example: 4
        prices:
          type: array
          description: This is the array of prices that indicate the length of stay.
            Price is in cents.
          items:
            type: integer
            example: 1
    RatesPeriodicCreateUpdate:
      title: PropertyRatesPeriodicCreateUpdateRequest
      required:
      - currency
      - rates
      type: object
      properties:
        currency:
          type: string
          description: This is the ISO 4217 3-letter code for the currency. Please
            see currency-codes endpoint for values.
          example: EUR
        pricingType:
          type: string
          description: Field that can be used to define the rate type or pricing type.
            If this field is not provided or is null the pricing type is always type
            "default". By using this field you are able to provide different pricing
            sets (to be used with rateplans).
          example: my_rate_type
          default: default
        rates:
          type: array
          items:
            $ref: '#/components/schemas/PropertyRatesPeriodicData'
    RatesPeriodicGetResponse:
      title: PropertyRatesPeriodicGetResponse
      required:
      - currency
      - rates
      type: object
      properties:
        currency:
          type: string
          description: This is the ISO 4217 3-letter code for the currency. Please
            see currency-codes endpoint for values.
          example: EUR
        pricingType:
          type: string
          description: Field shows the pricing type (or rate type).
          example: myPricingType
        rates:
          type: array
          items:
            $ref: '#/components/schemas/PropertyRatesPeriodicData'
      example:
        rates:
        - fromDate: '2032-10-01'
          persons: 5
          minStay: 2
          maxStay: 6
          untilDate: '2032-10-06'
          prices:
            weeklyPrice: 3200
            nightlyPrice: 3100
            monthlyPrice: 3300
        - fromDate: '2032-10-01'
          persons: 5
          minStay: 2
          maxStay: 6
          untilDate: '2032-10-06'
          prices:
            weeklyPrice: 3200
            nightlyPrice: 3100
            monthlyPrice: 3300
        currency: EUR
        pricingType: myPricingType
    PropertyRatesPeriodicData:
      required:
      - fromDate
      - persons
      - prices
      - untilDate
      type: object
      properties:
        fromDate:
          type: string
          description: Date in format YYYY-MM-DD from when to apply the rates.
          example: '2032-10-01'
        untilDate:
          type: string
          description: Date in format YYYY-MM-DD until when to apply the rates.
          example: '2032-10-06'
        persons:
          type: integer
          description: Number of guests allowed for this rate.
          example: 5
        minStay:
          type: integer
          description: Number of minimum nights for this rate.
          example: 2
        maxStay:
          type: integer
          description: Number of maximum nights for this rate.
          example: 6
        prices:
          $ref: '#/components/schemas/PropertyRatesPeriodicPrices'
      example:
        fromDate: '2032-10-01'
        persons: 5
        minStay: 2
        maxStay: 6
        untilDate: '2032-10-06'
        prices:
          weeklyPrice: 3200
          nightlyPrice: 3100
          monthlyPrice: 3300
    PropertyRatesPeriodicPrices:
      properties:
        nightlyPrice:
          type: integer
          description: Price for each night within the date range. Price is in cents.
          example: 3100
        weeklyPrice:
          type: integer
          description: Price for each week within the date range. Price is in cents.
            Weekly price cannot be lower or equal to the nightly price.
          example: 3200
        monthlyPrice:
          type: integer
          description: Price for each month within the date range. Price is in cents.
            Monthly price cannot be lower or equal to the nightly and or weekly price.
          example: 3300
      example:
        weeklyPrice: 3200
        nightlyPrice: 3100
        monthlyPrice: 3300
    AvailabilityCreateUpdate:
      title: PropertyAvailabilityCreateUpdateRequest
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PropertyAvailabilityData'
    AvailabilityGetResponse:
      title: PropertyAvailabilityGetResponse
      required:
      - data
      - requestId
      type: object
      properties:
        requestId:
          type: string
          description: unique request id used for identification.
          example: d6c84f022bc94ba08558af7873c3f5a1
        data:
          type: array
          items:
            $ref: '#/components/schemas/PropertyAvailabilityData'
      example:
        data:
        - fromDate: '2032-10-01'
          quantity: 2
          untilDate: '2032-10-06'
          restrictions:
            minStay: 2
            maxStay: 6
            departuresAllowed: true
            arrivalsAllowed: true
        - fromDate: '2032-10-01'
          quantity: 2
          untilDate: '2032-10-06'
          restrictions:
            minStay: 2
            maxStay: 6
            departuresAllowed: true
            arrivalsAllowed: true
        requestId: d6c84f022bc94ba08558af7873c3f5a1
    PropertyAvailabilityData:
      required:
      - fromDate
      - quantity
      - untilDate
      type: object
      properties:
        fromDate:
          type: string
          description: Date in format YYYY-MM-DD from when to apply the availability.
          example: '2032-10-01'
        untilDate:
          type: string
          description: Date in format YYYY-MM-DD until when to apply the availability.
          example: '2032-10-06'
        quantity:
          type: integer
          description: Number of units available for a given date or range. 0 means
            sold out or unavailable.
          example: 2
        restrictions:
          $ref: '#/components/schemas/PropertyAvailabilityRestrictions'
      example:
        fromDate: '2032-10-01'
        quantity: 2
        untilDate: '2032-10-06'
        restrictions:
          minStay: 2
          maxStay: 6
          departuresAllowed: true
          arrivalsAllowed: true
    PropertyAvailabilityRestrictions:
      properties:
        minStay:
          type: integer
          description: Number of minimum nights for this date to be made available.
          example: 2
        maxStay:
          type: integer
          description: Number of maximum nights for this date to be made available.
          example: 6
        arrivalsAllowed:
          type: boolean
          description: Flag to indicate if checkin is allowed on this date(s).
          example: true
        departuresAllowed:
          type: boolean
          description: Flag to indicate if checkout is allowed on this date(s).
          example: true
      example:
        minStay: 2
        maxStay: 6
        departuresAllowed: true
        arrivalsAllowed: true
    PropertyManagerChannelManagementResponse:
      title: PropertyManagerChannelManagementResponse
      required:
      - channels
      - requestId
      type: object
      properties:
        channels:
          type: array
          items:
            $ref: '#/components/schemas/PropertyManagerChannelManagementChannels'
        requestId:
          type: string
          description: unique request id used for identification.
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        channels:
        - channelStatus: enabled
          channelId: BOO142
        - channelStatus: enabled
          channelId: BOO142
        requestId: d6c84f022bc94ba08558af7873c3f5a1
    PropertyManagerChannelManagementRequest:
      title: PropertyManagerChannelManagementRequest
      type: object
      properties:
        channels:
          type: array
          items:
            $ref: '#/components/schemas/PropertyManagerChannelManagementChannels'
    PropertyManagerChannelManagementChannels:
      required:
      - channelId
      - channelStatus
      properties:
        channelId:
          type: string
          description: Channel ID in NextPax Platform. Please see the /constants/channel-codes
            for more information.
          example: BOO142
        channelStatus:
          type: string
          description: Indicates if the channel is currently enabled or disabled.
          example: enabled
      example:
        channelStatus: enabled
        channelId: BOO142
    AllPropertyManagerChannelSettingsResponse:
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PropertyManagerChannelSettingsData'
        requestId:
          type: string
          description: unique request id used for identification.
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        data:
        - settings:
          - settingRequired: true
            settingDescription: A legal entity id is required to onboard properties
              to Booking.com and is related to your contract
            settingGroup: pricing_settings
            settingOptions:
            - example_setting
            - example_setting
            settingType: integer
            settingName: legal-entity-id
          - settingRequired: true
            settingDescription: A legal entity id is required to onboard properties
              to Booking.com and is related to your contract
            settingGroup: pricing_settings
            settingOptions:
            - example_setting
            - example_setting
            settingType: integer
            settingName: legal-entity-id
          minContentRequirements:
          - requirementValue: "7"
            requirementName: min_nr_photos
            requirementDescription: A minimum number of photos is required per property
              for this channel.
          - requirementValue: "7"
            requirementName: min_nr_photos
            requirementDescription: A minimum number of photos is required per property
              for this channel.
          channelCode: BOO142
        - settings:
          - settingRequired: true
            settingDescription: A legal entity id is required to onboard properties
              to Booking.com and is related to your contract
            settingGroup: pricing_settings
            settingOptions:
            - example_setting
            - example_setting
            settingType: integer
            settingName: legal-entity-id
          - settingRequired: true
            settingDescription: A legal entity id is required to onboard properties
              to Booking.com and is related to your contract
            settingGroup: pricing_settings
            settingOptions:
            - example_setting
            - example_setting
            settingType: integer
            settingName: legal-entity-id
          minContentRequirements:
          - requirementValue: "7"
            requirementName: min_nr_photos
            requirementDescription: A minimum number of photos is required per property
              for this channel.
          - requirementValue: "7"
            requirementName: min_nr_photos
            requirementDescription: A minimum number of photos is required per property
              for this channel.
          channelCode: BOO142
        requestId: d6c84f022bc94ba08558af7873c3f5a1
    PropertyManagerChannelSettingsData:
      required:
      - channelCode
      properties:
        channelCode:
          type: string
          description: This is a NextPax channel code. Please see /constants/channel-codes
            endpoint for values.
          example: BOO142
        settings:
          type: array
          items:
            $ref: '#/components/schemas/PropertyManagerChannelSetup'
        minContentRequirements:
          type: array
          description: This data is deprecated and incomplete. Please use /constants/channelContentDefinitions
            endpoint for the latest content requirements.
          items:
            $ref: '#/components/schemas/PropertyManagerChannelContentRequirements'
      example:
        settings:
        - settingRequired: true
          settingDescription: A legal entity id is required to onboard properties
            to Booking.com and is related to your contract
          settingGroup: pricing_settings
          settingOptions:
          - example_setting
          - example_setting
          settingType: integer
          settingName: legal-entity-id
        - settingRequired: true
          settingDescription: A legal entity id is required to onboard properties
            to Booking.com and is related to your contract
          settingGroup: pricing_settings
          settingOptions:
          - example_setting
          - example_setting
          settingType: integer
          settingName: legal-entity-id
        minContentRequirements:
        - requirementValue: "7"
          requirementName: min_nr_photos
          requirementDescription: A minimum number of photos is required per property
            for this channel.
        - requirementValue: "7"
          requirementName: min_nr_photos
          requirementDescription: A minimum number of photos is required per property
            for this channel.
        channelCode: BOO142
    PropertyManagerChannelSetup:
      required:
      - settingDescription
      - settingGroup
      - settingName
      - settingRequired
      - settingType
      properties:
        settingName:
          type: string
          description: Indicates the name of the setting.
          example: legal-entity-id
        settingDescription:
          type: string
          description: Describes what the setting is related to.
          example: A legal entity id is required to onboard properties to Booking.com
            and is related to your contract
        settingType:
          type: string
          description: "Indicates if the value for this setting is of type string,\
            \ number, bool, integer, enum, multi_select or checkbox. In case value\
            \ is multi_select then all selected values are split by comma. For example\
            \ \"value1,value2,value3\". Checkbox can be treated similar to a bool,\
            \ you can provide 0 or 1 as value."
          example: integer
        settingRequired:
          type: boolean
          description: Indicates if the setting is required to be set before the channel
            can be enabled for the property manager.
          example: true
        settingGroup:
          type: string
          description: Indicates the group of the setting.
          example: pricing_settings
        settingOptions:
          type: array
          description: This lists the possible values for a setting if setting type
            is enum or multi_select.
          items:
            type: string
            example: example_setting
      example:
        settingRequired: true
        settingDescription: A legal entity id is required to onboard properties to
          Booking.com and is related to your contract
        settingGroup: pricing_settings
        settingOptions:
        - example_setting
        - example_setting
        settingType: integer
        settingName: legal-entity-id
    PropertyManagerChannelContentRequirements:
      required:
      - requirementDescription
      - requirementName
      - requirementValue
      properties:
        requirementName:
          type: string
          description: Indicates the content requirement name.
          example: min_nr_photos
        requirementValue:
          type: string
          description: The value for the requirement.
          example: "7"
        requirementDescription:
          type: string
          description: Describes the content requirement for the channel.
          example: A minimum number of photos is required per property for this channel.
      example:
        requirementValue: "7"
        requirementName: min_nr_photos
        requirementDescription: A minimum number of photos is required per property
          for this channel.
    PropertyManagerChannelSettingsRequest:
      properties:
        channels:
          type: array
          items:
            $ref: '#/components/schemas/PropertyManagerChannelSettingsChannels'
    PropertyManagerChannelSettingsChannels:
      required:
      - channelCode
      properties:
        channelCode:
          type: string
          description: This is a NextPax channel code. Please see /constants/channel-codes
            endpoint for values.
          example: BOO142
        settings:
          type: array
          items:
            $ref: '#/components/schemas/PropertyManagerChannelSetting'
      example:
        settings:
        - settingValue: "1234567"
          settingName: legal-entity-id
        - settingValue: "1234567"
          settingName: legal-entity-id
        channelCode: BOO142
    PropertyManagerChannelSetting:
      required:
      - settingName
      properties:
        settingName:
          type: string
          description: Indicates the name of the setting.
          example: legal-entity-id
        settingValue:
          type: string
          description: The value provided for this setting. For possible values and
            setting types please see the /channel-management/property-manager-settings/
            endpoint.
          example: "1234567"
      example:
        settingValue: "1234567"
        settingName: legal-entity-id
    PropertyManagerChannelSettingsResponse:
      properties:
        channels:
          type: array
          items:
            $ref: '#/components/schemas/PropertyManagerChannelSettingsChannels'
        requestId:
          type: string
          description: unique request id used for identification.
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        channels:
        - settings:
          - settingValue: "1234567"
            settingName: legal-entity-id
          - settingValue: "1234567"
            settingName: legal-entity-id
          channelCode: BOO142
        - settings:
          - settingValue: "1234567"
            settingName: legal-entity-id
          - settingValue: "1234567"
            settingName: legal-entity-id
          channelCode: BOO142
        requestId: d6c84f022bc94ba08558af7873c3f5a1
    PropertyChannelManagementResponse:
      title: PropertyChannelManagementResponse
      required:
      - channels
      - requestId
      type: object
      properties:
        channels:
          type: array
          items:
            $ref: '#/components/schemas/PropertyChannelManagementChannelsResponse'
        requestId:
          type: string
          description: unique request id used for identification.
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        channels:
        - channelPropertyStatus: active
          channelPropertyId: external-123456
          channelRoomId: external-room-123456
          channelRateplans:
          - supplierRateplanCode: abc123
            channelRateplanCode: 123abc2
          - supplierRateplanCode: abc123
            channelRateplanCode: 123abc2
          propertyStatusNote: This property is missing high-res photos.
          channelPropertyUrl: https://www.channel.com/amazing-property-123
          channelStatus: enabled
          channelHostId: "589890469"
          channelId: BOO142
          contentStatus: enabled
          buildStatus:
            lastJobStatus: lastJobStatus
            lastJobError: lastJobError
            isFinished: true
            lastJobRan: lastJobRan
        - channelPropertyStatus: active
          channelPropertyId: external-123456
          channelRoomId: external-room-123456
          channelRateplans:
          - supplierRateplanCode: abc123
            channelRateplanCode: 123abc2
          - supplierRateplanCode: abc123
            channelRateplanCode: 123abc2
          propertyStatusNote: This property is missing high-res photos.
          channelPropertyUrl: https://www.channel.com/amazing-property-123
          channelStatus: enabled
          channelHostId: "589890469"
          channelId: BOO142
          contentStatus: enabled
          buildStatus:
            lastJobStatus: lastJobStatus
            lastJobError: lastJobError
            isFinished: true
            lastJobRan: lastJobRan
        requestId: d6c84f022bc94ba08558af7873c3f5a1
    PropertyChannelManagementRequest:
      title: PropertyChannelManagementRequest
      type: object
      properties:
        channels:
          type: array
          items:
            $ref: '#/components/schemas/PropertyChannelManagementChannelsRequest'
    PropertyChannelManagementChannelsResponse:
      required:
      - channelId
      - channelPropertyId
      - channelPropertyStatus
      - channelPropertyUrl
      - channelRoomId
      - channelStatus
      - contentStatus
      - propertyStatusNote
      properties:
        channelId:
          type: string
          description: Channel ID in NextPax Platform. Please see the /constants/channel-codes
            for more information.
          example: BOO142
        channelStatus:
          type: string
          description: Indicates if the channel is currently enabled or disabled
          example: enabled
        contentStatus:
          type: string
          description: Indicates if content is being enabled for Sync. Please note
            that if disabled then only rates and availability can be synced.
          example: enabled
        channelPropertyStatus:
          type: string
          description: Field that indicates the status of a property on the channel
            or OTA. The actual ota channel status is different per OTA and you can
            use this endpoint to retrieve it and store it on your end.
          example: active
        channelPropertyId:
          type: string
          description: "Field that indicates the property or hotel ID on the channel\
            \ OTA. This would be a listing id for Airbnb or hotel id for Bookingcom,\
            \ etc. Once entered, this value cannot be changed without contacting the\
            \ Support Team."
          example: external-123456
        channelRoomId:
          type: string
          description: "Field that indicates the unit or room ID on the channel OTA.\
            \ This would be a room id for Agoda or room id for Bookingcom, etc. Once\
            \ entered, this value cannot be changed without contacting the Support\
            \ Team."
          example: external-room-123456
        propertyStatusNote:
          type: string
          description: This field can be used to provide more information as to why
            a property has a specific status on the channel OTA.
          example: This property is missing high-res photos.
        channelPropertyUrl:
          type: string
          description: This field can be used to provide the property direct url on
            the channel OTA.
          example: https://www.channel.com/amazing-property-123
        channelRateplans:
          type: array
          description: "This can be used only when rateplans already exist on the\
            \ channel and mapping or connecting is required. If this information is\
            \ not provided, NextPax will create the rateplans as new."
          items:
            $ref: '#/components/schemas/ChannelRateplan'
        channelHostId:
          type: string
          description: This field is only for Airbnb channel and it includes the AirbnbUserID.
          example: "589890469"
        buildStatus:
          $ref: '#/components/schemas/ChannelBuildStatus'
      example:
        channelPropertyStatus: active
        channelPropertyId: external-123456
        channelRoomId: external-room-123456
        channelRateplans:
        - supplierRateplanCode: abc123
          channelRateplanCode: 123abc2
        - supplierRateplanCode: abc123
          channelRateplanCode: 123abc2
        propertyStatusNote: This property is missing high-res photos.
        channelPropertyUrl: https://www.channel.com/amazing-property-123
        channelStatus: enabled
        channelHostId: "589890469"
        channelId: BOO142
        contentStatus: enabled
        buildStatus:
          lastJobStatus: lastJobStatus
          lastJobError: lastJobError
          isFinished: true
          lastJobRan: lastJobRan
    PropertyChannelManagementChannelsRequest:
      required:
      - channelId
      - channelStatus
      - contentStatus
      properties:
        channelId:
          type: string
          description: Channel ID in NextPax Platform. Please see the /constants/channel-codes
            for more information.
          example: BOO142
        channelStatus:
          type: string
          description: Indicates if the channel is currently enabled or disabled
          example: enabled
        contentStatus:
          type: string
          description: Indicates if content is being enabled for Sync. Please note
            that if disabled then only rates and availability can be synced.
          example: enabled
        channelPropertyId:
          type: string
          description: "Field that indicates the property or hotel ID on the channel\
            \ OTA. This would be a listing id for Airbnb or hotel id for Bookingcom,\
            \ etc."
          example: external-123456
        channelRoomId:
          type: string
          description: "Field that indicates the unit or room ID on the channel OTA.\
            \ This would be a room id for Agoda or room id for Bookingcom, etc."
          example: external-room-123456
        channelRateplans:
          type: array
          description: "This can be used only when rateplans already exist on the\
            \ channel and mapping or connecting is required. If this information is\
            \ not provided, NextPax will create the rateplans as new."
          items:
            $ref: '#/components/schemas/ChannelRateplan'
    ChannelRateplan:
      required:
      - channelRateplanCode
      - supplierRateplanCode
      properties:
        supplierRateplanCode:
          type: string
          description: This is the code or id of the existing rateplan in the supplier
            or pms system. It should be the same code used in the rateplan creation
            endpoints in the Supply API.
          example: abc123
        channelRateplanCode:
          type: string
          description: This is the code or id of the existing rateplan on the channel/OTA
            or distribution partner side.
          example: 123abc2
      example:
        supplierRateplanCode: abc123
        channelRateplanCode: 123abc2
    GenericErrorResponse:
      required:
      - Code
      - Message
      - NextPaxErrorCode
      - RequestId
      type: object
      properties:
        Code:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
        NextPaxErrorCode:
          type: string
          example: NEXT-ERROR-981
        Message:
          type: string
          example: Some info about the error
        RequestId:
          type: string
          example: d6c84f022bc94ba08558af7873c3f5a1
    ValidationErrorResponse:
      required:
      - Code
      - InvalidFields
      - Message
      - NextPaxErrorCode
      - RequestId
      type: object
      properties:
        InvalidFields:
          type: array
          items:
            type: string
            example: example_field
        Code:
          type: string
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
        NextPaxErrorCode:
          type: string
          example: NEXT-ERROR-981
        Message:
          type: string
          example: Some info about the error
        RequestId:
          type: string
          example: d6c84f022bc94ba08558af7873c3f5a1
    GenericSuccessResponse:
      required:
      - requestId
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PropertiesCreateSuccess'
        requestId:
          type: string
          description: unique request id used for identification.
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        data:
          supplierPropertyId: ce8aeb13-d783-4f37-8351-28856792ff2d
          propertyId: ce8aeb13-d783-4f37-8351-28856792ff2d
          status: success
        requestId: d6c84f022bc94ba08558af7873c3f5a1
    PropertiesCreateSuccess:
      type: object
      properties:
        status:
          type: string
          description: Can be success if property is ok for creation.
          example: success
        propertyId:
          type: string
          description: The NextPax property Id newly created.
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
        supplierPropertyId:
          type: string
          description: The supplier reference id of the property.
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      example:
        supplierPropertyId: ce8aeb13-d783-4f37-8351-28856792ff2d
        propertyId: ce8aeb13-d783-4f37-8351-28856792ff2d
        status: success
    PropertyManagerGenericSuccessResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PropertyManagerCreateSuccess'
        requestId:
          type: string
          description: unique request id used for identification.
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        data:
          propertyManager: DM
          status: created
        requestId: d6c84f022bc94ba08558af7873c3f5a1
    PropertyManagerCreateSuccess:
      type: object
      properties:
        status:
          type: string
          description: Will be "created" if property manager has been created.
          example: created
        propertyManager:
          type: string
          description: The NextPax property manager code newly created.
          example: DM
      example:
        propertyManager: DM
        status: created
    PropertyManagerPoliciesSuccessResponse:
      type: object
      properties:
        policies:
          type: array
          items:
            $ref: '#/components/schemas/PropertyManagerPoliciesCreateSuccess'
        propertyManager:
          type: string
          description: The NextPax property manager code.
          example: DM
        requestId:
          type: string
          description: unique request id used for identification.
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        propertyManager: DM
        requestId: d6c84f022bc94ba08558af7873c3f5a1
        policies:
        - cancellationRules:
            beforeArrivalAmount: 20
            beforeArrivalHours2: 0
            beforeArrivalAmountType: per_night
            beforeArrivalAmountType2: per_night
            beforeArrivalHours3: 0
            beforeArrivalAmountType3: per_night
            afterBookingAmountType: percentage
            afterBookingHours: 0
            noShowAmount: 2
            afterBookingAmount: 15
            beforeArrivalAmount3: 20
            beforeArrivalAmount2: 20
            beforeArrivalHours: 0
            noShowAmountType: percentage
          policyName: The Name
          prepaymentsRules:
            afterBookingAmountType: percentage
            afterBookingHours: 0
            afterBookingAmount: 15
            beforeArrivalHours: 0
            beforeArrivalAmount: 20
            beforeArrivalAmountType: per_night
          cancellationPolicyId: 2
        - cancellationRules:
            beforeArrivalAmount: 20
            beforeArrivalHours2: 0
            beforeArrivalAmountType: per_night
            beforeArrivalAmountType2: per_night
            beforeArrivalHours3: 0
            beforeArrivalAmountType3: per_night
            afterBookingAmountType: percentage
            afterBookingHours: 0
            noShowAmount: 2
            afterBookingAmount: 15
            beforeArrivalAmount3: 20
            beforeArrivalAmount2: 20
            beforeArrivalHours: 0
            noShowAmountType: percentage
          policyName: The Name
          prepaymentsRules:
            afterBookingAmountType: percentage
            afterBookingHours: 0
            afterBookingAmount: 15
            beforeArrivalHours: 0
            beforeArrivalAmount: 20
            beforeArrivalAmountType: per_night
          cancellationPolicyId: 2
    PropertyManagerPoliciesCreateSuccess:
      required:
      - cancellationPolicyId
      - cancellationRules
      - policyName
      type: object
      properties:
        policyName:
          type: string
          description: This is the cancellation policy name that was just create.
          example: The Name
        cancellationPolicyId:
          type: integer
          description: This is the cancellation policy id that was just create.
          example: 2
        cancellationRules:
          $ref: '#/components/schemas/PolicyCancellationRuleData'
        prepaymentsRules:
          $ref: '#/components/schemas/PolicyPrepaymentRuleData'
      example:
        cancellationRules:
          beforeArrivalAmount: 20
          beforeArrivalHours2: 0
          beforeArrivalAmountType: per_night
          beforeArrivalAmountType2: per_night
          beforeArrivalHours3: 0
          beforeArrivalAmountType3: per_night
          afterBookingAmountType: percentage
          afterBookingHours: 0
          noShowAmount: 2
          afterBookingAmount: 15
          beforeArrivalAmount3: 20
          beforeArrivalAmount2: 20
          beforeArrivalHours: 0
          noShowAmountType: percentage
        policyName: The Name
        prepaymentsRules:
          afterBookingAmountType: percentage
          afterBookingHours: 0
          afterBookingAmount: 15
          beforeArrivalHours: 0
          beforeArrivalAmount: 20
          beforeArrivalAmountType: per_night
        cancellationPolicyId: 2
    GenericSuccessContentResponse:
      required:
      - requestId
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PropertiesContentSuccess'
        warnings:
          type: array
          description: warnings regarding the request
          example:
          - "Property max persons is 10, but no rates submitted for this persons."
          items:
            type: string
        requestId:
          type: string
          description: unique request id used for identification.
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        data:
          propertyId: ce8aeb13-d783-4f37-8351-28856792ff2d
          status: active
        requestId: d6c84f022bc94ba08558af7873c3f5a1
        warnings:
        - "Property max persons is 10, but no rates submitted for this persons."
    PropertiesContentSuccess:
      type: object
      properties:
        status:
          type: string
          description: This is the property status.
          example: active
        propertyId:
          type: string
          description: The NextPax property Id.
          example: ce8aeb13-d783-4f37-8351-28856792ff2d
      example:
        propertyId: ce8aeb13-d783-4f37-8351-28856792ff2d
        status: active
    PropertyManagerRateplansCreateUpdate:
      title: PropertyManagerRateplansCreateUpdateRequest
      required:
      - rateplans
      type: object
      properties:
        rateplans:
          type: array
          items:
            $ref: '#/components/schemas/PropertyManagerRateplansData'
    PropertyManagerRateplansGetResponse:
      title: PropertyManagerRateplansGetResponse
      required:
      - rateplans
      type: object
      properties:
        rateplans:
          type: array
          items:
            $ref: '#/components/schemas/PropertyManagerRateplansData'
        requestId:
          type: string
          description: unique request id used for identification
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        requestId: d6c84f022bc94ba08558af7873c3f5a1
        rateplans:
        - excludedProperties:
          - 1787aa0a-252f-46ee-9703-cb96996fabcd
          - 421b6a8e-d84e-4210-8259-ac791965b012
          metadata:
            gds-rate-level: DTE
            gds-guarantee-type: NO_GUARANTEE
          taxIncluded: false
          supplierRateplanCode: bar123
          restrictions:
          - fromDate: '2032-10-01'
            maximumStay: 28
            maxDaysBeforeArrival: 2
            untilDate: '2032-10-06'
            departuresAllowed: false
            maximumStayThrough: 28
            arrivalsAllowed: true
            availabilityStatus: open
            minDaysBeforeArrival: 30
            minimumStay: 1
            minimumStayThrough: 1
          - fromDate: '2032-10-01'
            maximumStay: 28
            maxDaysBeforeArrival: 2
            untilDate: '2032-10-06'
            departuresAllowed: false
            maximumStayThrough: 28
            arrivalsAllowed: true
            availabilityStatus: open
            minDaysBeforeArrival: 30
            minimumStay: 1
            minimumStayThrough: 1
          pricingOffset: -10
          arrivalsUntilDate: '2032-10-30'
          supplierRateplanName: non refundable plan 1
          validUntilDate: '2032-01-31'
          channelPolicyId: super_strict_30
          arrivalsFromDate: '2032-10-01'
          maxDaysBeforeArrival: 30
          policyId: 2
          applicableProperties:
          - 1787aa0a-252f-46ee-9703-cb96996fabcd
          - 421b6a8e-d84e-4210-8259-ac791965b012
          validFromDate: '2032-01-01'
          applicableChannels:
          - BOO142
          - EXP270
          minimumLengthOfStay: 1
          minDaysBeforeArrival: 2
          pricingType: default
          mealPlan: breakfast
        - excludedProperties:
          - 1787aa0a-252f-46ee-9703-cb96996fabcd
          - 421b6a8e-d84e-4210-8259-ac791965b012
          metadata:
            gds-rate-level: DTE
            gds-guarantee-type: NO_GUARANTEE
          taxIncluded: false
          supplierRateplanCode: bar123
          restrictions:
          - fromDate: '2032-10-01'
            maximumStay: 28
            maxDaysBeforeArrival: 2
            untilDate: '2032-10-06'
            departuresAllowed: false
            maximumStayThrough: 28
            arrivalsAllowed: true
            availabilityStatus: open
            minDaysBeforeArrival: 30
            minimumStay: 1
            minimumStayThrough: 1
          - fromDate: '2032-10-01'
            maximumStay: 28
            maxDaysBeforeArrival: 2
            untilDate: '2032-10-06'
            departuresAllowed: false
            maximumStayThrough: 28
            arrivalsAllowed: true
            availabilityStatus: open
            minDaysBeforeArrival: 30
            minimumStay: 1
            minimumStayThrough: 1
          pricingOffset: -10
          arrivalsUntilDate: '2032-10-30'
          supplierRateplanName: non refundable plan 1
          validUntilDate: '2032-01-31'
          channelPolicyId: super_strict_30
          arrivalsFromDate: '2032-10-01'
          maxDaysBeforeArrival: 30
          policyId: 2
          applicableProperties:
          - 1787aa0a-252f-46ee-9703-cb96996fabcd
          - 421b6a8e-d84e-4210-8259-ac791965b012
          validFromDate: '2032-01-01'
          applicableChannels:
          - BOO142
          - EXP270
          minimumLengthOfStay: 1
          minDaysBeforeArrival: 2
          pricingType: default
          mealPlan: breakfast
    PropertyManagerRateplansData:
      required:
      - applicableChannels
      - supplierRateplanCode
      - supplierRateplanName
      type: object
      properties:
        applicableProperties:
          type: array
          description: Use this field only if you want to specify a subset of properties
            for which the rateplan is applicable. If this field is not used or is
            null then the rateplan applies to all properties of the property manager.  Conflicts
            with excludedProperties
          example:
          - 1787aa0a-252f-46ee-9703-cb96996fabcd
          - 421b6a8e-d84e-4210-8259-ac791965b012
          items:
            type: string
        excludedProperties:
          type: array
          description: Use this field only if you want to specify a subset of properties
            for which the rateplan is NOT applicable. If this field is not used or
            is null then the rateplan applies to all properties of the property manager.
            Conflicts with applicableProperties
          example:
          - 1787aa0a-252f-46ee-9703-cb96996fabcd
          - 421b6a8e-d84e-4210-8259-ac791965b012
          items:
            type: string
        supplierRateplanName:
          type: string
          description: This is the name of the rateplan in the supplier system.
          example: non refundable plan 1
        supplierRateplanCode:
          type: string
          description: This is the code of the rateplan in the supplier system.
          example: bar123
        pricingType:
          type: string
          description: Indicates the pricing type that is linked to this plan. You
            can submit pricing types when using the rates endpoints. If this field
            is not provided in the request or value is null then default value is
            "default". Default refers to the pricing (rates) the property has.
          example: default
        pricingOffset:
          type: number
          description: "Indicates the percentage increase or decrease applied to the\
            \ plan compared to the linked rates. This can be positive or negative\
            \ value. A positive value would indicate the plan is more expensive, a\
            \ negative value would indicate a discount. Example you have property\
            \ rates of 100 USD per night. If pricingOffset is \"-10\" then that means\
            \ a discount of 10 percent is offered from the default pricing which was\
            \ 100 USD per night. Values of 0 are also accepted which means that the\
            \ rate is as defined in the rates endpoint for the property and no increase\
            \ or discount is applied from said pricing."
          example: -10
        channelPolicyId:
          type: string
          description: A rateplan requires a channel policy to be attached in order
            to function. The channel policy needs to be valid for the selected channel
            id. This is the channel policy id you receive when creating channel policies.
          example: super_strict_30
        policyId:
          type: integer
          description: A rateplan requires a policy to be attached in order to function.
            The policy needs to be valid for the selected id. This is the policy id
            you receive when creating policies.
          example: 2
        mealPlan:
          type: string
          description: If the rateplan includes a mealplan it can be defined here.
            Please see mapping codes endpoint for values. If no value is provided
            or field is missing in the request then no meal plan is applicable.
          example: breakfast
        taxIncluded:
          type: boolean
          description: If prices attached to this rateplan include taxes as well then
            the flag can be true otherwise send as false.
          example: false
        applicableChannels:
          type: array
          description: Channel ids for which this rateplan applies. See the channel
            codes endpoint for values.
          example:
          - BOO142
          - EXP270
          items:
            type: string
        validFromDate:
          type: string
          description: Date in format YYYY-MM-DD from when the rateplans is valid
            (allows for bookings). This is not the dates for arrivals. If no date
            is provided then the rateplan is always valid.
          example: '2032-01-01'
        validUntilDate:
          type: string
          description: Date in format YYYY-MM-DD until when the rateplan is valid
            (allows for bookings). This is not the dates for arrivals. If no date
            is provided then the rateplan is always valid.
          example: '2032-01-31'
        arrivalsFromDate:
          type: string
          description: Date in format YYYY-MM-DD from when the arrival of a booking
            is valid for this rateplans (check-ins). This is not the dates for when
            the rateplan is bookable See validFromDate for that. If no date is provided
            then the rateplan is always valid for arrivals.
          example: '2032-10-01'
        arrivalsUntilDate:
          type: string
          description: Date in format YYYY-MM-DD until when the arrival of a booking
            is valid for this rateplan (check-ins). This is not the dates for arrivals.
            If no date is provided then the rateplan is always valid for arrivals.
          example: '2032-10-30'
        minimumLengthOfStay:
          type: integer
          description: Number of nights a guest needs to stay minimum in order to
            book this plan. Default is 1 which means no restriction. If field is not
            present or is null in the request then the default values applies.
          example: 1
        maxDaysBeforeArrival:
          type: integer
          description: Maximum number of days before arrrival the plan is visible
            for customers. Please note this field conflicts with arrivalsFromDate
            and arrivalsUntilDate fields.
          example: 30
        minDaysBeforeArrival:
          type: integer
          description: Minimum number of days before arrrival the plan is visible
            for customers. Please note this field conflicts with arrivalsFromDate
            and arrivalsUntilDate fields.
          example: 2
        restrictions:
          type: array
          description: Restrictions defined here can only apply for certain dates.
            Multiple restricted dates or ranges are allowed but they must not overlap.
            Please note that some values defined here will overwrite the values defined
            on the rateplan definition for the specified dates. At least one restriction
            is required when defining validFromDate and validUntilDate.
          items:
            $ref: '#/components/schemas/PropertyRateplansRestrictions'
        metadata:
          type: object
          additionalProperties:
            type: string
          description: rate-plan metadata definition. it is channel-based configuration
            and optional field
          example:
            gds-rate-level: DTE
            gds-guarantee-type: NO_GUARANTEE
      example:
        excludedProperties:
        - 1787aa0a-252f-46ee-9703-cb96996fabcd
        - 421b6a8e-d84e-4210-8259-ac791965b012
        metadata:
          gds-rate-level: DTE
          gds-guarantee-type: NO_GUARANTEE
        taxIncluded: false
        supplierRateplanCode: bar123
        restrictions:
        - fromDate: '2032-10-01'
          maximumStay: 28
          maxDaysBeforeArrival: 2
          untilDate: '2032-10-06'
          departuresAllowed: false
          maximumStayThrough: 28
          arrivalsAllowed: true
          availabilityStatus: open
          minDaysBeforeArrival: 30
          minimumStay: 1
          minimumStayThrough: 1
        - fromDate: '2032-10-01'
          maximumStay: 28
          maxDaysBeforeArrival: 2
          untilDate: '2032-10-06'
          departuresAllowed: false
          maximumStayThrough: 28
          arrivalsAllowed: true
          availabilityStatus: open
          minDaysBeforeArrival: 30
          minimumStay: 1
          minimumStayThrough: 1
        pricingOffset: -10
        arrivalsUntilDate: '2032-10-30'
        supplierRateplanName: non refundable plan 1
        validUntilDate: '2032-01-31'
        channelPolicyId: super_strict_30
        arrivalsFromDate: '2032-10-01'
        maxDaysBeforeArrival: 30
        policyId: 2
        applicableProperties:
        - 1787aa0a-252f-46ee-9703-cb96996fabcd
        - 421b6a8e-d84e-4210-8259-ac791965b012
        validFromDate: '2032-01-01'
        applicableChannels:
        - BOO142
        - EXP270
        minimumLengthOfStay: 1
        minDaysBeforeArrival: 2
        pricingType: default
        mealPlan: breakfast
    PropertyRateplansRestrictions:
      required:
      - fromDate
      - untilDate
      properties:
        fromDate:
          type: string
          description: Date in format YYYY-MM-DD from when the restriction applies
            for this rateplan. The restriction applies to a stay on that date or range.
          example: '2032-10-01'
        untilDate:
          type: string
          description: Date in format YYYY-MM-DD until when the restriction applies
            for this rateplan. The restriction applies to a stay on that date or range.
          example: '2032-10-06'
        availabilityStatus:
          type: string
          description: indicates if availability is marked as open or closed. Default
            is open.
          example: open
          enum:
          - open
          - closed
        arrivalsAllowed:
          type: boolean
          description: indicates if check-ins are allowed for the date range defined.
            Default true.
          example: true
        departuresAllowed:
          type: boolean
          description: indicates if check-outs are allowed for the date range defined.
            Default true.
          example: false
        minimumStay:
          type: integer
          description: Number of nights a guest needs to stay minimum in order to
            book this plan. Default is 1 which means no restriction.
          example: 1
        maximumStay:
          type: integer
          description: Number of nights a guest can stay maximum when booking this
            plan. Default is 0 which means no restriction. If field is not present
            or is null in the request then the default values applies.
          example: 28
        minimumStayThrough:
          type: integer
          description: Number of nights a guest needs to stay through minimum in order
            to book certain dates. Default is 1 which means no restriction.
          example: 1
        maximumStayThrough:
          type: integer
          description: Number of nights a guest can stay through maximum when booking
            certain dates. Default is 0 which means no restriction. If field is not
            present or is null in the request then the default values applies.
          example: 28
        maxDaysBeforeArrival:
          type: integer
          description: Maximum number of days before arrrival the plan is visible
            for customers. This value can be used for last minute options. Please
            note this field will overwrite value defined on the rateplan definition
            for the restricted dates. Default is 0 which means no restriction.
          example: 2
        minDaysBeforeArrival:
          type: integer
          description: Minimum number of days before arrrival the plan is visible
            for customers. This value can be used for early bird options. Please note
            this field  will overwrite value defined on the rateplan definition for
            the restricted dates. Default is 0 which means no restriction.
          example: 30
      example:
        fromDate: '2032-10-01'
        maximumStay: 28
        maxDaysBeforeArrival: 2
        untilDate: '2032-10-06'
        departuresAllowed: false
        maximumStayThrough: 28
        arrivalsAllowed: true
        availabilityStatus: open
        minDaysBeforeArrival: 30
        minimumStay: 1
        minimumStayThrough: 1
    PropertyRateplansCreateUpdate:
      title: PropertyRateplansCreateUpdateRequest
      required:
      - rateplans
      type: object
      properties:
        rateplans:
          type: array
          items:
            $ref: '#/components/schemas/PropertyRateplansData'
    PropertyRateplansGetResponse:
      title: PropertyRateplansGetResponse
      required:
      - rateplans
      type: object
      properties:
        rateplans:
          type: array
          items:
            $ref: '#/components/schemas/PropertyRateplansData'
        requestId:
          type: string
          description: unique request id used for identification
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        requestId: d6c84f022bc94ba08558af7873c3f5a1
        rateplans:
        - metadata:
            gds-rate-level: DTE
            gds-guarantee-type: NO_GUARANTEE
          taxIncluded: false
          supplierRateplanCode: bar123
          restrictions:
          - fromDate: '2032-10-01'
            maximumStay: 28
            maxDaysBeforeArrival: 2
            untilDate: '2032-10-06'
            departuresAllowed: false
            maximumStayThrough: 28
            arrivalsAllowed: true
            availabilityStatus: open
            minDaysBeforeArrival: 30
            minimumStay: 1
            minimumStayThrough: 1
          - fromDate: '2032-10-01'
            maximumStay: 28
            maxDaysBeforeArrival: 2
            untilDate: '2032-10-06'
            departuresAllowed: false
            maximumStayThrough: 28
            arrivalsAllowed: true
            availabilityStatus: open
            minDaysBeforeArrival: 30
            minimumStay: 1
            minimumStayThrough: 1
          pricingOffset: -10
          arrivalsUntilDate: '2032-10-30'
          supplierRateplanName: non refundable plan 1
          validUntilDate: '2032-01-31'
          channelPolicyId: super_strict_30
          arrivalsFromDate: '2032-10-01'
          maxDaysBeforeArrival: 30
          policyId: 2
          validFromDate: '2032-01-01'
          applicableChannels:
          - BOO142
          - EXP270
          minimumLengthOfStay: 1
          minDaysBeforeArrival: 2
          pricingType: default
          mealPlan: breakfast
        - metadata:
            gds-rate-level: DTE
            gds-guarantee-type: NO_GUARANTEE
          taxIncluded: false
          supplierRateplanCode: bar123
          restrictions:
          - fromDate: '2032-10-01'
            maximumStay: 28
            maxDaysBeforeArrival: 2
            untilDate: '2032-10-06'
            departuresAllowed: false
            maximumStayThrough: 28
            arrivalsAllowed: true
            availabilityStatus: open
            minDaysBeforeArrival: 30
            minimumStay: 1
            minimumStayThrough: 1
          - fromDate: '2032-10-01'
            maximumStay: 28
            maxDaysBeforeArrival: 2
            untilDate: '2032-10-06'
            departuresAllowed: false
            maximumStayThrough: 28
            arrivalsAllowed: true
            availabilityStatus: open
            minDaysBeforeArrival: 30
            minimumStay: 1
            minimumStayThrough: 1
          pricingOffset: -10
          arrivalsUntilDate: '2032-10-30'
          supplierRateplanName: non refundable plan 1
          validUntilDate: '2032-01-31'
          channelPolicyId: super_strict_30
          arrivalsFromDate: '2032-10-01'
          maxDaysBeforeArrival: 30
          policyId: 2
          validFromDate: '2032-01-01'
          applicableChannels:
          - BOO142
          - EXP270
          minimumLengthOfStay: 1
          minDaysBeforeArrival: 2
          pricingType: default
          mealPlan: breakfast
    PropertyRateplansData:
      required:
      - applicableChannels
      - supplierRateplanCode
      - supplierRateplanName
      type: object
      properties:
        supplierRateplanName:
          type: string
          description: This is the name of the rateplan in the supplier system.
          example: non refundable plan 1
        supplierRateplanCode:
          type: string
          description: This is the code of the rateplan in the supplier system.
          example: bar123
        pricingType:
          type: string
          description: Indicates the pricing type that is linked to this plan. You
            can submit pricing types when using the rates endpoints. If this field
            is not provided in the request or value is null then default value is
            "default". Default refers to the pricing (rates) the property has.
          example: default
        pricingOffset:
          type: number
          description: "Indicates the percentage increase or decrease applied to the\
            \ plan compared to the linked rates. This can be positive or negative\
            \ value. A positive value would indicate the plan is more expensive, a\
            \ negative value would indicate a discount. Example you have property\
            \ rates of 100 USD per night. If pricingOffset is \"-10\" then that means\
            \ a discount of 10 percent is offered from the default pricing which was\
            \ 100 USD per night. Values of 0 are also accepted which means that the\
            \ rate is as defined in the rates endpoint for the property and no increase\
            \ or discount is applied from said pricing."
          example: -10
        channelPolicyId:
          type: string
          description: A rateplan requires a channel policy to be attached in order
            to function. This is the channel policy id you receive when creating channel
            policies.
          example: super_strict_30
        policyId:
          type: integer
          description: A rateplan requires a policy to be attached in order to function.
            This is the policy id you receive when creating policies.
          example: 2
        mealPlan:
          type: string
          description: If the rateplan includes a mealplan it can be defined here.
            Please see mapping codes endpoint for values. If no value is provided
            or field is missing in the request then no meal plan is applicable.
          example: breakfast
        taxIncluded:
          type: boolean
          description: If prices attached to this rateplan include taxes as well then
            the flag can be true otherwise send as false.
          example: false
        applicableChannels:
          type: array
          description: Channel ids for which this rateplan applies. See the channel
            codes endpoint for values.
          example:
          - BOO142
          - EXP270
          items:
            type: string
        validFromDate:
          type: string
          description: Date in format YYYY-MM-DD from when the rateplans is valid
            (allows for bookings). This is not the dates for arrivals. If no date
            is provided then the rateplan is always valid.
          example: '2032-01-01'
        validUntilDate:
          type: string
          description: Date in format YYYY-MM-DD until when the rateplan is valid
            (allows for bookings). This is not the dates for arrivals. If no date
            is provided then the rateplan is always valid.
          example: '2032-01-31'
        arrivalsFromDate:
          type: string
          description: Date in format YYYY-MM-DD from when the arrival of a booking
            is valid for this rateplans (check-ins). This is not the dates for when
            the rateplan is bookable See validFromDate for that. If no date is provided
            then the rateplan is always valid for arrivals.
          example: '2032-10-01'
        arrivalsUntilDate:
          type: string
          description: Date in format YYYY-MM-DD until when the arrival of a booking
            is valid for this rateplan (check-ins). This is not the dates for arrivals.
            If no date is provided then the rateplan is always valid for arrivals.
          example: '2032-10-30'
        minimumLengthOfStay:
          type: integer
          description: Number of nights a guest needs to stay minimum in order to
            book this plan. Default is 1 which means no restriction. If field is not
            present or is null in the request then the default values applies.
          example: 1
        maxDaysBeforeArrival:
          type: integer
          description: Maximum number of days before arrrival the plan is visible
            for customers. Please note this field conflicts with arrivalsFromDate
            and arrivalsUntilDate fields.
          example: 30
        minDaysBeforeArrival:
          type: integer
          description: Minimum number of days before arrrival the plan is visible
            for customers. Please note this field conflicts with arrivalsFromDate
            and arrivalsUntilDate fields.
          example: 2
        restrictions:
          type: array
          description: Restrictions defined here can only apply for certain dates.
            Multiple restricted dates or ranges are allowed but they most not overlap.
            Please note that some values defined here will overwrite the values defined
            on the rateplan definition for the specified dates. At least one restriction
            is required when defining validFromDate and validUntilDate.
          items:
            $ref: '#/components/schemas/PropertyRateplansRestrictions'
        metadata:
          type: object
          additionalProperties:
            type: string
          description: rate-plan metadata definition. it is channel-based configuration
            and optional field
          example:
            gds-rate-level: DTE
            gds-guarantee-type: NO_GUARANTEE
      example:
        metadata:
          gds-rate-level: DTE
          gds-guarantee-type: NO_GUARANTEE
        taxIncluded: false
        supplierRateplanCode: bar123
        restrictions:
        - fromDate: '2032-10-01'
          maximumStay: 28
          maxDaysBeforeArrival: 2
          untilDate: '2032-10-06'
          departuresAllowed: false
          maximumStayThrough: 28
          arrivalsAllowed: true
          availabilityStatus: open
          minDaysBeforeArrival: 30
          minimumStay: 1
          minimumStayThrough: 1
        - fromDate: '2032-10-01'
          maximumStay: 28
          maxDaysBeforeArrival: 2
          untilDate: '2032-10-06'
          departuresAllowed: false
          maximumStayThrough: 28
          arrivalsAllowed: true
          availabilityStatus: open
          minDaysBeforeArrival: 30
          minimumStay: 1
          minimumStayThrough: 1
        pricingOffset: -10
        arrivalsUntilDate: '2032-10-30'
        supplierRateplanName: non refundable plan 1
        validUntilDate: '2032-01-31'
        channelPolicyId: super_strict_30
        arrivalsFromDate: '2032-10-01'
        maxDaysBeforeArrival: 30
        policyId: 2
        validFromDate: '2032-01-01'
        applicableChannels:
        - BOO142
        - EXP270
        minimumLengthOfStay: 1
        minDaysBeforeArrival: 2
        pricingType: default
        mealPlan: breakfast
    SocialMediaLink:
      title: SocialMediaLink
      required:
      - Url
      - name
      type: object
      properties:
        name:
          type: string
          description: Use this field to submit a relevant social media netwrok name.
          example: facebook
          enum:
          - facebook
          - twitter
          - instagram
          - linkedin
        url:
          type: string
          description: Use this field to submit a relevant social media page or url.
          example: https://twitter.com/amazingpage
    PropertyManagerFeaturesGetResponse:
      title: PropertyManagerFeaturesGetResponse
      required:
      - data
      - requestId
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PropertyManagerFeaturesGetData'
        requestId:
          type: string
          description: unique request id used for identification.
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        data:
          currencyFx:
            fxRates:
            - createdAt: '2022-05-15T22:59:59+02:00'
              targetCurrency: USD
              approvedBy: system
              sourceCurrency: EUR
              approvedAt: '2022-05-15T22:59:59+02:00'
              conversionRate: 1.2
              status: true
              updatedAt: '2022-05-15T22:59:59+02:00'
            - createdAt: '2022-05-15T22:59:59+02:00'
              targetCurrency: USD
              approvedBy: system
              sourceCurrency: EUR
              approvedAt: '2022-05-15T22:59:59+02:00'
              conversionRate: 1.2
              status: true
              updatedAt: '2022-05-15T22:59:59+02:00'
            status: enabled
          feeMultipliers:
            feeMultipliers:
            - createdAt: '2022-05-15T22:59:59+02:00'
              multiplierRate: 1.2
              approvedBy: system
              approvedAt: '2022-05-15T22:59:59+02:00'
              channelId: BOO142
              status: true
              updatedAt: '2022-05-15T22:59:59+02:00'
            - createdAt: '2022-05-15T22:59:59+02:00'
              multiplierRate: 1.2
              approvedBy: system
              approvedAt: '2022-05-15T22:59:59+02:00'
              channelId: BOO142
              status: true
              updatedAt: '2022-05-15T22:59:59+02:00'
            status: enabled
          rateMultipliers:
            rateMultipliers:
            - createdAt: '2022-05-15T22:59:59+02:00'
              multiplierRate: 1.2
              approvedBy: system
              approvedAt: '2022-05-15T22:59:59+02:00'
              channelId: BOO142
              status: true
              updatedAt: '2022-05-15T22:59:59+02:00'
            - createdAt: '2022-05-15T22:59:59+02:00'
              multiplierRate: 1.2
              approvedBy: system
              approvedAt: '2022-05-15T22:59:59+02:00'
              channelId: BOO142
              status: true
              updatedAt: '2022-05-15T22:59:59+02:00'
            status: enabled
        requestId: d6c84f022bc94ba08558af7873c3f5a1
    PropertyManagerFeaturesGetData:
      title: PropertyManagerFeaturesGetData
      required:
      - currencyFx
      - feeMultipliers
      - rateMultipliers
      type: object
      properties:
        currencyFx:
          $ref: '#/components/schemas/PropertyManagerFeaturesCurrencyFXData'
        rateMultipliers:
          $ref: '#/components/schemas/PropertyManagerFeaturesRateMultipliersData'
        feeMultipliers:
          $ref: '#/components/schemas/PropertyManagerFeaturesFeeMultipliersData'
      example:
        currencyFx:
          fxRates:
          - createdAt: '2022-05-15T22:59:59+02:00'
            targetCurrency: USD
            approvedBy: system
            sourceCurrency: EUR
            approvedAt: '2022-05-15T22:59:59+02:00'
            conversionRate: 1.2
            status: true
            updatedAt: '2022-05-15T22:59:59+02:00'
          - createdAt: '2022-05-15T22:59:59+02:00'
            targetCurrency: USD
            approvedBy: system
            sourceCurrency: EUR
            approvedAt: '2022-05-15T22:59:59+02:00'
            conversionRate: 1.2
            status: true
            updatedAt: '2022-05-15T22:59:59+02:00'
          status: enabled
        feeMultipliers:
          feeMultipliers:
          - createdAt: '2022-05-15T22:59:59+02:00'
            multiplierRate: 1.2
            approvedBy: system
            approvedAt: '2022-05-15T22:59:59+02:00'
            channelId: BOO142
            status: true
            updatedAt: '2022-05-15T22:59:59+02:00'
          - createdAt: '2022-05-15T22:59:59+02:00'
            multiplierRate: 1.2
            approvedBy: system
            approvedAt: '2022-05-15T22:59:59+02:00'
            channelId: BOO142
            status: true
            updatedAt: '2022-05-15T22:59:59+02:00'
          status: enabled
        rateMultipliers:
          rateMultipliers:
          - createdAt: '2022-05-15T22:59:59+02:00'
            multiplierRate: 1.2
            approvedBy: system
            approvedAt: '2022-05-15T22:59:59+02:00'
            channelId: BOO142
            status: true
            updatedAt: '2022-05-15T22:59:59+02:00'
          - createdAt: '2022-05-15T22:59:59+02:00'
            multiplierRate: 1.2
            approvedBy: system
            approvedAt: '2022-05-15T22:59:59+02:00'
            channelId: BOO142
            status: true
            updatedAt: '2022-05-15T22:59:59+02:00'
          status: enabled
    PropertyManagerFeaturesCurrencyFXData:
      title: PropertyManagerFeaturesCurrencyFXData
      required:
      - fxRates
      - status
      type: object
      properties:
        status:
          type: string
          description: Indicates whether the feature is enabled or disabled
          example: enabled
          enum:
          - enabled
          - disabled
        fxRates:
          type: array
          items:
            $ref: '#/components/schemas/PropertyManagerFeaturesCurrencyFXRates'
      example:
        fxRates:
        - createdAt: '2022-05-15T22:59:59+02:00'
          targetCurrency: USD
          approvedBy: system
          sourceCurrency: EUR
          approvedAt: '2022-05-15T22:59:59+02:00'
          conversionRate: 1.2
          status: true
          updatedAt: '2022-05-15T22:59:59+02:00'
        - createdAt: '2022-05-15T22:59:59+02:00'
          targetCurrency: USD
          approvedBy: system
          sourceCurrency: EUR
          approvedAt: '2022-05-15T22:59:59+02:00'
          conversionRate: 1.2
          status: true
          updatedAt: '2022-05-15T22:59:59+02:00'
        status: enabled
    PropertyManagerFeaturesRateMultipliersData:
      title: PropertyManagerFeaturesRateMultipliersData
      required:
      - rateMultipliers
      - status
      type: object
      properties:
        status:
          type: string
          description: Indicates whether the feature is enabled or disabled
          example: enabled
          enum:
          - enabled
          - disabled
        rateMultipliers:
          type: array
          items:
            $ref: '#/components/schemas/RateMultiplier'
      example:
        rateMultipliers:
        - createdAt: '2022-05-15T22:59:59+02:00'
          multiplierRate: 1.2
          approvedBy: system
          approvedAt: '2022-05-15T22:59:59+02:00'
          channelId: BOO142
          status: true
          updatedAt: '2022-05-15T22:59:59+02:00'
        - createdAt: '2022-05-15T22:59:59+02:00'
          multiplierRate: 1.2
          approvedBy: system
          approvedAt: '2022-05-15T22:59:59+02:00'
          channelId: BOO142
          status: true
          updatedAt: '2022-05-15T22:59:59+02:00'
        status: enabled
    PropertyManagerFeaturesFeeMultipliersData:
      title: PropertyManagerFeaturesFeeMultipliersData
      required:
      - feeMultipliers
      - status
      type: object
      properties:
        status:
          type: string
          description: Indicates whether the feature is enabled or disabled
          example: enabled
          enum:
          - enabled
          - disabled
        feeMultipliers:
          type: array
          items:
            $ref: '#/components/schemas/PropertyManagerFeaturesFeeMultipliers'
      example:
        feeMultipliers:
        - createdAt: '2022-05-15T22:59:59+02:00'
          multiplierRate: 1.2
          approvedBy: system
          approvedAt: '2022-05-15T22:59:59+02:00'
          channelId: BOO142
          status: true
          updatedAt: '2022-05-15T22:59:59+02:00'
        - createdAt: '2022-05-15T22:59:59+02:00'
          multiplierRate: 1.2
          approvedBy: system
          approvedAt: '2022-05-15T22:59:59+02:00'
          channelId: BOO142
          status: true
          updatedAt: '2022-05-15T22:59:59+02:00'
        status: enabled
    PropertyManagerFeaturesCurrencyFXRates:
      title: PropertyManagerFeaturesCurrencyFXRates
      required:
      - conversionRate
      - createdAt
      - sourceCurrency
      - status
      - targetCurrency
      - updatedAt
      type: object
      properties:
        sourceCurrency:
          type: string
          description: The 3 letter code for the source currency for the conversion
            rate.
          example: EUR
        targetCurrency:
          type: string
          description: The 3 letter code for the target currency for the conversion
            rate.
          example: USD
        conversionRate:
          type: number
          description: The conversion rate that is applicable.
          example: 1.2
        status:
          type: boolean
          description: Flag that indicates if conversion rate is active or not.
          example: true
        createdAt:
          type: string
          description: Timestamp for when the data was created.
          example: '2022-05-15T22:59:59+02:00'
        updatedAt:
          type: string
          description: Timestamp for when the data was last updated.
          example: '2022-05-15T22:59:59+02:00'
        approvedAt:
          type: string
          description: Timestamp for when the data was approved.
          example: '2022-05-15T22:59:59+02:00'
        approvedBy:
          type: string
          description: Indicator for who approved the conversion rate. Can be a user
            id or "system".
          example: system
      example:
        createdAt: '2022-05-15T22:59:59+02:00'
        targetCurrency: USD
        approvedBy: system
        sourceCurrency: EUR
        approvedAt: '2022-05-15T22:59:59+02:00'
        conversionRate: 1.2
        status: true
        updatedAt: '2022-05-15T22:59:59+02:00'
    PropertyRateMultipliersData:
      title: PropertyRateMultipliersData
      required:
      - rateMultipliers
      type: object
      properties:
        rateMultipliers:
          type: array
          items:
            $ref: '#/components/schemas/RateMultiplier'
    PropertyRateMultipliersGetResponse:
      title: PropertyRateMultipliersResponse
      required:
      - rateMultipliers
      - requestId
      type: object
      properties:
        rateMultipliers:
          type: array
          items:
            $ref: '#/components/schemas/RateMultiplier'
        requestId:
          type: string
          description: unique request id used for identification.
          example: d6c84f022bc94ba08558af7873c3f5a1
      example:
        requestId: d6c84f022bc94ba08558af7873c3f5a1
        rateMultipliers:
        - createdAt: '2022-05-15T22:59:59+02:00'
          multiplierRate: 1.2
          approvedBy: system
          approvedAt: '2022-05-15T22:59:59+02:00'
          channelId: BOO142
          status: true
          updatedAt: '2022-05-15T22:59:59+02:00'
        - createdAt: '2022-05-15T22:59:59+02:00'
          multiplierRate: 1.2
          approvedBy: system
          approvedAt: '2022-05-15T22:59:59+02:00'
          channelId: BOO142
          status: true
          updatedAt: '2022-05-15T22:59:59+02:00'
    RateMultiplier:
      title: RateMultiplier
      required:
      - channelId
      - createdAt
      - multiplierRate
      - status
      - updatedAt
      type: object
      properties:
        channelId:
          type: string
          description: The NextPax channel id for which the rate multiplier is applicable.
          example: BOO142
        multiplierRate:
          type: number
          description: "The multiplier rate that is applicable. (1.2 = 20% increase,\
            \ 0.7 = 30% discount)."
          example: 1.2
        status:
          type: boolean
          description: Flag that indicates if multiplier rate is active or not.
          example: true
        createdAt:
          type: string
          description: Timestamp for when the data was created.
          example: '2022-05-15T22:59:59+02:00'
        updatedAt:
          type: string
          description: Timestamp for when the data was last updated.
          example: '2022-05-15T22:59:59+02:00'
        approvedAt:
          type: string
          description: Timestamp for when the data was approved.
          example: '2022-05-15T22:59:59+02:00'
        approvedBy:
          type: string
          description: Indicator for who approved the conversion rate. Can be a user
            id or "system".
          example: system
      example:
        createdAt: '2022-05-15T22:59:59+02:00'
        multiplierRate: 1.2
        approvedBy: system
        approvedAt: '2022-05-15T22:59:59+02:00'
        channelId: BOO142
        status: true
        updatedAt: '2022-05-15T22:59:59+02:00'
    PropertyManagerFeaturesFeeMultipliers:
      title: PropertyManagerFeaturesRateMultipliers
      required:
      - channelId
      - createdAt
      - multiplierRate
      - status
      - updatedAt
      type: object
      properties:
        channelId:
          type: string
          description: The NextPax channel id for which the rate multiplier is applicable.
          example: BOO142
        multiplierRate:
          type: number
          description: "The multiplier rate that is applicable. (1.2 = 20% increase,\
            \ 0.7 = 30% discount)."
          example: 1.2
        status:
          type: boolean
          description: Flag that indicates if multiplier rate is active or not.
          example: true
        createdAt:
          type: string
          description: Timestamp for when the data was created.
          example: '2022-05-15T22:59:59+02:00'
        updatedAt:
          type: string
          description: Timestamp for when the data was last updated.
          example: '2022-05-15T22:59:59+02:00'
        approvedAt:
          type: string
          description: Timestamp for when the data was approved.
          example: '2022-05-15T22:59:59+02:00'
        approvedBy:
          type: string
          description: Indicator for who approved the conversion rate. Can be a user
            id or "system".
          example: system
      example:
        createdAt: '2022-05-15T22:59:59+02:00'
        multiplierRate: 1.2
        approvedBy: system
        approvedAt: '2022-05-15T22:59:59+02:00'
        channelId: BOO142
        status: true
        updatedAt: '2022-05-15T22:59:59+02:00'
    PropertyManagerFeaturesUpdate:
      title: PropertyManagerFeaturesUpdate
      type: object
      properties:
        currencyFx:
          $ref: '#/components/schemas/PropertyManagerFeaturesCurrencyFXDataUpdate'
        rateMultipliers:
          $ref: '#/components/schemas/PropertyManagerFeaturesRateMultipliersDataUpdate'
        feeMultipliers:
          $ref: '#/components/schemas/PropertyManagerFeaturesFeeMultipliersDataUpdate'
    PropertyManagerFeaturesCurrencyFXDataUpdate:
      title: PropertyManagerFeaturesCurrencyFXDataUpdate
      required:
      - fxRates
      - status
      type: object
      properties:
        status:
          type: string
          description: Indicates whether the feature is enabled or disabled
          example: enabled
          enum:
          - enabled
          - disabled
        fxRates:
          type: array
          items:
            $ref: '#/components/schemas/PropertyManagerFeaturesCurrencyFXRatesUpdate'
    PropertyManagerFeaturesRateMultipliersDataUpdate:
      title: PropertyManagerFeaturesRateMultipliersDataUpdate
      required:
      - rateMultipliers
      - status
      type: object
      properties:
        status:
          type: string
          description: Indicates whether the feature is enabled or disabled
          example: enabled
          enum:
          - enabled
          - disabled
        rateMultipliers:
          type: array
          items:
            $ref: '#/components/schemas/RateMultiplier'
    PropertyManagerFeaturesFeeMultipliersDataUpdate:
      title: PropertyManagerFeaturesFeeMultipliersDataUpdate
      required:
      - feeMultipliers
      - status
      type: object
      properties:
        status:
          type: string
          description: Indicates whether the feature is enabled or disabled
          example: enabled
          enum:
          - enabled
          - disabled
        feeMultipliers:
          type: array
          items:
            $ref: '#/components/schemas/PropertyManagerFeaturesFeeMultipliersUpdate'
    PropertyManagerFeaturesCurrencyFXRatesUpdate:
      title: PropertyManagerFeaturesCurrencyFXRatesUpdate
      required:
      - conversionRate
      - sourceCurrency
      - status
      - targetCurrency
      type: object
      properties:
        sourceCurrency:
          type: string
          description: The 3 letter code for the source currency for the conversion
            rate.
          example: EUR
        targetCurrency:
          type: string
          description: The 3 letter code for the target currency for the conversion
            rate.
          example: USD
        conversionRate:
          type: number
          description: The conversion rate that is applicable.
          example: 1.2
        status:
          type: boolean
          description: Flag that indicates if conversion rate is active or not.
          example: true
        approvedBy:
          type: string
          description: Indicator for who approved the conversion rate. Can be a user
            id or "system".
          example: system
    PropertyManagerFeaturesFeeMultipliersUpdate:
      title: PropertyManagerFeaturesRateMultipliersUpdate
      required:
      - channelId
      - multiplierRate
      - status
      type: object
      properties:
        channelId:
          type: string
          description: The NextPax channel id for which the rate multiplier is applicable.
          example: BOO142
        multiplierRate:
          type: number
          description: "The multiplier rate that is applicable. (1.2 = 20% increase,\
            \ 0.7 = 30% discount)."
          example: 1.2
        status:
          type: boolean
          description: Flag that indicates if multiplier rate is active or not.
          example: true
        approvedBy:
          type: string
          description: Indicator for who approved the conversion rate. Can be a user
            id or "system".
          example: system
    Location:
      required:
      - country
      type: object
      properties:
        country:
          type: string
        state:
          type: string
          description: State within the country (optional)
    ChannelBuildStatus:
      required:
      - isFinished
      - lastJobError
      - lastJobRan
      - lastJobStatus
      type: object
      properties:
        isFinished:
          type: boolean
          description: "false,"
        lastJobRan:
          type: string
          description: "update-availabilities,"
        lastJobStatus:
          type: string
          description: failed
        lastJobError:
          type: string
          description: No available dates
      description: Build Status for related channel for this property
      example:
        lastJobStatus: lastJobStatus
        lastJobError: lastJobError
        isFinished: true
        lastJobRan: lastJobRan
    ChannelBuildFlowsResponse:
      required:
      - channelWorkflowDefinitions
      - requestId
      type: object
      properties:
        requestId:
          type: string
          example: d6c84f022bc94ba08558af7873c3f5a1
        channelWorkflowDefinitions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ChannelWorkflowDefinition'
          example:
            AIR298:
              single-unit:
                build-property:
                - string
                open-property:
                - string
                property-content:
                - string
                rates-and-availability:
                - string
                close-property:
                - string
                delete-property:
                - string
              multi-unit:
                build-property:
                - string
                open-property:
                - string
                property-content:
                - string
                rates-and-availability:
                - string
                close-property:
                - string
                delete-property:
                - string
              unit-type:
                build-property:
                - string
                open-property:
                - string
                property-content:
                - string
                rates-and-availability:
                - string
                close-property:
                - string
                delete-property:
                - string
      example:
        requestId: d6c84f022bc94ba08558af7873c3f5a1
        channelWorkflowDefinitions:
          AIR298:
            single-unit:
              build-property:
              - string
              open-property:
              - string
              property-content:
              - string
              rates-and-availability:
              - string
              close-property:
              - string
              delete-property:
              - string
            multi-unit:
              build-property:
              - string
              open-property:
              - string
              property-content:
              - string
              rates-and-availability:
              - string
              close-property:
              - string
              delete-property:
              - string
            unit-type:
              build-property:
              - string
              open-property:
              - string
              property-content:
              - string
              rates-and-availability:
              - string
              close-property:
              - string
              delete-property:
              - string
    ChannelWorkflowDefinition:
      required:
      - multi-unit
      - single-unit
      - unit-type
      type: object
      properties:
        single-unit:
          $ref: '#/components/schemas/UnitDefinition'
        multi-unit:
          $ref: '#/components/schemas/UnitDefinition'
        unit-type:
          $ref: '#/components/schemas/UnitDefinition'
    UnitDefinition:
      required:
      - build-property
      - close-property
      - delete-property
      - open-property
      - property-content
      - rates-and-availability
      type: object
      properties:
        build-property:
          type: array
          items:
            type: string
        open-property:
          type: array
          items:
            type: string
        property-content:
          type: array
          items:
            type: string
        rates-and-availability:
          type: array
          items:
            type: string
        close-property:
          type: array
          items:
            type: string
        delete-property:
          type: array
          items:
            type: string
    PropertyManagerChannelReviewsResponse:
      required:
      - requestId
      - reviews
      properties:
        requestId:
          type: string
          example: d6c84f022bc94ba08558af7873c3f5a1
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/PropertyManagerChannelReview'
      example:
        reviews:
        - ratingCheckInScore: 5
          ratingAccuracyScore: 5
          externalBookingId: externalBookingId
          ratingValueScore: 5
          ratingCleaningScore: 5
          reviewerFirstName: reviewerFirstName
          ratingLocationScore: 5
          ratingScore: 4
          reviewUpdatedAt: reviewUpdatedAt
          createdAt: '2022-05-15T22:59:59+02:00'
          reviewerLoyaltyMemberType: reviewerLoyaltyMemberType
          contentHeadline: Amazing stay in Paris.
          contentNegative: Our breakfast was very cold and not tasty.
          ratingScale: 5
          contentDescription: Our room was very spacious. We had received a free welcome
            drink. The staff was amazing.
          ratingComfortScore: 5
          reviewIsPublic: true
          contentPositive: Our room was very spacious.
          propertyId: propertyId
          ratingAccommodationScore: 5
          channelId: channelId
          ratingCommunicationScore: 5
          ratingHostScore: 3
          contentPrivate: contentPrivate
          reviewTags:
          - reviewTags
          - reviewTags
          reviewCreatedAt: reviewCreatedAt
          contentLanguageCode: contentLanguageCode
          reviewerCountryCode: NL
          reviewId: reviewId
        - ratingCheckInScore: 5
          ratingAccuracyScore: 5
          externalBookingId: externalBookingId
          ratingValueScore: 5
          ratingCleaningScore: 5
          reviewerFirstName: reviewerFirstName
          ratingLocationScore: 5
          ratingScore: 4
          reviewUpdatedAt: reviewUpdatedAt
          createdAt: '2022-05-15T22:59:59+02:00'
          reviewerLoyaltyMemberType: reviewerLoyaltyMemberType
          contentHeadline: Amazing stay in Paris.
          contentNegative: Our breakfast was very cold and not tasty.
          ratingScale: 5
          contentDescription: Our room was very spacious. We had received a free welcome
            drink. The staff was amazing.
          ratingComfortScore: 5
          reviewIsPublic: true
          contentPositive: Our room was very spacious.
          propertyId: propertyId
          ratingAccommodationScore: 5
          channelId: channelId
          ratingCommunicationScore: 5
          ratingHostScore: 3
          contentPrivate: contentPrivate
          reviewTags:
          - reviewTags
          - reviewTags
          reviewCreatedAt: reviewCreatedAt
          contentLanguageCode: contentLanguageCode
          reviewerCountryCode: NL
          reviewId: reviewId
        requestId: d6c84f022bc94ba08558af7873c3f5a1
    PropertyManagerChannelReview:
      required:
      - channelId
      - contentDescription
      - createdAt
      - externalBookingId
      - propertyId
      - reviewId
      type: object
      properties:
        propertyId:
          type: string
        channelId:
          type: string
        reviewId:
          type: string
        createdAt:
          type: string
          format: datetime
          example: '2022-05-15T22:59:59+02:00'
        externalBookingId:
          type: string
        contentLanguageCode:
          type: string
        contentHeadline:
          type: string
          description: The title of the review if applicable.
          example: Amazing stay in Paris.
        contentDescription:
          type: string
          description: The actual text or body of the review.
          example: Our room was very spacious. We had received a free welcome drink.
            The staff was amazing.
        contentPositive:
          type: string
          description: The actual text which indicates a positive comment if applicable.
          example: Our room was very spacious.
        contentNegative:
          type: string
          description: The actual text which indicates a negative comment if applicable.
          example: Our breakfast was very cold and not tasty.
        contentPrivate:
          type: string
        ratingScale:
          type: integer
          description: Indicates the score scale used. Required if any of the scores
            is provided.
          example: 5
        ratingScore:
          type: number
          description: The actual score of the review on the scale indicated in ratingScale.
          format: float
          example: 4
        ratingAccuracyScore:
          type: number
          description: The score given for a subtopic on the scale indicated in ratingScale.
          format: float
          example: 5
        ratingCheckInScore:
          type: number
          description: The score given for a subtopic on the scale indicated in ratingScale.
          format: float
          example: 5
        ratingCleaningScore:
          type: number
          description: The score given for a subtopic on the scale indicated in ratingScale.
          format: float
          example: 5
        ratingComfortScore:
          type: number
          description: The score given for a subtopic on the scale indicated in ratingScale.
          format: float
          example: 5
        ratingCommunicationScore:
          type: number
          description: The score given for a subtopic on the scale indicated in ratingScale.
          format: float
          example: 5
        ratingAccommodationScore:
          type: number
          description: The score given for a subtopic on the scale indicated in ratingScale.
          format: float
          example: 5
        ratingLocationScore:
          type: number
          description: The score given for a subtopic on the scale indicated in ratingScale.
          format: float
          example: 5
        ratingHostScore:
          type: number
          description: The score given for a subtopic on the scale indicated in ratingScale.
          format: float
          example: 3
        ratingValueScore:
          type: number
          description: The score given for a subtopic on the scale indicated in ratingScale.
          format: float
          example: 5
        reviewerFirstName:
          type: string
        reviewerCountryCode:
          type: string
          description: A 2 letter code which indicates the country code of the guest.
            Please see constants locations endpoint for country codes.
          example: NL
        reviewerLoyaltyMemberType:
          type: string
        reviewIsPublic:
          type: boolean
        reviewCreatedAt:
          type: string
        reviewUpdatedAt:
          type: string
        reviewTags:
          type: array
          items:
            type: string
      example:
        ratingCheckInScore: 5
        ratingAccuracyScore: 5
        externalBookingId: externalBookingId
        ratingValueScore: 5
        ratingCleaningScore: 5
        reviewerFirstName: reviewerFirstName
        ratingLocationScore: 5
        ratingScore: 4
        reviewUpdatedAt: reviewUpdatedAt
        createdAt: '2022-05-15T22:59:59+02:00'
        reviewerLoyaltyMemberType: reviewerLoyaltyMemberType
        contentHeadline: Amazing stay in Paris.
        contentNegative: Our breakfast was very cold and not tasty.
        ratingScale: 5
        contentDescription: Our room was very spacious. We had received a free welcome
          drink. The staff was amazing.
        ratingComfortScore: 5
        reviewIsPublic: true
        contentPositive: Our room was very spacious.
        propertyId: propertyId
        ratingAccommodationScore: 5
        channelId: channelId
        ratingCommunicationScore: 5
        ratingHostScore: 3
        contentPrivate: contentPrivate
        reviewTags:
        - reviewTags
        - reviewTags
        reviewCreatedAt: reviewCreatedAt
        contentLanguageCode: contentLanguageCode
        reviewerCountryCode: NL
        reviewId: reviewId
    PropertyChannelReviewsResponse:
      required:
      - requestId
      - reviews
      properties:
        requestId:
          type: string
          example: d6c84f022bc94ba08558af7873c3f5a1
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/PropertyChannelReview'
      example:
        reviews:
        - ratingCheckInScore: 5
          ratingAccuracyScore: 5
          externalBookingId: externalBookingId
          ratingValueScore: 5
          ratingCleaningScore: 5
          reviewerFirstName: reviewerFirstName
          ratingLocationScore: 5
          ratingScore: 4
          reviewUpdatedAt: reviewUpdatedAt
          createdAt: '2022-05-15T22:59:59+02:00'
          reviewerLoyaltyMemberType: reviewerLoyaltyMemberType
          contentHeadline: Amazing stay in Paris.
          contentNegative: Our breakfast was very cold and not tasty.
          ratingScale: 5
          contentDescription: Our room was very spacious. We had received a free welcome
            drink. The staff was amazing.
          ratingComfortScore: 5
          reviewIsPublic: true
          contentPositive: Our room was very spacious.
          ratingAccommodationScore: 5
          channelId: channelId
          ratingCommunicationScore: 5
          ratingHostScore: 3
          contentPrivate: contentPrivate
          reviewTags:
          - reviewTags
          - reviewTags
          reviewCreatedAt: reviewCreatedAt
          contentLanguageCode: contentLanguageCode
          reviewerCountryCode: NL
          reviewId: reviewId
        - ratingCheckInScore: 5
          ratingAccuracyScore: 5
          externalBookingId: externalBookingId
          ratingValueScore: 5
          ratingCleaningScore: 5
          reviewerFirstName: reviewerFirstName
          ratingLocationScore: 5
          ratingScore: 4
          reviewUpdatedAt: reviewUpdatedAt
          createdAt: '2022-05-15T22:59:59+02:00'
          reviewerLoyaltyMemberType: reviewerLoyaltyMemberType
          contentHeadline: Amazing stay in Paris.
          contentNegative: Our breakfast was very cold and not tasty.
          ratingScale: 5
          contentDescription: Our room was very spacious. We had received a free welcome
            drink. The staff was amazing.
          ratingComfortScore: 5
          reviewIsPublic: true
          contentPositive: Our room was very spacious.
          ratingAccommodationScore: 5
          channelId: channelId
          ratingCommunicationScore: 5
          ratingHostScore: 3
          contentPrivate: contentPrivate
          reviewTags:
          - reviewTags
          - reviewTags
          reviewCreatedAt: reviewCreatedAt
          contentLanguageCode: contentLanguageCode
          reviewerCountryCode: NL
          reviewId: reviewId
        requestId: d6c84f022bc94ba08558af7873c3f5a1
    PropertyChannelReview:
      required:
      - channelId
      - contentDescription
      - createdAt
      - externalBookingId
      - payload
      - reviewId
      type: object
      properties:
        channelId:
          type: string
        reviewId:
          type: string
        createdAt:
          type: string
          format: datetime
          example: '2022-05-15T22:59:59+02:00'
        externalBookingId:
          type: string
        contentLanguageCode:
          type: string
        contentHeadline:
          type: string
          description: The title of the review if applicable.
          example: Amazing stay in Paris.
        contentDescription:
          type: string
          description: The actual text or body of the review.
          example: Our room was very spacious. We had received a free welcome drink.
            The staff was amazing.
        contentPositive:
          type: string
          description: The actual text which indicates a positive comment if applicable.
          example: Our room was very spacious.
        contentNegative:
          type: string
          description: The actual text which indicates a negative comment if applicable.
          example: Our breakfast was very cold and not tasty.
        contentPrivate:
          type: string
        ratingScale:
          type: integer
          description: Indicates the score scale used. Required if any of the scores
            is provided.
          example: 5
        ratingScore:
          type: number
          description: The actual score of the review on the scale indicated in ratingScale.
          format: float
          example: 4
        ratingAccuracyScore:
          type: number
          description: The score given for a subtopic on the scale indicated in ratingScale.
          format: float
          example: 5
        ratingCheckInScore:
          type: number
          description: The score given for a subtopic on the scale indicated in ratingScale.
          format: float
          example: 5
        ratingCleaningScore:
          type: number
          description: The score given for a subtopic on the scale indicated in ratingScale.
          format: float
          example: 5
        ratingComfortScore:
          type: number
          description: The score given for a subtopic on the scale indicated in ratingScale.
          format: float
          example: 5
        ratingCommunicationScore:
          type: number
          description: The score given for a subtopic on the scale indicated in ratingScale.
          format: float
          example: 5
        ratingAccommodationScore:
          type: number
          description: The score given for a subtopic on the scale indicated in ratingScale.
          format: float
          example: 5
        ratingLocationScore:
          type: number
          description: The score given for a subtopic on the scale indicated in ratingScale.
          format: float
          example: 5
        ratingHostScore:
          type: number
          description: The score given for a subtopic on the scale indicated in ratingScale.
          format: float
          example: 3
        ratingValueScore:
          type: number
          description: The score given for a subtopic on the scale indicated in ratingScale.
          format: float
          example: 5
        reviewerFirstName:
          type: string
        reviewerCountryCode:
          type: string
          description: A 2 letter code which indicates the country code of the guest.
            Please see constants locations endpoint for country codes.
          example: NL
        reviewerLoyaltyMemberType:
          type: string
        reviewIsPublic:
          type: boolean
        reviewCreatedAt:
          type: string
        reviewUpdatedAt:
          type: string
        reviewTags:
          type: array
          items:
            type: string
      example:
        ratingCheckInScore: 5
        ratingAccuracyScore: 5
        externalBookingId: externalBookingId
        ratingValueScore: 5
        ratingCleaningScore: 5
        reviewerFirstName: reviewerFirstName
        ratingLocationScore: 5
        ratingScore: 4
        reviewUpdatedAt: reviewUpdatedAt
        createdAt: '2022-05-15T22:59:59+02:00'
        reviewerLoyaltyMemberType: reviewerLoyaltyMemberType
        contentHeadline: Amazing stay in Paris.
        contentNegative: Our breakfast was very cold and not tasty.
        ratingScale: 5
        contentDescription: Our room was very spacious. We had received a free welcome
          drink. The staff was amazing.
        ratingComfortScore: 5
        reviewIsPublic: true
        contentPositive: Our room was very spacious.
        ratingAccommodationScore: 5
        channelId: channelId
        ratingCommunicationScore: 5
        ratingHostScore: 3
        contentPrivate: contentPrivate
        reviewTags:
        - reviewTags
        - reviewTags
        reviewCreatedAt: reviewCreatedAt
        contentLanguageCode: contentLanguageCode
        reviewerCountryCode: NL
        reviewId: reviewId
    PropertyManagerGeneralInformation_hostInformationTranslations:
      required:
      - isDefault
      - translation
      type: object
      properties:
        translation:
          type: string
          description: Translation of the host information
          example: "Run by a family, these accommodations offer the best of the best"
        isDefault:
          type: boolean
          description: "If this field is true, this translation will be used as a\
            \ default one"
          example: true
      example: null
    PropertyManagerChannelSpecificCancellationPolicy_customRules:
      type: object
      properties:
        afterBookingAmountType:
          type: string
          description: "If there is a cancellation amount taken AFTER the booking\
            \ is made here we defined the type per_night, fixed_amount, percentage."
          enum:
          - null
          - per_night
          - fixed_amount
          - percentage
        afterBookingAmount:
          type: integer
          description: If there is a cancellation amount taken AFTER the booking is
            made here we defined the actual amount in relation to the amount type.
        afterBookingHours:
          type: integer
          description: "If there is a cancellation amount taken AFTER the booking\
            \ is made here we defined the time (in hours) it applies after the booking\
            \ is made. For example, 0 indicates a non-refundable booking as the amount\
            \ is due right after a reservation is made."
        beforeArrivalAmountType:
          type: string
          description: "If there is a cancellation amount taken BEFORE the guest arrives\
            \ then here we define the amount type per_night, fixed_amount, percentage."
          enum:
          - null
          - per_night
          - fixed_amount
          - percentage
        beforeArrivalAmount:
          type: integer
          description: If there is a cancellation amount taken BEFORE the guest arrives
            then here we define the amount in relation to the amount type.
        beforeArrivalHours:
          type: integer
          description: If there is a cancellation amount taken BEFORE the guest arrives
            then here we define the time (in hours) before the guest arrival.
        beforeArrivalAmountType2:
          type: string
          description: "If there is a cancellation amount taken BEFORE the guest arrives\
            \ then here we define the amount type per_night, fixed_amount, percentage."
          enum:
          - null
          - per_night
          - fixed_amount
          - percentage
        beforeArrivalAmount2:
          type: integer
          description: If there is a cancellation amount taken BEFORE the guest arrives
            then here we define the amount in relation to the amount type.
        beforeArrivalHours2:
          type: integer
          description: If there is a cancellation amount taken BEFORE the guest arrives
            then here we define the time (in hours) before the guest arrival.
        beforeArrivalAmountType3:
          type: string
          description: "If there is a cancellation amount taken BEFORE the guest arrives\
            \ then here we define the amount type per_night, fixed_amount, percentage."
          enum:
          - null
          - per_night
          - fixed_amount
          - percentage
        beforeArrivalAmount3:
          type: integer
          description: If there is a cancellation amount taken BEFORE the guest arrives
            then here we define the amount in relation to the amount type.
        beforeArrivalHours3:
          type: integer
          description: If there is a cancellation amount taken BEFORE the guest arrives
            then here we define the time (in hours) before the guest arrival.
        customFixedAmount:
          type: integer
          description: If there is a custom fixed cancellation amount then it can
            be defined here in cents.
        customFixedAmountCurrencyCode:
          type: string
          description: This is the currency code 3 letter format for the fixed custom
            cancellation amount. See mapping-codes endpoint for all values.
      example: null
  securitySchemes:
    openIdProd:
      type: oauth2
      description: Production Auth
      flows:
        clientCredentials:
          tokenUrl: /auth/realms/supply-api-production/protocol/openid-connect/token
          refreshUrl: /auth/realms/supply-api-production/protocol/openid-connect/token
          scopes: {}
    openIdSandbox:
      type: oauth2
      description: Sandbox Auth
      flows:
        clientCredentials:
          tokenUrl: /auth/realms/supply-api-sandbox/protocol/openid-connect/token
          refreshUrl: /auth/realms/supply-api-sandbox/protocol/openid-connect/token
          scopes: {}